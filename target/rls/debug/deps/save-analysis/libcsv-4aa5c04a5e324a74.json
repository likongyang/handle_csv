{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4","program":"/Users/likongyang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","csv","--edition=2018","/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4aa5c04a5e324a74","-C","extra-filename=-4aa5c04a5e324a74","--out-dir","/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps","-L","dependency=/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps","--extern","bstr=/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps/libbstr-c19bec023379cdda.rmeta","--extern","csv_core=/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps/libcsv_core-206e6a1f23cdeffe.rmeta","--extern","itoa=/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps/libitoa-d8fce81416fbc2bf.rmeta","--extern","ryu=/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps/libryu-9b091c9e60a616c6.rmeta","--extern","serde=/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps/libserde-41c8c394ebcfb0ee.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/likongyang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/likongyang/Desktop/wenlvdianxiao/wenlv/target/rls/debug/deps/libcsv-4aa5c04a5e324a74.rmeta"},"prelude":{"crate_id":{"name":"csv","disambiguator":[3076985974670507627,1951346873268490678]},"crate_root":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src","external_crates":[{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12678783859402539130,11033699271647822562]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5902495869598878631,6483651549774204679]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12311488937759207811,9591695617658421232]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13642764918293034548,9567326413417207759]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13989086203811079768,14781321679734955535]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18262239609673298908,5174085264251780333]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15596655843449967889,8729491543963844827]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8633493352746497996,3308549486174864674]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9090856330303166257,15266389826979080272]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10275868503320404072,15700038594031858524]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16931781941529345914,7757858263785678856]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17386117254425836477,8366695672852535875]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6497267535012603728,15523194060056832509]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5307688171077319232,12990389752959085457]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","num":15,"id":{"name":"serde","disambiguator":[5834417990705418466,14941850339176881047]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","num":16,"id":{"name":"bstr","disambiguator":[9400427636546607073,1811189158351430533]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","num":17,"id":{"name":"lazy_static","disambiguator":[13299564837578056420,18366817922499744147]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","num":18,"id":{"name":"memchr","disambiguator":[284229999004954708,5880081637463037025]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","num":19,"id":{"name":"regex_automata","disambiguator":[541131703392657605,14047917381450265744]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","num":20,"id":{"name":"byteorder","disambiguator":[459224287874128981,9241570351582264239]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","num":21,"id":{"name":"csv_core","disambiguator":[6462666016930153046,10449535313245619059]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/serializer.rs","num":22,"id":{"name":"itoa","disambiguator":[11301547908282457104,16360641007265204549]}},{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/serializer.rs","num":23,"id":{"name":"ryu","disambiguator":[597112317178263674,7144166876880272420]}}],"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":0,"byte_end":10434,"line_start":1,"line_end":359,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3806,"byte_end":3816,"line_start":156,"line_end":156,"column_start":30,"column_end":40},"alias_span":null,"name":"ByteRecord","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3818,"byte_end":3832,"line_start":156,"line_end":156,"column_start":42,"column_end":56},"alias_span":null,"name":"ByteRecordIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3834,"byte_end":3842,"line_start":156,"line_end":156,"column_start":58,"column_end":66},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3875,"byte_end":3891,"line_start":157,"line_end":157,"column_start":31,"column_end":47},"alias_span":null,"name":"DeserializeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3893,"byte_end":3913,"line_start":157,"line_end":157,"column_start":49,"column_end":69},"alias_span":null,"name":"DeserializeErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3944,"byte_end":3949,"line_start":159,"line_end":159,"column_start":5,"column_end":10},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1256},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3951,"byte_end":3960,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3962,"byte_end":3975,"line_start":159,"line_end":159,"column_start":23,"column_end":36},"alias_span":null,"name":"FromUtf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3977,"byte_end":3991,"line_start":159,"line_end":159,"column_start":38,"column_end":52},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3993,"byte_end":3999,"line_start":159,"line_end":159,"column_start":54,"column_end":60},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1293},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4001,"byte_end":4010,"line_start":159,"line_end":159,"column_start":62,"column_end":71},"alias_span":null,"name":"Utf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4044,"byte_end":4063,"line_start":162,"line_end":162,"column_start":5,"column_end":24},"alias_span":null,"name":"ByteRecordsIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":615},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4065,"byte_end":4080,"line_start":162,"line_end":162,"column_start":26,"column_end":41},"alias_span":null,"name":"ByteRecordsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4082,"byte_end":4108,"line_start":162,"line_end":162,"column_start":43,"column_end":69},"alias_span":null,"name":"DeserializeRecordsIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4114,"byte_end":4136,"line_start":163,"line_end":163,"column_start":5,"column_end":27},"alias_span":null,"name":"DeserializeRecordsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4138,"byte_end":4144,"line_start":163,"line_end":163,"column_start":29,"column_end":35},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4146,"byte_end":4159,"line_start":163,"line_end":163,"column_start":37,"column_end":50},"alias_span":null,"name":"ReaderBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":571},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4161,"byte_end":4182,"line_start":163,"line_end":163,"column_start":52,"column_end":73},"alias_span":null,"name":"StringRecordsIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4188,"byte_end":4205,"line_start":164,"line_end":164,"column_start":5,"column_end":22},"alias_span":null,"name":"StringRecordsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1362},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4241,"byte_end":4253,"line_start":166,"line_end":166,"column_start":32,"column_end":44},"alias_span":null,"name":"StringRecord","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4255,"byte_end":4271,"line_start":166,"line_end":166,"column_start":46,"column_end":62},"alias_span":null,"name":"StringRecordIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4298,"byte_end":4304,"line_start":167,"line_end":167,"column_start":25,"column_end":31},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4306,"byte_end":4319,"line_start":167,"line_end":167,"column_start":33,"column_end":46},"alias_span":null,"name":"WriterBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":0,"byte_end":10434,"line_start":1,"line_end":359,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":21},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":389},{"krate":0,"index":449},{"krate":0,"index":631},{"krate":0,"index":916},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1417},{"krate":0,"index":1431},{"krate":0,"index":1430},{"krate":0,"index":1428},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1433},{"krate":0,"index":1444},{"krate":0,"index":1443},{"krate":0,"index":1441},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1446},{"krate":0,"index":1463},{"krate":0,"index":1462},{"krate":0,"index":1460},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1102}],"decl_id":null,"docs":"The `csv` crate provides a fast and flexible CSV reader and writer, with\nsupport for Serde.","sig":null,"attributes":[{"value":"!\nThe `csv` crate provides a fast and flexible CSV reader and writer, with\nsupport for Serde.\n\nThe [tutorial](tutorial/index.html) is a good place to start if you're new to\nRust.\n\nThe [cookbook](cookbook/index.html) will give you a variety of complete Rust\nprograms that do CSV reading and writing.\n\n# Brief overview\n\n**If you're new to Rust**, you might find the\n[tutorial](tutorial/index.html)\nto be a good place to start.\n\nThe primary types in this crate are\n[`Reader`](struct.Reader.html)\nand\n[`Writer`](struct.Writer.html),\nfor reading and writing CSV data respectively.\nCorrespondingly, to support CSV data with custom field or record delimiters\n(among many other things), you should use either a\n[`ReaderBuilder`](struct.ReaderBuilder.html)\nor a\n[`WriterBuilder`](struct.WriterBuilder.html),\ndepending on whether you're reading or writing CSV data.\n\nUnless you're using Serde, the standard CSV record types are\n[`StringRecord`](struct.StringRecord.html)\nand\n[`ByteRecord`](struct.ByteRecord.html).\n`StringRecord` should be used when you know your data to be valid UTF-8.\nFor data that may be invalid UTF-8, `ByteRecord` is suitable.\n\nFinally, the set of errors is described by the\n[`Error`](struct.Error.html)\ntype.\n\nThe rest of the types in this crate mostly correspond to more detailed errors,\nposition information, configuration knobs or iterator types.\n\n# Setup\n\nAdd this to your `Cargo.toml`:\n\n```toml\n[dependencies]\ncsv = \"1.1\"\n```\n\nIf you want to use Serde's custom derive functionality on your custom structs,\nthen add this to your `[dependencies]` section of `Cargo.toml`:\n\n```toml\n[dependencies]\nserde = { version = \"1\", features = [\"derive\"] }\n```\n\n# Example\n\nThis example shows how to read CSV data from stdin and print each record to\nstdout.\n\nThere are more examples in the [cookbook](cookbook/index.html).\n\n```no_run\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn example() -> Result<(), Box<dyn Error>> {\n    // Build the CSV reader and iterate over each record.\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        // The iterator yields Result<StringRecord, Error>, so we check the\n        // error here.\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-read-basic < examples/data/smallpop.csv\n```\n\n# Example with Serde\n\nThis example shows how to read CSV data from stdin into your own custom struct.\nBy default, the member names of the struct are matched with the values in the\nheader record of your CSV data.\n\n```no_run\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nuse serde::Deserialize;\n\n#[derive(Debug, Deserialize)]\nstruct Record {\n    city: String,\n    region: String,\n    country: String,\n    population: Option<u64>,\n}\n\nfn example() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.deserialize() {\n        // Notice that we need to provide a type hint for automatic\n        // deserialization.\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-read-serde < examples/data/smallpop.csv\n```\n\n*/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":0,"byte_end":3692,"line_start":1,"line_end":148,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":3694,"byte_end":3716,"line_start":150,"line_end":150,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11840,"byte_end":11850,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"ByteRecord","qualname":"::byte_record::ByteRecord","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single CSV record stored as raw bytes.","sig":null,"attributes":[{"value":"/ A single CSV record stored as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":10747,"byte_end":10791,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":10792,"byte_end":10795,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A byte record permits reading or writing CSV rows that are not UTF-8.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":10796,"byte_end":10869,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ In general, you should prefer using a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":10870,"byte_end":10911,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ [`StringRecord`](struct.StringRecord.html)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":10912,"byte_end":10958,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/ since it is more ergonomic, but a `ByteRecord` is provided in case you need","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":10959,"byte_end":11038,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11039,"byte_end":11046,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11047,"byte_end":11050,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you are using the Serde (de)serialization APIs, then you probably never","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11051,"byte_end":11129,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ need to interact with a `ByteRecord` or a `StringRecord`. However, there","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11130,"byte_end":11206,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ are some circumstances in which you might need to use a raw record type","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11207,"byte_end":11282,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ while still using Serde. For example, if you need to deserialize possibly","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11283,"byte_end":11360,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ invalid UTF-8 fields, then you'll need to first read your record into a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11361,"byte_end":11436,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ `ByteRecord`, and then use `ByteRecord::deserialize` to run Serde. Another","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11437,"byte_end":11515,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ reason for using the raw record deserialization APIs is if you're using","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11516,"byte_end":11591,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ Serde to read into borrowed data such as a `&'a str` or a `&'a [u8]`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11592,"byte_end":11665,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11666,"byte_end":11669,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Two `ByteRecord`s are compared on the basis of their field data. Any","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11670,"byte_end":11742,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ position information associated with the records is ignored.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11743,"byte_end":11807,"line_start":32,"line_end":32,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14308,"byte_end":14311,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteRecord>::new","value":"fn () -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `ByteRecord`.","sig":null,"attributes":[{"value":"/ Create a new empty `ByteRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13675,"byte_end":13711,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13716,"byte_end":13719,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that you may find the `ByteRecord::from` constructor more","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13724,"byte_end":13790,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/ convenient, which is provided by an impl on the `From` trait.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13795,"byte_end":13860,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13865,"byte_end":13868,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example: create an empty record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13873,"byte_end":13910,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13915,"byte_end":13918,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13923,"byte_end":13930,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13935,"byte_end":13959,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13964,"byte_end":13967,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13972,"byte_end":14007,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(record.len(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14012,"byte_end":14044,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14049,"byte_end":14056,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14061,"byte_end":14064,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example: initialize a record from a `Vec`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14069,"byte_end":14116,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14121,"byte_end":14124,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14129,"byte_end":14136,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14141,"byte_end":14165,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14170,"byte_end":14173,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14178,"byte_end":14233,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14238,"byte_end":14270,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14275,"byte_end":14282,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14287,"byte_end":14296,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14660,"byte_end":14673,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ByteRecord>::with_capacity","value":"fn (buffer: usize, fields: usize) -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `ByteRecord` with the given capacity settings.","sig":null,"attributes":[{"value":"/ Create a new empty `ByteRecord` with the given capacity settings.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14381,"byte_end":14450,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14455,"byte_end":14458,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ `buffer` refers to the capacity of the buffer used to store the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14463,"byte_end":14530,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/ actual row contents. `fields` refers to the number of fields one","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14535,"byte_end":14603,"line_start":133,"line_end":133,"column_start":5,"column_end":73}},{"value":"/ might expect to store.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14608,"byte_end":14634,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14639,"byte_end":14648,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17864,"byte_end":17875,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<ByteRecord>::deserialize","value":"fn <'de, D> (&'de self, headers: Option<&'de ByteRecord>) -> Result<D>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize this record.","sig":null,"attributes":[{"value":"/ Deserialize this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14900,"byte_end":14928,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14933,"byte_end":14936,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The `D` type parameter refers to the type that this record should be","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":14941,"byte_end":15013,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ deserialized into. The `'de` lifetime refers to the lifetime of the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15018,"byte_end":15089,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ `ByteRecord`. The `'de` lifetime permits deserializing into structs","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15094,"byte_end":15165,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ that borrow field data from this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15170,"byte_end":15214,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15219,"byte_end":15222,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ An optional `headers` parameter permits deserializing into a struct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15227,"byte_end":15298,"line_start":151,"line_end":151,"column_start":5,"column_end":76}},{"value":"/ based on its field names (corresponding to header values) rather than","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15303,"byte_end":15376,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the order in which the fields are defined.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15381,"byte_end":15427,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15432,"byte_end":15435,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example: without headers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15440,"byte_end":15470,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15475,"byte_end":15478,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This shows how to deserialize a single row into a struct based on the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15483,"byte_end":15556,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ order in which fields occur. This example also shows how to borrow","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15561,"byte_end":15631,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ fields from the `ByteRecord`, which results in zero allocation","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15636,"byte_end":15702,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ deserialization.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15707,"byte_end":15727,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15732,"byte_end":15735,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15740,"byte_end":15747,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15752,"byte_end":15778,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15783,"byte_end":15786,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15791,"byte_end":15815,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15820,"byte_end":15847,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15852,"byte_end":15855,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15860,"byte_end":15886,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/ struct Row<'a> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15891,"byte_end":15911,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/     city: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15916,"byte_end":15938,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/     country: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15943,"byte_end":15968,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":15973,"byte_end":15997,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16002,"byte_end":16007,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16012,"byte_end":16015,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap() }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16020,"byte_end":16058,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16063,"byte_end":16111,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/     let record = ByteRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16116,"byte_end":16159,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/         \"Boston\", \"United States\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16164,"byte_end":16213,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16218,"byte_end":16229,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16234,"byte_end":16237,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let row: Row = record.deserialize(None)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16242,"byte_end":16291,"line_start":181,"line_end":181,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(row.city, \"Boston\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16296,"byte_end":16335,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(row.country, \"United States\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16340,"byte_end":16389,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(row.population, 4628910);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16394,"byte_end":16438,"line_start":184,"line_end":184,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16443,"byte_end":16457,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16462,"byte_end":16467,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16472,"byte_end":16479,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16484,"byte_end":16487,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example: with headers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16492,"byte_end":16519,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16524,"byte_end":16527,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This example is like the previous one, but shows how to deserialize","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16532,"byte_end":16603,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ into a struct based on the struct's field names. For this to work,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16608,"byte_end":16678,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/ you must provide a header row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16683,"byte_end":16717,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16722,"byte_end":16725,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This example also shows that you can deserialize into owned data","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16730,"byte_end":16798,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ types (e.g., `String`) instead of borrowed data types (e.g., `&str`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16803,"byte_end":16876,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16881,"byte_end":16884,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16889,"byte_end":16896,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16901,"byte_end":16927,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16932,"byte_end":16935,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16940,"byte_end":16964,"line_start":201,"line_end":201,"column_start":5,"column_end":29}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":16969,"byte_end":16996,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17001,"byte_end":17004,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17009,"byte_end":17035,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17040,"byte_end":17056,"line_start":205,"line_end":205,"column_start":5,"column_end":21}},{"value":"/     city: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17061,"byte_end":17082,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/     country: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17087,"byte_end":17111,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17116,"byte_end":17140,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17145,"byte_end":17150,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17155,"byte_end":17158,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap() }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17163,"byte_end":17201,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17206,"byte_end":17254,"line_start":212,"line_end":212,"column_start":5,"column_end":53}},{"value":"/     // Notice that the fields are not in the same order","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17259,"byte_end":17318,"line_start":213,"line_end":213,"column_start":5,"column_end":64}},{"value":"/     // as the fields in the struct!","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17323,"byte_end":17362,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"/     let header = ByteRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17367,"byte_end":17410,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/         \"country\", \"city\", \"population\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17415,"byte_end":17459,"line_start":216,"line_end":216,"column_start":5,"column_end":49}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17464,"byte_end":17475,"line_start":217,"line_end":217,"column_start":5,"column_end":16}},{"value":"/     let record = ByteRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17480,"byte_end":17523,"line_start":218,"line_end":218,"column_start":5,"column_end":48}},{"value":"/         \"United States\", \"Boston\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17528,"byte_end":17577,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17582,"byte_end":17593,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17598,"byte_end":17601,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     let row: Row = record.deserialize(Some(&header))?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17606,"byte_end":17664,"line_start":222,"line_end":222,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(row.city, \"Boston\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17669,"byte_end":17708,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(row.country, \"United States\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17713,"byte_end":17762,"line_start":224,"line_end":224,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(row.population, 4628910);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17767,"byte_end":17811,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17816,"byte_end":17830,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17835,"byte_end":17840,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":17845,"byte_end":17852,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18481,"byte_end":18485,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"iter","qualname":"<ByteRecord>::iter","value":"fn (&self) -> ByteRecordIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all fields in this record.","sig":null,"attributes":[{"value":"/ Returns an iterator over all fields in this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18043,"byte_end":18098,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18103,"byte_end":18106,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18111,"byte_end":18124,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18129,"byte_end":18132,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This example shows how to iterate over each field in a `ByteRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18137,"byte_end":18209,"line_start":240,"line_end":240,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18214,"byte_end":18217,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18222,"byte_end":18229,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18234,"byte_end":18258,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18263,"byte_end":18266,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18271,"byte_end":18326,"line_start":245,"line_end":245,"column_start":5,"column_end":60}},{"value":"/ for field in record.iter() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18331,"byte_end":18363,"line_start":246,"line_end":246,"column_start":5,"column_end":37}},{"value":"/     assert!(field == b\"a\" || field == b\"b\" || field == b\"c\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18368,"byte_end":18433,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18438,"byte_end":18443,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18448,"byte_end":18455,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18460,"byte_end":18469,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18932,"byte_end":18935,"line_start":269,"line_end":269,"column_start":12,"column_end":15},"name":"get","qualname":"<ByteRecord>::get","value":"fn (&self, i: usize) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the field at index `i`.","sig":null,"attributes":[{"value":"/ Return the field at index `i`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18549,"byte_end":18583,"line_start":255,"line_end":255,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18588,"byte_end":18591,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If no field at index `i` exists, then this returns `None`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18596,"byte_end":18658,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18663,"byte_end":18666,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18671,"byte_end":18684,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18689,"byte_end":18692,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18697,"byte_end":18704,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18709,"byte_end":18733,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18738,"byte_end":18741,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18746,"byte_end":18801,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(record.get(1), Some(&b\"b\"[..]));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18806,"byte_end":18853,"line_start":265,"line_end":265,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(record.get(3), None);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18858,"byte_end":18894,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18899,"byte_end":18906,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":18911,"byte_end":18920,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19268,"byte_end":19276,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ByteRecord>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this record is empty.","sig":null,"attributes":[{"value":"/ Returns true if and only if this record is empty.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19047,"byte_end":19100,"line_start":273,"line_end":273,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19105,"byte_end":19108,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19113,"byte_end":19126,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19131,"byte_end":19134,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19139,"byte_end":19146,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19151,"byte_end":19175,"line_start":278,"line_end":278,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19180,"byte_end":19183,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ assert!(ByteRecord::new().is_empty());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19188,"byte_end":19230,"line_start":280,"line_end":280,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19235,"byte_end":19242,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19247,"byte_end":19256,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19595,"byte_end":19598,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<ByteRecord>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this record.","sig":null,"attributes":[{"value":"/ Returns the number of fields in this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19329,"byte_end":19377,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19382,"byte_end":19385,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19390,"byte_end":19403,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19408,"byte_end":19411,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19416,"byte_end":19423,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19428,"byte_end":19452,"line_start":292,"line_end":292,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19457,"byte_end":19460,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19465,"byte_end":19520,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19525,"byte_end":19557,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19562,"byte_end":19569,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19574,"byte_end":19583,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20130,"byte_end":20138,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"truncate","qualname":"<ByteRecord>::truncate","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncate this record to `n` fields.","sig":null,"attributes":[{"value":"/ Truncate this record to `n` fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19656,"byte_end":19695,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19700,"byte_end":19703,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If `n` is greater than the number of fields in this record, then this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19708,"byte_end":19781,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ has no effect.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19786,"byte_end":19804,"line_start":305,"line_end":305,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19809,"byte_end":19812,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19817,"byte_end":19830,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19835,"byte_end":19838,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19843,"byte_end":19850,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19855,"byte_end":19879,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19884,"byte_end":19887,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let mut record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19892,"byte_end":19951,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19956,"byte_end":19988,"line_start":313,"line_end":313,"column_start":5,"column_end":37}},{"value":"/ record.truncate(1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":19993,"byte_end":20016,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(record.len(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20021,"byte_end":20053,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(record, vec![\"a\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20058,"byte_end":20092,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20097,"byte_end":20104,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20109,"byte_end":20118,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20747,"byte_end":20752,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"clear","qualname":"<ByteRecord>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear this record so that it has zero fields.","sig":null,"attributes":[{"value":"/ Clear this record so that it has zero fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20247,"byte_end":20296,"line_start":325,"line_end":325,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20301,"byte_end":20304,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `truncate(0)`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20309,"byte_end":20357,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20362,"byte_end":20365,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that it is not necessary to clear the record to reuse it with","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20370,"byte_end":20440,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/ the CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20445,"byte_end":20464,"line_start":330,"line_end":330,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20469,"byte_end":20472,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20477,"byte_end":20490,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20495,"byte_end":20498,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20503,"byte_end":20510,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20515,"byte_end":20539,"line_start":335,"line_end":335,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20544,"byte_end":20547,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20552,"byte_end":20611,"line_start":337,"line_end":337,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20616,"byte_end":20648,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/ record.clear();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20653,"byte_end":20672,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(record.len(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20677,"byte_end":20709,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20714,"byte_end":20721,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20726,"byte_end":20735,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21332,"byte_end":21336,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"trim","qualname":"<ByteRecord>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Trim the fields of this record so that leading and trailing whitespace\n is removed.","sig":null,"attributes":[{"value":"/ Trim the fields of this record so that leading and trailing whitespace","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20803,"byte_end":20877,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ is removed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20882,"byte_end":20897,"line_start":348,"line_end":348,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20902,"byte_end":20905,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This method uses the ASCII definition of whitespace. That is, only","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20910,"byte_end":20980,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ bytes in the class `[\\t\\n\\v\\f\\r ]` are trimmed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":20985,"byte_end":21036,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21041,"byte_end":21044,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21049,"byte_end":21062,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21067,"byte_end":21070,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21075,"byte_end":21082,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21087,"byte_end":21111,"line_start":356,"line_end":356,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21116,"byte_end":21119,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let mut record = ByteRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21124,"byte_end":21167,"line_start":358,"line_end":358,"column_start":5,"column_end":48}},{"value":"/     \"  \", \"\\tfoo\", \"bar  \", \"b a z\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21172,"byte_end":21212,"line_start":359,"line_end":359,"column_start":5,"column_end":45}},{"value":"/ ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21217,"byte_end":21224,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ record.trim();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21229,"byte_end":21247,"line_start":361,"line_end":361,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(record, vec![\"\", \"foo\", \"bar\", \"b a z\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21252,"byte_end":21308,"line_start":362,"line_end":362,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21313,"byte_end":21320,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22068,"byte_end":22078,"line_start":391,"line_end":391,"column_start":12,"column_end":22},"name":"push_field","qualname":"<ByteRecord>::push_field","value":"fn (&mut self, field: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a new field to this record.","sig":null,"attributes":[{"value":"/ Add a new field to this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21793,"byte_end":21828,"line_start":379,"line_end":379,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21833,"byte_end":21836,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21841,"byte_end":21854,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21859,"byte_end":21862,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21867,"byte_end":21874,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21879,"byte_end":21903,"line_start":384,"line_end":384,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21908,"byte_end":21911,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let mut record = ByteRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21916,"byte_end":21955,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ record.push_field(b\"foo\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21960,"byte_end":21990,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(&record[0], b\"foo\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":21995,"byte_end":22030,"line_start":388,"line_end":388,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22035,"byte_end":22042,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22047,"byte_end":22056,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23621,"byte_end":23629,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"position","qualname":"<ByteRecord>::position","value":"fn (&self) -> Option<&Position>","parent":null,"children":[],"decl_id":null,"docs":" Return the position of this record, if available.","sig":null,"attributes":[{"value":"/ Return the position of this record, if available.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22362,"byte_end":22415,"line_start":400,"line_end":400,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22420,"byte_end":22423,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22428,"byte_end":22441,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22446,"byte_end":22449,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22454,"byte_end":22461,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22466,"byte_end":22492,"line_start":405,"line_end":405,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22497,"byte_end":22500,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ use csv::{ByteRecord, ReaderBuilder};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22505,"byte_end":22546,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22551,"byte_end":22554,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22559,"byte_end":22598,"line_start":409,"line_end":409,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22603,"byte_end":22651,"line_start":410,"line_end":410,"column_start":5,"column_end":53}},{"value":"/     let mut record = ByteRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22656,"byte_end":22699,"line_start":411,"line_end":411,"column_start":5,"column_end":48}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22704,"byte_end":22746,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/         .has_headers(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22751,"byte_end":22782,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/         .from_reader(\"a,b,c\\nx,y,z\".as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22787,"byte_end":22839,"line_start":414,"line_end":414,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22844,"byte_end":22847,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     assert!(rdr.read_byte_record(&mut record)?);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22852,"byte_end":22904,"line_start":416,"line_end":416,"column_start":5,"column_end":57}},{"value":"/     {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22909,"byte_end":22918,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/         let pos = record.position().expect(\"a record position\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22923,"byte_end":22991,"line_start":418,"line_end":418,"column_start":5,"column_end":73}},{"value":"/         assert_eq!(pos.byte(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":22996,"byte_end":23034,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.line(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23039,"byte_end":23077,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.record(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23082,"byte_end":23122,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23127,"byte_end":23136,"line_start":422,"line_end":422,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23141,"byte_end":23144,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     assert!(rdr.read_byte_record(&mut record)?);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23149,"byte_end":23201,"line_start":424,"line_end":424,"column_start":5,"column_end":57}},{"value":"/     {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23206,"byte_end":23215,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/         let pos = record.position().expect(\"a record position\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23220,"byte_end":23288,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/         assert_eq!(pos.byte(), 6);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23293,"byte_end":23331,"line_start":427,"line_end":427,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.line(), 2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23336,"byte_end":23374,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.record(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23379,"byte_end":23419,"line_start":429,"line_end":429,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23424,"byte_end":23433,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23438,"byte_end":23441,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/     // Finish the CSV reader for good measure.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23446,"byte_end":23496,"line_start":432,"line_end":432,"column_start":5,"column_end":55}},{"value":"/     assert!(!rdr.read_byte_record(&mut record)?);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23501,"byte_end":23554,"line_start":433,"line_end":433,"column_start":5,"column_end":58}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23559,"byte_end":23573,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23578,"byte_end":23583,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23588,"byte_end":23595,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23600,"byte_end":23609,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24157,"byte_end":24169,"line_start":459,"line_end":459,"column_start":12,"column_end":24},"name":"set_position","qualname":"<ByteRecord>::set_position","value":"fn (&mut self, pos: Option<Position>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the position of this record.","sig":null,"attributes":[{"value":"/ Set the position of this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23699,"byte_end":23735,"line_start":442,"line_end":442,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23740,"byte_end":23743,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23748,"byte_end":23761,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23766,"byte_end":23769,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23774,"byte_end":23781,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use csv::{ByteRecord, Position};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23786,"byte_end":23822,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23827,"byte_end":23830,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23835,"byte_end":23894,"line_start":449,"line_end":449,"column_start":5,"column_end":64}},{"value":"/ let mut pos = Position::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23899,"byte_end":23933,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ pos.set_byte(100);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23938,"byte_end":23960,"line_start":451,"line_end":451,"column_start":5,"column_end":27}},{"value":"/ pos.set_line(4);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23965,"byte_end":23985,"line_start":452,"line_end":452,"column_start":5,"column_end":25}},{"value":"/ pos.set_record(2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":23990,"byte_end":24012,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24017,"byte_end":24020,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ record.set_position(Some(pos.clone()));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24025,"byte_end":24068,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(record.position(), Some(&pos));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24073,"byte_end":24119,"line_start":456,"line_end":456,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24124,"byte_end":24131,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24136,"byte_end":24145,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24782,"byte_end":24787,"line_start":479,"line_end":479,"column_start":12,"column_end":17},"name":"range","qualname":"<ByteRecord>::range","value":"fn (&self, i: usize) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the start and end position of a field in this record.","sig":null,"attributes":[{"value":"/ Return the start and end position of a field in this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24243,"byte_end":24307,"line_start":463,"line_end":463,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24312,"byte_end":24315,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ If no such field exists at the given index, then return `None`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24320,"byte_end":24387,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24392,"byte_end":24395,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The range returned can be used with the slice returned by `as_slice`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24400,"byte_end":24473,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24478,"byte_end":24481,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24486,"byte_end":24499,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24504,"byte_end":24507,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24512,"byte_end":24519,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24524,"byte_end":24548,"line_start":472,"line_end":472,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24553,"byte_end":24556,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::from(vec![\"foo\", \"quux\", \"z\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24561,"byte_end":24621,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/ let range = record.range(1).expect(\"a record range\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24626,"byte_end":24683,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(&record.as_slice()[range], &b\"quux\"[..]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24688,"byte_end":24744,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24749,"byte_end":24756,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24761,"byte_end":24770,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25301,"byte_end":25309,"line_start":496,"line_end":496,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ByteRecord>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the entire row as a single byte slice. The slice returned stores\n all fields contiguously. The boundaries of each field can be determined\n via the `range` method.","sig":null,"attributes":[{"value":"/ Return the entire row as a single byte slice. The slice returned stores","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24871,"byte_end":24946,"line_start":483,"line_end":483,"column_start":5,"column_end":80}},{"value":"/ all fields contiguously. The boundaries of each field can be determined","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":24951,"byte_end":25026,"line_start":484,"line_end":484,"column_start":5,"column_end":80}},{"value":"/ via the `range` method.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25031,"byte_end":25058,"line_start":485,"line_end":485,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25063,"byte_end":25066,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25071,"byte_end":25084,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25089,"byte_end":25092,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25097,"byte_end":25104,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ use csv::ByteRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25109,"byte_end":25133,"line_start":490,"line_end":490,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25138,"byte_end":25141,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let record = ByteRecord::from(vec![\"foo\", \"quux\", \"z\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25146,"byte_end":25206,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(record.as_slice(), &b\"fooquuxz\"[..]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25211,"byte_end":25263,"line_start":493,"line_end":493,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25268,"byte_end":25275,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":25280,"byte_end":25289,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27912,"byte_end":27920,"line_start":576,"line_end":576,"column_start":12,"column_end":20},"name":"Position","qualname":"::byte_record::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133}],"decl_id":null,"docs":" A position in CSV data.","sig":null,"attributes":[{"value":"/ A position in CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27519,"byte_end":27546,"line_start":567,"line_end":567,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27547,"byte_end":27550,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ A position is used to report errors in CSV data. All positions include the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27551,"byte_end":27629,"line_start":569,"line_end":569,"column_start":1,"column_end":79}},{"value":"/ byte offset, line number and record index at which the error occurred.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27630,"byte_end":27704,"line_start":570,"line_end":570,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27705,"byte_end":27708,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ Byte offsets and record indices start at `0`. Line numbers start at `1`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27709,"byte_end":27785,"line_start":572,"line_end":572,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27786,"byte_end":27789,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ A CSV reader will automatically assign the position of each record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27790,"byte_end":27861,"line_start":574,"line_end":574,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28077,"byte_end":28080,"line_start":585,"line_end":585,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"fn () -> Position","parent":null,"children":[],"decl_id":null,"docs":" Returns a new position initialized to the start value.\n","sig":null,"attributes":[{"value":"/ Returns a new position initialized to the start value.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27993,"byte_end":28051,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28056,"byte_end":28065,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28238,"byte_end":28242,"line_start":591,"line_end":591,"column_start":12,"column_end":16},"name":"byte","qualname":"<Position>::byte","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The byte offset, starting at `0`, of this position.\n","sig":null,"attributes":[{"value":"/ The byte offset, starting at `0`, of this position.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28157,"byte_end":28212,"line_start":589,"line_end":589,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28217,"byte_end":28226,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28368,"byte_end":28372,"line_start":596,"line_end":596,"column_start":12,"column_end":16},"name":"line","qualname":"<Position>::line","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The line number, starting at `1`, of this position.\n","sig":null,"attributes":[{"value":"/ The line number, starting at `1`, of this position.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28287,"byte_end":28342,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28347,"byte_end":28356,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28503,"byte_end":28509,"line_start":601,"line_end":601,"column_start":12,"column_end":18},"name":"record","qualname":"<Position>::record","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The record index, starting with the first record at `0`.\n","sig":null,"attributes":[{"value":"/ The record index, starting with the first record at `0`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28417,"byte_end":28477,"line_start":599,"line_end":599,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28482,"byte_end":28491,"line_start":600,"line_end":600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28624,"byte_end":28632,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"set_byte","qualname":"<Position>::set_byte","value":"fn (&mut self, byte: u64) -> &mut Position","parent":null,"children":[],"decl_id":null,"docs":" Set the byte offset of this position.\n","sig":null,"attributes":[{"value":"/ Set the byte offset of this position.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28557,"byte_end":28598,"line_start":605,"line_end":605,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28603,"byte_end":28612,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28869,"byte_end":28877,"line_start":616,"line_end":616,"column_start":12,"column_end":20},"name":"set_line","qualname":"<Position>::set_line","value":"fn (&mut self, line: u64) -> &mut Position","parent":null,"children":[],"decl_id":null,"docs":" Set the line number of this position.","sig":null,"attributes":[{"value":"/ Set the line number of this position.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28724,"byte_end":28765,"line_start":612,"line_end":612,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28770,"byte_end":28773,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If the line number is less than `1`, then this method panics.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28778,"byte_end":28843,"line_start":614,"line_end":614,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28848,"byte_end":28857,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":29064,"byte_end":29074,"line_start":624,"line_end":624,"column_start":12,"column_end":22},"name":"set_record","qualname":"<Position>::set_record","value":"fn (&mut self, record: u64) -> &mut Position","parent":null,"children":[],"decl_id":null,"docs":" Set the record index of this position.\n","sig":null,"attributes":[{"value":"/ Set the record index of this position.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":28996,"byte_end":29038,"line_start":622,"line_end":622,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":29043,"byte_end":29052,"line_start":623,"line_end":623,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32684,"byte_end":32698,"line_start":765,"line_end":765,"column_start":12,"column_end":26},"name":"ByteRecordIter","qualname":"::byte_record::ByteRecordIter","value":"ByteRecordIter {  }","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"decl_id":null,"docs":" A double-ended iterator over the fields in a byte record.","sig":null,"attributes":[{"value":"/ A double-ended iterator over the fields in a byte record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32483,"byte_end":32544,"line_start":760,"line_end":760,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32545,"byte_end":32548,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ The `'r` lifetime variable refers to the lifetime of the `ByteRecord` that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32549,"byte_end":32627,"line_start":762,"line_end":762,"column_start":1,"column_end":79}},{"value":"/ is being iterated over.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32628,"byte_end":32655,"line_start":763,"line_end":763,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/cookbook.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cookbook","qualname":"::cookbook","value":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/cookbook.rs","parent":null,"children":[],"decl_id":null,"docs":"A cookbook of examples for CSV reading and writing.","sig":null,"attributes":[{"value":"!\nA cookbook of examples for CSV reading and writing.\n\n# List of examples\n\nThis is a list of examples that follow. Each of them can be found in the\n`examples` directory of the\n[`rust-csv`](https://github.com/BurntSushi/rust-csv)\nrepository.\n\nFor **reading** CSV:\n\n1. [Basic](#reading-basic)\n2. [With Serde](#reading-with-serde)\n3. [Setting a different delimiter](#reading-setting-a-different-delimiter)\n4. [Without headers](#reading-without-headers)\n\nFor **writing** CSV:\n\n5. [Basic](#writing-basic)\n6. [With Serde](#writing-with-serde)\n\nPlease\n[submit a pull request](https://github.com/BurntSushi/rust-csv/pulls)\nif you're interested in adding an example to this list!\n\n# Reading: basic\n\nThis example shows how to read CSV data from stdin and print each record to\nstdout.\n\n```no_run\n# //cookbook-read-basic.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn example() -> Result<(), Box<dyn Error>> {\n    // Build the CSV reader and iterate over each record.\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        // The iterator yields Result<StringRecord, Error>, so we check the\n        // error here..\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-read-basic < examples/data/smallpop.csv\n```\n\n# Reading: with Serde\n\nThis is like the previous example, except it shows how to deserialize each\nrecord into a struct type that you define.\n\nFor more examples and details on how Serde deserialization works, see the\n[`Reader::deserialize`](../struct.Reader.html#method.deserialize)\nmethod.\n\n```no_run\n# //cookbook-read-serde.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nuse serde::Deserialize;\n\n// By default, struct field names are deserialized based on the position of\n// a corresponding field in the CSV data's header record.\n#[derive(Debug, Deserialize)]\nstruct Record {\n    city: String,\n    region: String,\n    country: String,\n    population: Option<u64>,\n}\n\nfn example() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.deserialize() {\n        // Notice that we need to provide a type hint for automatic\n        // deserialization.\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-read-serde < examples/data/smallpop.csv\n```\n\n# Reading: setting a different delimiter\n\nThis example shows how to read CSV data from stdin where fields are separated\nby `:` instead of `,`.\n\n```no_run\n# //cookbook-read-colon.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn example() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::ReaderBuilder::new()\n        .delimiter(b':')\n        .from_reader(io::stdin());\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-read-colon < examples/data/smallpop-colon.csv\n```\n\n# Reading: without headers\n\nThe CSV reader in this crate assumes that CSV data has a header record by\ndefault, but the setting can be toggled. When enabled, the first record in\nCSV data in interpreted as the header record and is skipped. When disabled, the\nfirst record is not skipped. This example shows how to disable that setting.\n\n```no_run\n# //cookbook-read-no-headers.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn example() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::ReaderBuilder::new()\n        .has_headers(false)\n        .from_reader(io::stdin());\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-read-no-headers < examples/data/smallpop-no-headers.csv\n```\n\n# Writing: basic\n\nThis example shows how to write CSV data to stdout.\n\n```no_run\n# //cookbook-write-basic.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn example() -> Result<(), Box<dyn Error>> {\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    // When writing records without Serde, the header record is written just\n    // like any other record.\n    wtr.write_record(&[\"city\", \"region\", \"country\", \"population\"])?;\n    wtr.write_record(&[\"Southborough\", \"MA\", \"United States\", \"9686\"])?;\n    wtr.write_record(&[\"Northbridge\", \"MA\", \"United States\", \"14061\"])?;\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-write-basic > /tmp/simplepop.csv\n```\n\n# Writing: with Serde\n\nThis example shows how to write CSV data to stdout with Serde. Namely, we\nrepresent each record using a custom struct that we define. In this example,\nheaders are written automatically.\n\n```no_run\n# //cookbook-write-serde.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nuse serde::Serialize;\n\n#[derive(Debug, Serialize)]\nstruct Record {\n    city: String,\n    region: String,\n    country: String,\n    population: Option<u64>,\n}\n\nfn example() -> Result<(), Box<dyn Error>> {\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    // When writing records with Serde using structs, the header row is written\n    // automatically.\n    wtr.serialize(Record {\n        city: \"Southborough\".to_string(),\n        region: \"MA\".to_string(),\n        country: \"United States\".to_string(),\n        population: Some(9686),\n    })?;\n    wtr.serialize(Record {\n        city: \"Northbridge\".to_string(),\n        region: \"MA\".to_string(),\n        country: \"United States\".to_string(),\n        population: Some(14061),\n    })?;\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n```\n\nThe above example can be run like so:\n\n```ignore\n$ git clone git://github.com/BurntSushi/rust-csv\n$ cd rust-csv\n$ cargo run --example cookbook-write-serde > /tmp/simplepop.csv\n```\n*/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/cookbook.rs","byte_start":43495,"byte_end":50614,"line_start":1,"line_end":294,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69602,"byte_end":69618,"line_start":660,"line_end":660,"column_start":12,"column_end":28},"name":"DeserializeError","qualname":"::deserializer::DeserializeError","value":"DeserializeError {  }","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"decl_id":null,"docs":" An Serde deserialization error.\n","sig":null,"attributes":[{"value":"/ An Serde deserialization error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69516,"byte_end":69551,"line_start":658,"line_end":658,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69849,"byte_end":69856,"line_start":669,"line_end":669,"column_start":5,"column_end":12},"name":"Message","qualname":"::deserializer::DeserializeErrorKind::Message","value":"DeserializeErrorKind::Message(String)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" A generic Serde deserialization error.\n","sig":null,"attributes":[{"value":"/ A generic Serde deserialization error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69802,"byte_end":69844,"line_start":668,"line_end":668,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69913,"byte_end":69924,"line_start":671,"line_end":671,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::deserializer::DeserializeErrorKind::Unsupported","value":"DeserializeErrorKind::Unsupported(String)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" A generic Serde unsupported error.\n","sig":null,"attributes":[{"value":"/ A generic Serde unsupported error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69870,"byte_end":69908,"line_start":670,"line_end":670,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70059,"byte_end":70077,"line_start":674,"line_end":674,"column_start":5,"column_end":23},"name":"UnexpectedEndOfRow","qualname":"::deserializer::DeserializeErrorKind::UnexpectedEndOfRow","value":"DeserializeErrorKind::UnexpectedEndOfRow","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" This error occurs when a Rust type expects to decode another field\n from a row, but no more fields exist.\n","sig":null,"attributes":[{"value":"/ This error occurs when a Rust type expects to decode another field","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69938,"byte_end":70008,"line_start":672,"line_end":672,"column_start":5,"column_end":75}},{"value":"/ from a row, but no more fields exist.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70013,"byte_end":70054,"line_start":673,"line_end":673,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70266,"byte_end":70277,"line_start":678,"line_end":678,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::deserializer::DeserializeErrorKind::InvalidUtf8","value":"DeserializeErrorKind::InvalidUtf8(str::Utf8Error)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" This error occurs when UTF-8 validation on a field fails. UTF-8\n validation is only performed when the Rust type requires it (e.g.,\n a `String` or `&str` type).\n","sig":null,"attributes":[{"value":"/ This error occurs when UTF-8 validation on a field fails. UTF-8","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70083,"byte_end":70150,"line_start":675,"line_end":675,"column_start":5,"column_end":72}},{"value":"/ validation is only performed when the Rust type requires it (e.g.,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70155,"byte_end":70225,"line_start":676,"line_end":676,"column_start":5,"column_end":75}},{"value":"/ a `String` or `&str` type).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70230,"byte_end":70261,"line_start":677,"line_end":677,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70362,"byte_end":70371,"line_start":680,"line_end":680,"column_start":5,"column_end":14},"name":"ParseBool","qualname":"::deserializer::DeserializeErrorKind::ParseBool","value":"DeserializeErrorKind::ParseBool(str::ParseBoolError)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" This error occurs when a boolean value fails to parse.\n","sig":null,"attributes":[{"value":"/ This error occurs when a boolean value fails to parse.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70299,"byte_end":70357,"line_start":679,"line_end":679,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70462,"byte_end":70470,"line_start":682,"line_end":682,"column_start":5,"column_end":13},"name":"ParseInt","qualname":"::deserializer::DeserializeErrorKind::ParseInt","value":"DeserializeErrorKind::ParseInt(num::ParseIntError)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" This error occurs when an integer value fails to parse.\n","sig":null,"attributes":[{"value":"/ This error occurs when an integer value fails to parse.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70398,"byte_end":70457,"line_start":681,"line_end":681,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70557,"byte_end":70567,"line_start":684,"line_end":684,"column_start":5,"column_end":15},"name":"ParseFloat","qualname":"::deserializer::DeserializeErrorKind::ParseFloat","value":"DeserializeErrorKind::ParseFloat(num::ParseFloatError)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" This error occurs when a float value fails to parse.\n","sig":null,"attributes":[{"value":"/ This error occurs when a float value fails to parse.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70496,"byte_end":70552,"line_start":683,"line_end":683,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69775,"byte_end":69795,"line_start":667,"line_end":667,"column_start":10,"column_end":30},"name":"DeserializeErrorKind","qualname":"::deserializer::DeserializeErrorKind","value":"DeserializeErrorKind::{Message, Unsupported, UnexpectedEndOfRow, InvalidUtf8, ParseBool, ParseInt, ParseFloat}","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231}],"decl_id":null,"docs":" The type of a Serde deserialization error.\n","sig":null,"attributes":[{"value":"/ The type of a Serde deserialization error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":69680,"byte_end":69726,"line_start":665,"line_end":665,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71905,"byte_end":71910,"line_start":729,"line_end":729,"column_start":12,"column_end":17},"name":"field","qualname":"<DeserializeError>::field","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the field index (starting at 0) of this error, if available.\n","sig":null,"attributes":[{"value":"/ Return the field index (starting at 0) of this error, if available.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71822,"byte_end":71893,"line_start":728,"line_end":728,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":72014,"byte_end":72018,"line_start":734,"line_end":734,"column_start":12,"column_end":16},"name":"kind","qualname":"<DeserializeError>::kind","value":"fn (&self) -> &DeserializeErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying error kind.\n","sig":null,"attributes":[{"value":"/ Return the underlying error kind.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71965,"byte_end":72002,"line_start":733,"line_end":733,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85824,"byte_end":85830,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Result<T, csv::Error>`.\n","sig":null,"attributes":[{"value":"/ A type alias for `Result<T, csv::Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85769,"byte_end":85814,"line_start":9,"line_end":9,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86271,"byte_end":86276,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur when processing CSV data.","sig":null,"attributes":[{"value":"/ An error that can occur when processing CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85863,"byte_end":85916,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85917,"byte_end":85920,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This error can happen when writing or reading CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85921,"byte_end":85980,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85981,"byte_end":85984,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ There are some important scenarios where an error is impossible to occur.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":85985,"byte_end":86062,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ For example, if a CSV reader is used on an in-memory buffer with the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86063,"byte_end":86135,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ `flexible` option enabled and one is reading records as raw byte strings,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86136,"byte_end":86213,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ then no error can occur.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86214,"byte_end":86242,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86503,"byte_end":86507,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the specific type of this error.\n","sig":null,"attributes":[{"value":"/ Return the specific type of this error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86448,"byte_end":86491,"line_start":29,"line_end":29,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86617,"byte_end":86626,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"into_kind","qualname":"<Error>::into_kind","value":"fn (self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Unwrap this error into its underlying type.\n","sig":null,"attributes":[{"value":"/ Unwrap this error into its underlying type.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86558,"byte_end":86605,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86833,"byte_end":86844,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<Error>::is_io_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an I/O error.","sig":null,"attributes":[{"value":"/ Returns true if this is an I/O error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86675,"byte_end":86716,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86721,"byte_end":86724,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If this is true, the underlying `ErrorKind` is guaranteed to be","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86729,"byte_end":86796,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ `ErrorKind::Io`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86801,"byte_end":86821,"line_start":42,"line_end":42,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87197,"byte_end":87205,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"position","qualname":"<Error>::position","value":"fn (&self) -> Option<&Position>","parent":null,"children":[],"decl_id":null,"docs":" Return the position for this error, if one exists.","sig":null,"attributes":[{"value":"/ Return the position for this error, if one exists.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86969,"byte_end":87023,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87028,"byte_end":87031,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that permits callers to easily access","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87036,"byte_end":87108,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ the position on an error without doing case analysis on `ErrorKind`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87113,"byte_end":87185,"line_start":53,"line_end":53,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87407,"byte_end":87409,"line_start":63,"line_end":63,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" An I/O error that occurred while reading CSV data.\n","sig":null,"attributes":[{"value":"/ An I/O error that occurred while reading CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87348,"byte_end":87402,"line_start":62,"line_end":62,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87522,"byte_end":87526,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::ErrorKind::Utf8","value":"ErrorKind::Utf8 { pos, err }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" A UTF-8 decoding error that occured while reading CSV data into Rust\n `String`s.\n","sig":null,"attributes":[{"value":"/ A UTF-8 decoding error that occured while reading CSV data into Rust","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87426,"byte_end":87498,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ `String`s.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87503,"byte_end":87517,"line_start":65,"line_end":65,"column_start":5,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87922,"byte_end":87936,"line_start":76,"line_end":76,"column_start":5,"column_end":19},"name":"UnequalLengths","qualname":"::error::ErrorKind::UnequalLengths","value":"ErrorKind::UnequalLengths { pos, expected_len, len }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" This error occurs when two records with an unequal number of fields\n are found. This error only occurs when the `flexible` option in a\n CSV reader/writer is disabled.\n","sig":null,"attributes":[{"value":"/ This error occurs when two records with an unequal number of fields","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87733,"byte_end":87804,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ are found. This error only occurs when the `flexible` option in a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87809,"byte_end":87878,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ CSV reader/writer is disabled.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87883,"byte_end":87917,"line_start":75,"line_end":75,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88554,"byte_end":88558,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Seek","qualname":"::error::ErrorKind::Seek","value":"ErrorKind::Seek","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" This error occurs when either the `byte_headers` or `headers` methods\n are called on a CSV reader that was asked to `seek` before it parsed\n the first record.\n","sig":null,"attributes":[{"value":"/ This error occurs when either the `byte_headers` or `headers` methods","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88373,"byte_end":88446,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ are called on a CSV reader that was asked to `seek` before it parsed","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88451,"byte_end":88523,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88528,"byte_end":88549,"line_start":89,"line_end":89,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88639,"byte_end":88648,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"Serialize","qualname":"::error::ErrorKind::Serialize","value":"ErrorKind::Serialize(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" An error of this kind occurs only when using the Serde serializer.\n","sig":null,"attributes":[{"value":"/ An error of this kind occurs only when using the Serde serializer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88564,"byte_end":88634,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88766,"byte_end":88777,"line_start":95,"line_end":95,"column_start":5,"column_end":16},"name":"Deserialize","qualname":"::error::ErrorKind::Deserialize","value":"ErrorKind::Deserialize { pos, err }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" An error of this kind occurs only when performing automatic\n deserialization with serde.\n","sig":null,"attributes":[{"value":"/ An error of this kind occurs only when performing automatic","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88662,"byte_end":88725,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"/ deserialization with serde.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88730,"byte_end":88761,"line_start":94,"line_end":94,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89220,"byte_end":89235,"line_start":107,"line_end":107,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::ErrorKind::__Nonexhaustive","value":"ErrorKind::__Nonexhaustive","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":88946,"byte_end":89000,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89005,"byte_end":89008,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89013,"byte_end":89083,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89088,"byte_end":89160,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89165,"byte_end":89196,"line_start":105,"line_end":105,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87332,"byte_end":87341,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{Io, Utf8, UnequalLengths, Seek, Serialize, Deserialize, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1275}],"decl_id":null,"docs":" The specific type of an error.\n","sig":null,"attributes":[{"value":"/ The specific type of an error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":87271,"byte_end":87305,"line_start":59,"line_end":59,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89489,"byte_end":89497,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"position","qualname":"<ErrorKind>::position","value":"fn (&self) -> Option<&Position>","parent":null,"children":[],"decl_id":null,"docs":" Return the position for this error, if one exists.","sig":null,"attributes":[{"value":"/ Return the position for this error, if one exists.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89261,"byte_end":89315,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89320,"byte_end":89323,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that permits callers to easily access","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89328,"byte_end":89400,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ the position on an error without doing case analysis on `ErrorKind`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89405,"byte_end":89477,"line_start":114,"line_end":114,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93043,"byte_end":93056,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"FromUtf8Error","qualname":"::error::FromUtf8Error","value":"FromUtf8Error {  }","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A UTF-8 validation error during record conversion.","sig":null,"attributes":[{"value":"/ A UTF-8 validation error during record conversion.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":92849,"byte_end":92903,"line_start":218,"line_end":218,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":92904,"byte_end":92907,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This occurs when attempting to convert a `ByteRecord` into a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":92908,"byte_end":92972,"line_start":220,"line_end":220,"column_start":1,"column_end":65}},{"value":"/ `StringRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":92973,"byte_end":92992,"line_start":221,"line_end":221,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93376,"byte_end":93392,"line_start":235,"line_end":235,"column_start":12,"column_end":28},"name":"into_byte_record","qualname":"<FromUtf8Error>::into_byte_record","value":"fn (self) -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `ByteRecord` that failed UTF-8 validation.\n","sig":null,"attributes":[{"value":"/ Access the underlying `ByteRecord` that failed UTF-8 validation.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93296,"byte_end":93364,"line_start":234,"line_end":234,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93507,"byte_end":93517,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"utf8_error","qualname":"<FromUtf8Error>::utf8_error","value":"fn (&self) -> &Utf8Error","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying UTF-8 validation error.\n","sig":null,"attributes":[{"value":"/ Access the underlying UTF-8 validation error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93446,"byte_end":93495,"line_start":239,"line_end":239,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94125,"byte_end":94134,"line_start":265,"line_end":265,"column_start":12,"column_end":21},"name":"Utf8Error","qualname":"::error::Utf8Error","value":"Utf8Error {  }","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"decl_id":null,"docs":" A UTF-8 validation error.","sig":null,"attributes":[{"value":"/ A UTF-8 validation error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93825,"byte_end":93854,"line_start":257,"line_end":257,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93855,"byte_end":93858,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ This occurs when attempting to convert a `ByteRecord` into a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93859,"byte_end":93923,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/ `StringRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93924,"byte_end":93943,"line_start":260,"line_end":260,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93944,"byte_end":93947,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ The error includes the index of the field that failed validation, and the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93948,"byte_end":94025,"line_start":262,"line_end":262,"column_start":1,"column_end":78}},{"value":"/ last byte at which valid UTF-8 was verified.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94026,"byte_end":94074,"line_start":263,"line_end":263,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94598,"byte_end":94603,"line_start":279,"line_end":279,"column_start":12,"column_end":17},"name":"field","qualname":"<Utf8Error>::field","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The field index of a byte record in which UTF-8 validation failed.\n","sig":null,"attributes":[{"value":"/ The field index of a byte record in which UTF-8 validation failed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94516,"byte_end":94586,"line_start":278,"line_end":278,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94735,"byte_end":94746,"line_start":283,"line_end":283,"column_start":12,"column_end":23},"name":"valid_up_to","qualname":"<Utf8Error>::valid_up_to","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The index into the given field up to which valid UTF-8 was verified.\n","sig":null,"attributes":[{"value":"/ The index into the given field up to which valid UTF-8 was verified.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94651,"byte_end":94723,"line_start":282,"line_end":282,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95404,"byte_end":95418,"line_start":307,"line_end":307,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::error::IntoInnerError","value":"IntoInnerError {  }","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"decl_id":null,"docs":" `IntoInnerError` occurs when consuming a `Writer` fails.","sig":null,"attributes":[{"value":"/ `IntoInnerError` occurs when consuming a `Writer` fails.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95090,"byte_end":95150,"line_start":300,"line_end":300,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95151,"byte_end":95154,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Consuming the `Writer` causes a flush to happen. If the flush fails, then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95155,"byte_end":95232,"line_start":302,"line_end":302,"column_start":1,"column_end":78}},{"value":"/ this error is returned, which contains both the original `Writer` and","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95233,"byte_end":95306,"line_start":303,"line_end":303,"column_start":1,"column_end":74}},{"value":"/ the error that occurred.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95307,"byte_end":95335,"line_start":304,"line_end":304,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95336,"byte_end":95339,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ The type parameter `W` is the unconsumed writer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95340,"byte_end":95392,"line_start":306,"line_end":306,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95922,"byte_end":95927,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"error","qualname":"<IntoInnerError<W>>::error","value":"fn (&self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" Returns the error which caused the call to `into_inner` to fail.","sig":null,"attributes":[{"value":"/ Returns the error which caused the call to `into_inner` to fail.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95756,"byte_end":95824,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95829,"byte_end":95832,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This error was returned when attempting to flush the internal buffer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95837,"byte_end":95910,"line_start":323,"line_end":323,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96161,"byte_end":96171,"line_start":332,"line_end":332,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoInnerError<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying writer which generated the error.","sig":null,"attributes":[{"value":"/ Returns the underlying writer which generated the error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95980,"byte_end":96040,"line_start":328,"line_end":328,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96045,"byte_end":96048,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned value can be used for error recovery, such as","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96053,"byte_end":96115,"line_start":330,"line_end":330,"column_start":5,"column_end":67}},{"value":"/ re-inspecting the buffer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96120,"byte_end":96149,"line_start":331,"line_end":331,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97295,"byte_end":97308,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"ReaderBuilder","qualname":"::reader::ReaderBuilder","value":"ReaderBuilder {  }","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" Builds a CSV reader with various configuration knobs.","sig":null,"attributes":[{"value":"/ Builds a CSV reader with various configuration knobs.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97043,"byte_end":97100,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97101,"byte_end":97104,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This builder can be used to tweak the field delimiter, record terminator","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97105,"byte_end":97181,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ and more. Once a CSV `Reader` is built, its configuration cannot be","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97182,"byte_end":97253,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ changed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97254,"byte_end":97266,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98975,"byte_end":98978,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderBuilder>::new","value":"fn () -> ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder for configuring CSV parsing.","sig":null,"attributes":[{"value":"/ Create a new builder for configuring CSV parsing.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98012,"byte_end":98065,"line_start":47,"line_end":47,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98070,"byte_end":98073,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ To convert a builder into a reader, call one of the methods starting","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98078,"byte_end":98150,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ with `from_`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98155,"byte_end":98172,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98177,"byte_end":98180,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98185,"byte_end":98198,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98203,"byte_end":98206,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98211,"byte_end":98218,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98223,"byte_end":98249,"line_start":55,"line_end":55,"column_start":5,"column_end":31}},{"value":"/ use csv::{ReaderBuilder, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98254,"byte_end":98297,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98302,"byte_end":98305,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98310,"byte_end":98349,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98354,"byte_end":98402,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98407,"byte_end":98428,"line_start":60,"line_end":60,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98433,"byte_end":98453,"line_start":61,"line_end":61,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98458,"byte_end":98490,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98495,"byte_end":98526,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98531,"byte_end":98537,"line_start":64,"line_end":64,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new().from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98542,"byte_end":98614,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98619,"byte_end":98622,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/     let records = rdr","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98627,"byte_end":98652,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"/         .records()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98657,"byte_end":98679,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/         .collect::<Result<Vec<StringRecord>, csv::Error>>()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98684,"byte_end":98749,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/     assert_eq!(records, vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98754,"byte_end":98787,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/         vec![\"Boston\", \"United States\", \"4628910\"],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98792,"byte_end":98847,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"/         vec![\"Concord\", \"United States\", \"42695\"],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98852,"byte_end":98906,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98911,"byte_end":98922,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98927,"byte_end":98941,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98946,"byte_end":98951,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":98956,"byte_end":98963,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99745,"byte_end":99754,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ReaderBuilder>::from_path","value":"fn <P> (&self, path: P) -> Result<Reader<File>>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV parser from this configuration that reads data from the\n given file path.","sig":null,"attributes":[{"value":"/ Build a CSV parser from this configuration that reads data from the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99044,"byte_end":99115,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ given file path.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99120,"byte_end":99140,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99145,"byte_end":99148,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If there was a problem opening the file at the given path, then this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99153,"byte_end":99225,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ returns the corresponding error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99230,"byte_end":99266,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99271,"byte_end":99274,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99279,"byte_end":99292,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99297,"byte_end":99300,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99305,"byte_end":99318,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99323,"byte_end":99349,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99354,"byte_end":99381,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99386,"byte_end":99389,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99394,"byte_end":99433,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99438,"byte_end":99486,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/     let mut rdr = ReaderBuilder::new().from_path(\"foo.csv\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99491,"byte_end":99556,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/     for result in rdr.records() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99561,"byte_end":99598,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99603,"byte_end":99636,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/         println!(\"{:?}\", record);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99641,"byte_end":99678,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99683,"byte_end":99692,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99697,"byte_end":99711,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99716,"byte_end":99721,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99726,"byte_end":99733,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100710,"byte_end":100721,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<ReaderBuilder>::from_reader","value":"fn <R> (&self, rdr: R) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV parser from this configuration that reads data from `rdr`.","sig":null,"attributes":[{"value":"/ Build a CSV parser from this configuration that reads data from `rdr`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99873,"byte_end":99947,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99952,"byte_end":99955,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that the CSV reader is buffered automatically, so you should not","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":99960,"byte_end":100033,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ wrap `rdr` in a buffered reader like `io::BufReader`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100038,"byte_end":100095,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100100,"byte_end":100103,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100108,"byte_end":100121,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100126,"byte_end":100129,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100134,"byte_end":100141,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100146,"byte_end":100172,"line_start":115,"line_end":115,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100177,"byte_end":100204,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100209,"byte_end":100212,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100217,"byte_end":100256,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100261,"byte_end":100309,"line_start":119,"line_end":119,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100314,"byte_end":100335,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100340,"byte_end":100360,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100365,"byte_end":100397,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100402,"byte_end":100433,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100438,"byte_end":100444,"line_start":124,"line_end":124,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new().from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100449,"byte_end":100521,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/     for result in rdr.records() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100526,"byte_end":100563,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100568,"byte_end":100601,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/         println!(\"{:?}\", record);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100606,"byte_end":100643,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100648,"byte_end":100657,"line_start":129,"line_end":129,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100662,"byte_end":100676,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100681,"byte_end":100686,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100691,"byte_end":100698,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101686,"byte_end":101695,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<ReaderBuilder>::delimiter","value":"fn (&mut self, delimiter: u8) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The field delimiter to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The field delimiter to use when parsing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100807,"byte_end":100855,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100860,"byte_end":100863,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The default is `b','`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100868,"byte_end":100894,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100899,"byte_end":100902,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100907,"byte_end":100920,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100925,"byte_end":100928,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100933,"byte_end":100940,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100945,"byte_end":100971,"line_start":144,"line_end":144,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":100976,"byte_end":101003,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101008,"byte_end":101011,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101016,"byte_end":101055,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101060,"byte_end":101108,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101113,"byte_end":101134,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/ city;country;pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101139,"byte_end":101159,"line_start":150,"line_end":150,"column_start":5,"column_end":25}},{"value":"/ Boston;United States;4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101164,"byte_end":101196,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101201,"byte_end":101207,"line_start":152,"line_end":152,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101212,"byte_end":101254,"line_start":153,"line_end":153,"column_start":5,"column_end":47}},{"value":"/         .delimiter(b';')","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101259,"byte_end":101287,"line_start":154,"line_end":154,"column_start":5,"column_end":33}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101292,"byte_end":101334,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101339,"byte_end":101342,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101347,"byte_end":101399,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101404,"byte_end":101437,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101442,"byte_end":101517,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101522,"byte_end":101540,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101545,"byte_end":101561,"line_start":161,"line_end":161,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101566,"byte_end":101638,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101643,"byte_end":101652,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101657,"byte_end":101662,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101667,"byte_end":101674,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103691,"byte_end":103702,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"has_headers","qualname":"<ReaderBuilder>::has_headers","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether to treat the first row as a special header row.","sig":null,"attributes":[{"value":"/ Whether to treat the first row as a special header row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101813,"byte_end":101872,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101877,"byte_end":101880,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ By default, the first row is treated as a special header row, which","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101885,"byte_end":101956,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ means the header is never returned by any of the record reading methods","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":101961,"byte_end":102036,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ or iterators. When this is disabled (`yes` set to `false`), the first","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102041,"byte_end":102114,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ row is not treated specially.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102119,"byte_end":102152,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102157,"byte_end":102160,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that the `headers` and `byte_headers` methods are unaffected by","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102165,"byte_end":102237,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ whether this is set. Those methods always return the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102242,"byte_end":102312,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102317,"byte_end":102320,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102325,"byte_end":102338,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102343,"byte_end":102346,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This example shows what happens when `has_headers` is disabled.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102351,"byte_end":102418,"line_start":183,"line_end":183,"column_start":5,"column_end":72}},{"value":"/ Namely, the first row is treated just like any other row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102423,"byte_end":102484,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102489,"byte_end":102492,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102497,"byte_end":102504,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102509,"byte_end":102535,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102540,"byte_end":102567,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102572,"byte_end":102575,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102580,"byte_end":102619,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102624,"byte_end":102672,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102677,"byte_end":102698,"line_start":192,"line_end":192,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102703,"byte_end":102723,"line_start":193,"line_end":193,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102728,"byte_end":102760,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102765,"byte_end":102771,"line_start":195,"line_end":195,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102776,"byte_end":102818,"line_start":196,"line_end":196,"column_start":5,"column_end":47}},{"value":"/         .has_headers(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102823,"byte_end":102854,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102859,"byte_end":102901,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/     let mut iter = rdr.records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102906,"byte_end":102943,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102948,"byte_end":102951,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     // Read the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102956,"byte_end":102989,"line_start":201,"line_end":201,"column_start":5,"column_end":38}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":102994,"byte_end":103037,"line_start":202,"line_end":202,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103042,"byte_end":103075,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103080,"byte_end":103143,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103148,"byte_end":103164,"line_start":205,"line_end":205,"column_start":5,"column_end":21}},{"value":"/         return Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103169,"byte_end":103203,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/             \"expected at least two records but got none\"));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103208,"byte_end":103271,"line_start":207,"line_end":207,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103276,"byte_end":103285,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103290,"byte_end":103293,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/     // Read the second record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103298,"byte_end":103332,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103337,"byte_end":103380,"line_start":211,"line_end":211,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103385,"byte_end":103418,"line_start":212,"line_end":212,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103423,"byte_end":103498,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103503,"byte_end":103519,"line_start":214,"line_end":214,"column_start":5,"column_end":21}},{"value":"/         return Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103524,"byte_end":103558,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/             \"expected at least two records but got one\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103563,"byte_end":103624,"line_start":216,"line_end":216,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103629,"byte_end":103638,"line_start":217,"line_end":217,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103643,"byte_end":103657,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103662,"byte_end":103667,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103672,"byte_end":103679,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106595,"byte_end":106603,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"flexible","qualname":"<ReaderBuilder>::flexible","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether the number of fields in records is allowed to change or not.","sig":null,"attributes":[{"value":"/ Whether the number of fields in records is allowed to change or not.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103805,"byte_end":103877,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103882,"byte_end":103885,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ When disabled (which is the default), parsing CSV data will return an","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103890,"byte_end":103963,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ error if a record is found with a number of fields different from the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":103968,"byte_end":104041,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ number of fields in a previous record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104046,"byte_end":104088,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104093,"byte_end":104096,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When enabled, this error checking is turned off.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104101,"byte_end":104153,"line_start":232,"line_end":232,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104158,"byte_end":104161,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Example: flexible records enabled","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104166,"byte_end":104205,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104210,"byte_end":104213,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104218,"byte_end":104225,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104230,"byte_end":104256,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104261,"byte_end":104288,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104293,"byte_end":104296,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104301,"byte_end":104340,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104345,"byte_end":104393,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/     // Notice that the first row is missing the population count.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104398,"byte_end":104467,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104472,"byte_end":104493,"line_start":243,"line_end":243,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104498,"byte_end":104518,"line_start":244,"line_end":244,"column_start":5,"column_end":25}},{"value":"/ Boston,United States","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104523,"byte_end":104547,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104552,"byte_end":104558,"line_start":246,"line_end":246,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104563,"byte_end":104605,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/         .flexible(true)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104610,"byte_end":104637,"line_start":248,"line_end":248,"column_start":5,"column_end":32}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104642,"byte_end":104684,"line_start":249,"line_end":249,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104689,"byte_end":104692,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104697,"byte_end":104749,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104754,"byte_end":104787,"line_start":252,"line_end":252,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104792,"byte_end":104856,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104861,"byte_end":104879,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104884,"byte_end":104900,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104905,"byte_end":104977,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104982,"byte_end":104991,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":104996,"byte_end":105001,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105006,"byte_end":105013,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105018,"byte_end":105021,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example: flexible records disabled","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105026,"byte_end":105066,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105071,"byte_end":105074,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This shows the error that appears when records of unequal length","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105079,"byte_end":105147,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ are found and flexible records have been disabled (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105152,"byte_end":105219,"line_start":264,"line_end":264,"column_start":5,"column_end":72}},{"value":"/ default).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105224,"byte_end":105237,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105242,"byte_end":105245,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105250,"byte_end":105257,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105262,"byte_end":105288,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ use csv::{ErrorKind, ReaderBuilder};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105293,"byte_end":105333,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105338,"byte_end":105341,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105346,"byte_end":105385,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105390,"byte_end":105438,"line_start":272,"line_end":272,"column_start":5,"column_end":53}},{"value":"/     // Notice that the first row is missing the population count.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105443,"byte_end":105512,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105517,"byte_end":105538,"line_start":274,"line_end":274,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105543,"byte_end":105563,"line_start":275,"line_end":275,"column_start":5,"column_end":25}},{"value":"/ Boston,United States","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105568,"byte_end":105592,"line_start":276,"line_end":276,"column_start":5,"column_end":29}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105597,"byte_end":105603,"line_start":277,"line_end":277,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105608,"byte_end":105650,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/         .flexible(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105655,"byte_end":105683,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105688,"byte_end":105730,"line_start":280,"line_end":280,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105735,"byte_end":105738,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/     if let Some(Err(err)) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105743,"byte_end":105797,"line_start":282,"line_end":282,"column_start":5,"column_end":59}},{"value":"/         match *err.kind() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105802,"byte_end":105833,"line_start":283,"line_end":283,"column_start":5,"column_end":36}},{"value":"/             ErrorKind::UnequalLengths { expected_len, len, .. } => {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105838,"byte_end":105910,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/                 // The header row has 3 fields...","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105915,"byte_end":105968,"line_start":285,"line_end":285,"column_start":5,"column_end":58}},{"value":"/                 assert_eq!(expected_len, 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":105973,"byte_end":106021,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/                 // ... but the first row has only 2 fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106026,"byte_end":106089,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"/                 assert_eq!(len, 2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106094,"byte_end":106133,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/                 Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106138,"byte_end":106164,"line_start":289,"line_end":289,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106169,"byte_end":106186,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/             ref wrong => {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106191,"byte_end":106221,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/                 Err(From::from(format!(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106226,"byte_end":106269,"line_start":292,"line_end":292,"column_start":5,"column_end":48}},{"value":"/                     \"expected UnequalLengths error but got {:?}\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106274,"byte_end":106343,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/                     wrong)))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106348,"byte_end":106380,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/             }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106385,"byte_end":106402,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106407,"byte_end":106420,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106425,"byte_end":106441,"line_start":297,"line_end":297,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106446,"byte_end":106473,"line_start":298,"line_end":298,"column_start":5,"column_end":32}},{"value":"/             \"expected at least one errored record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106478,"byte_end":106547,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106552,"byte_end":106561,"line_start":300,"line_end":300,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106566,"byte_end":106571,"line_start":301,"line_end":301,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106576,"byte_end":106583,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108528,"byte_end":108532,"line_start":354,"line_end":354,"column_start":12,"column_end":16},"name":"trim","qualname":"<ReaderBuilder>::trim","value":"fn (&mut self, trim: Trim) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether fields are trimmed of leading and trailing whitespace or not.","sig":null,"attributes":[{"value":"/ Whether fields are trimmed of leading and trailing whitespace or not.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106703,"byte_end":106776,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106781,"byte_end":106784,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ By default, no trimming is performed. This method permits one to","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106789,"byte_end":106857,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ override that behavior and choose one of the following options:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106862,"byte_end":106929,"line_start":311,"line_end":311,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106934,"byte_end":106937,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ 1. `Trim::Headers` trims only header values.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106942,"byte_end":106990,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ 2. `Trim::Fields` trims only non-header or \"field\" values.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":106995,"byte_end":107057,"line_start":314,"line_end":314,"column_start":5,"column_end":67}},{"value":"/ 3. `Trim::All` trims both header and non-header values.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107062,"byte_end":107121,"line_start":315,"line_end":315,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107126,"byte_end":107129,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ A value is only interpreted as a header value if this CSV reader is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107134,"byte_end":107205,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ configured to read a header record (which is the default).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107210,"byte_end":107272,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107277,"byte_end":107280,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ When reading string records, characters meeting the definition of","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107285,"byte_end":107354,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ Unicode whitespace are trimmed. When reading byte records, characters","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107359,"byte_end":107432,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ meeting the definition of ASCII whitespace are trimmed. ASCII","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107437,"byte_end":107502,"line_start":322,"line_end":322,"column_start":5,"column_end":70}},{"value":"/ whitespace characters correspond to the set `[\\t\\n\\v\\f\\r ]`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107507,"byte_end":107571,"line_start":323,"line_end":323,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107576,"byte_end":107579,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107584,"byte_end":107597,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107602,"byte_end":107605,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This example shows what happens when all values are trimmed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107610,"byte_end":107674,"line_start":327,"line_end":327,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107679,"byte_end":107682,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107687,"byte_end":107694,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107699,"byte_end":107725,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ use csv::{ReaderBuilder, StringRecord, Trim};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107730,"byte_end":107779,"line_start":331,"line_end":331,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107784,"byte_end":107787,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107792,"byte_end":107831,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107836,"byte_end":107884,"line_start":334,"line_end":334,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107889,"byte_end":107910,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"/ city ,   country ,  pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107915,"byte_end":107942,"line_start":336,"line_end":336,"column_start":5,"column_end":32}},{"value":"/ Boston,\\\"","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107947,"byte_end":107960,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/    United States\\\",4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":107965,"byte_end":107995,"line_start":338,"line_end":338,"column_start":5,"column_end":35}},{"value":"/ Concord,   United States   ,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108000,"byte_end":108037,"line_start":339,"line_end":339,"column_start":5,"column_end":42}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108042,"byte_end":108048,"line_start":340,"line_end":340,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108053,"byte_end":108095,"line_start":341,"line_end":341,"column_start":5,"column_end":47}},{"value":"/         .trim(Trim::All)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108100,"byte_end":108128,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108133,"byte_end":108175,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/     let records = rdr","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108180,"byte_end":108205,"line_start":344,"line_end":344,"column_start":5,"column_end":30}},{"value":"/         .records()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108210,"byte_end":108232,"line_start":345,"line_end":345,"column_start":5,"column_end":27}},{"value":"/         .collect::<Result<Vec<StringRecord>, csv::Error>>()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108237,"byte_end":108302,"line_start":346,"line_end":346,"column_start":5,"column_end":70}},{"value":"/     assert_eq!(records, vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108307,"byte_end":108340,"line_start":347,"line_end":347,"column_start":5,"column_end":38}},{"value":"/         vec![\"Boston\", \"United States\", \"4628910\"],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108345,"byte_end":108400,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/         vec![\"Concord\", \"United States\", \"42695\"],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108405,"byte_end":108459,"line_start":349,"line_end":349,"column_start":5,"column_end":59}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108464,"byte_end":108475,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108480,"byte_end":108494,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108499,"byte_end":108504,"line_start":352,"line_end":352,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108509,"byte_end":108516,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109716,"byte_end":109726,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"terminator","qualname":"<ReaderBuilder>::terminator","value":"fn (&mut self, term: Terminator) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The record terminator to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The record terminator to use when parsing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108630,"byte_end":108680,"line_start":359,"line_end":359,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108685,"byte_end":108688,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ A record terminator can be any single byte. The default is a special","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108693,"byte_end":108765,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/ value, `Terminator::CRLF`, which treats any occurrence of `\\r`, `\\n`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108770,"byte_end":108842,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ or `\\r\\n` as a single record terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108847,"byte_end":108891,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108896,"byte_end":108899,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Example: `$` as a record terminator","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108904,"byte_end":108945,"line_start":365,"line_end":365,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108950,"byte_end":108953,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108958,"byte_end":108965,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":108970,"byte_end":108996,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/ use csv::{ReaderBuilder, Terminator};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109001,"byte_end":109042,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109047,"byte_end":109050,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109055,"byte_end":109094,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109099,"byte_end":109147,"line_start":372,"line_end":372,"column_start":5,"column_end":53}},{"value":"/     let data = \"city,country,pop$Boston,United States,4628910\";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109152,"byte_end":109219,"line_start":373,"line_end":373,"column_start":5,"column_end":72}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109224,"byte_end":109266,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/         .terminator(Terminator::Any(b'$'))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109271,"byte_end":109317,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109322,"byte_end":109364,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109369,"byte_end":109372,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109377,"byte_end":109429,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109434,"byte_end":109467,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109472,"byte_end":109547,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109552,"byte_end":109570,"line_start":381,"line_end":381,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109575,"byte_end":109591,"line_start":382,"line_end":382,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109596,"byte_end":109668,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109673,"byte_end":109682,"line_start":384,"line_end":384,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109687,"byte_end":109692,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109697,"byte_end":109704,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110771,"byte_end":110776,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"name":"quote","qualname":"<ReaderBuilder>::quote","value":"fn (&mut self, quote: u8) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quote character to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The quote character to use when parsing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109853,"byte_end":109901,"line_start":392,"line_end":392,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109906,"byte_end":109909,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ The default is `b'\"'`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109914,"byte_end":109940,"line_start":394,"line_end":394,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109945,"byte_end":109948,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Example: single quotes instead of double quotes","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":109953,"byte_end":110006,"line_start":396,"line_end":396,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110011,"byte_end":110014,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110019,"byte_end":110026,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110031,"byte_end":110057,"line_start":399,"line_end":399,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110062,"byte_end":110089,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110094,"byte_end":110097,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110102,"byte_end":110141,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110146,"byte_end":110194,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110199,"byte_end":110220,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110225,"byte_end":110245,"line_start":405,"line_end":405,"column_start":5,"column_end":25}},{"value":"/ Boston,'United States',4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110250,"byte_end":110284,"line_start":406,"line_end":406,"column_start":5,"column_end":39}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110289,"byte_end":110295,"line_start":407,"line_end":407,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110300,"byte_end":110342,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/         .quote(b'\\'')","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110347,"byte_end":110372,"line_start":409,"line_end":409,"column_start":5,"column_end":30}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110377,"byte_end":110419,"line_start":410,"line_end":410,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110424,"byte_end":110427,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110432,"byte_end":110484,"line_start":412,"line_end":412,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110489,"byte_end":110522,"line_start":413,"line_end":413,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110527,"byte_end":110602,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110607,"byte_end":110625,"line_start":415,"line_end":415,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110630,"byte_end":110646,"line_start":416,"line_end":416,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110651,"byte_end":110723,"line_start":417,"line_end":417,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110728,"byte_end":110737,"line_start":418,"line_end":418,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110742,"byte_end":110747,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110752,"byte_end":110759,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112028,"byte_end":112034,"line_start":460,"line_end":460,"column_start":12,"column_end":18},"name":"escape","qualname":"<ReaderBuilder>::escape","value":"fn (&mut self, escape: Option<u8>) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The escape character to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The escape character to use when parsing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110882,"byte_end":110931,"line_start":426,"line_end":426,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110936,"byte_end":110939,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ In some variants of CSV, quotes are escaped using a special escape","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":110944,"byte_end":111014,"line_start":428,"line_end":428,"column_start":5,"column_end":75}},{"value":"/ character like `\\` (instead of escaping quotes by doubling them).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111019,"byte_end":111088,"line_start":429,"line_end":429,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111093,"byte_end":111096,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ By default, recognizing these idiosyncratic escapes is disabled.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111101,"byte_end":111169,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111174,"byte_end":111177,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111182,"byte_end":111195,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111200,"byte_end":111203,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111208,"byte_end":111215,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111220,"byte_end":111246,"line_start":436,"line_end":436,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111251,"byte_end":111278,"line_start":437,"line_end":437,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111283,"byte_end":111286,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111291,"byte_end":111330,"line_start":439,"line_end":439,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111335,"byte_end":111383,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111388,"byte_end":111409,"line_start":441,"line_end":441,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111414,"byte_end":111434,"line_start":442,"line_end":442,"column_start":5,"column_end":25}},{"value":"/ Boston,\\\"The \\\\\\\"United\\\\\\\" States\\\",4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111439,"byte_end":111487,"line_start":443,"line_end":443,"column_start":5,"column_end":53}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111492,"byte_end":111498,"line_start":444,"line_end":444,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111503,"byte_end":111545,"line_start":445,"line_end":445,"column_start":5,"column_end":47}},{"value":"/         .escape(Some(b'\\\\'))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111550,"byte_end":111582,"line_start":446,"line_end":446,"column_start":5,"column_end":37}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111587,"byte_end":111629,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111634,"byte_end":111637,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111642,"byte_end":111694,"line_start":449,"line_end":449,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111699,"byte_end":111732,"line_start":450,"line_end":450,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111737,"byte_end":111773,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/             \"Boston\", \"The \\\"United\\\" States\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111778,"byte_end":111839,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"/         ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111844,"byte_end":111859,"line_start":453,"line_end":453,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111864,"byte_end":111882,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111887,"byte_end":111903,"line_start":455,"line_end":455,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111908,"byte_end":111980,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111985,"byte_end":111994,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":111999,"byte_end":112004,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112009,"byte_end":112016,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113184,"byte_end":113196,"line_start":497,"line_end":497,"column_start":12,"column_end":24},"name":"double_quote","qualname":"<ReaderBuilder>::double_quote","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable double quote escapes.","sig":null,"attributes":[{"value":"/ Enable double quote escapes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112151,"byte_end":112183,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112188,"byte_end":112191,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This is enabled by default, but it may be disabled. When disabled,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112196,"byte_end":112266,"line_start":467,"line_end":467,"column_start":5,"column_end":75}},{"value":"/ doubled quotes are not interpreted as escapes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112271,"byte_end":112321,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112326,"byte_end":112329,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112334,"byte_end":112347,"line_start":470,"line_end":470,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112352,"byte_end":112355,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112360,"byte_end":112367,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112372,"byte_end":112398,"line_start":473,"line_end":473,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112403,"byte_end":112430,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112435,"byte_end":112438,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112443,"byte_end":112482,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112487,"byte_end":112535,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112540,"byte_end":112561,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112566,"byte_end":112586,"line_start":479,"line_end":479,"column_start":5,"column_end":25}},{"value":"/ Boston,\\\"The \\\"\\\"United\\\"\\\" States\\\",4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112591,"byte_end":112639,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112644,"byte_end":112650,"line_start":481,"line_end":481,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112655,"byte_end":112697,"line_start":482,"line_end":482,"column_start":5,"column_end":47}},{"value":"/         .double_quote(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112702,"byte_end":112734,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112739,"byte_end":112781,"line_start":484,"line_end":484,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112786,"byte_end":112789,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112794,"byte_end":112846,"line_start":486,"line_end":486,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112851,"byte_end":112884,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112889,"byte_end":112925,"line_start":488,"line_end":488,"column_start":5,"column_end":41}},{"value":"/             \"Boston\", \"The \\\"United\\\"\\\" States\\\"\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":112930,"byte_end":112995,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/         ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113000,"byte_end":113015,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113020,"byte_end":113038,"line_start":491,"line_end":491,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113043,"byte_end":113059,"line_start":492,"line_end":492,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113064,"byte_end":113136,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113141,"byte_end":113150,"line_start":494,"line_end":494,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113155,"byte_end":113160,"line_start":495,"line_end":495,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113165,"byte_end":113172,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114304,"byte_end":114311,"line_start":534,"line_end":534,"column_start":12,"column_end":19},"name":"quoting","qualname":"<ReaderBuilder>::quoting","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable quoting.","sig":null,"attributes":[{"value":"/ Enable or disable quoting.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113307,"byte_end":113337,"line_start":502,"line_end":502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113342,"byte_end":113345,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is enabled by default, but it may be disabled. When disabled,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113350,"byte_end":113420,"line_start":504,"line_end":504,"column_start":5,"column_end":75}},{"value":"/ quotes are not treated specially.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113425,"byte_end":113462,"line_start":505,"line_end":505,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113467,"byte_end":113470,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113475,"byte_end":113488,"line_start":507,"line_end":507,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113493,"byte_end":113496,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113501,"byte_end":113508,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113513,"byte_end":113539,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113544,"byte_end":113571,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113576,"byte_end":113579,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113584,"byte_end":113623,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113628,"byte_end":113676,"line_start":514,"line_end":514,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113681,"byte_end":113702,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113707,"byte_end":113727,"line_start":516,"line_end":516,"column_start":5,"column_end":25}},{"value":"/ Boston,\\\"The United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113732,"byte_end":113770,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113775,"byte_end":113781,"line_start":518,"line_end":518,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113786,"byte_end":113828,"line_start":519,"line_end":519,"column_start":5,"column_end":47}},{"value":"/         .quoting(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113833,"byte_end":113860,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113865,"byte_end":113907,"line_start":521,"line_end":521,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113912,"byte_end":113915,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113920,"byte_end":113972,"line_start":523,"line_end":523,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":113977,"byte_end":114010,"line_start":524,"line_end":524,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114015,"byte_end":114051,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/             \"Boston\", \"\\\"The United States\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114056,"byte_end":114115,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/         ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114120,"byte_end":114135,"line_start":527,"line_end":527,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114140,"byte_end":114158,"line_start":528,"line_end":528,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114163,"byte_end":114179,"line_start":529,"line_end":529,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114184,"byte_end":114256,"line_start":530,"line_end":530,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114261,"byte_end":114270,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114275,"byte_end":114280,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114285,"byte_end":114292,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115472,"byte_end":115479,"line_start":572,"line_end":572,"column_start":12,"column_end":19},"name":"comment","qualname":"<ReaderBuilder>::comment","value":"fn (&mut self, comment: Option<u8>) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The comment character to use when parsing CSV.","sig":null,"attributes":[{"value":"/ The comment character to use when parsing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114417,"byte_end":114467,"line_start":539,"line_end":539,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114472,"byte_end":114475,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ If the start of a record begins with the byte given here, then that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114480,"byte_end":114551,"line_start":541,"line_end":541,"column_start":5,"column_end":76}},{"value":"/ line is ignored by the CSV parser.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114556,"byte_end":114594,"line_start":542,"line_end":542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114599,"byte_end":114602,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This is disabled by default.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114607,"byte_end":114639,"line_start":544,"line_end":544,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114644,"byte_end":114647,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114652,"byte_end":114665,"line_start":546,"line_end":546,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114670,"byte_end":114673,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114678,"byte_end":114685,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114690,"byte_end":114716,"line_start":549,"line_end":549,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114721,"byte_end":114748,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114753,"byte_end":114756,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114761,"byte_end":114800,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114805,"byte_end":114853,"line_start":553,"line_end":553,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114858,"byte_end":114879,"line_start":554,"line_end":554,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114884,"byte_end":114904,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ #Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114909,"byte_end":114941,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114946,"byte_end":114978,"line_start":557,"line_end":557,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114983,"byte_end":114989,"line_start":558,"line_end":558,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":114994,"byte_end":115036,"line_start":559,"line_end":559,"column_start":5,"column_end":47}},{"value":"/         .comment(Some(b'#'))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115041,"byte_end":115073,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115078,"byte_end":115120,"line_start":561,"line_end":561,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115125,"byte_end":115128,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115133,"byte_end":115185,"line_start":563,"line_end":563,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115190,"byte_end":115223,"line_start":564,"line_end":564,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115228,"byte_end":115303,"line_start":565,"line_end":565,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115308,"byte_end":115326,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115331,"byte_end":115347,"line_start":567,"line_end":567,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115352,"byte_end":115424,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115429,"byte_end":115438,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115443,"byte_end":115448,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115453,"byte_end":115460,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116626,"byte_end":116631,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"ascii","qualname":"<ReaderBuilder>::ascii","value":"fn (&mut self) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" A convenience method for specifying a configuration to read ASCII\n delimited text.","sig":null,"attributes":[{"value":"/ A convenience method for specifying a configuration to read ASCII","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115599,"byte_end":115668,"line_start":577,"line_end":577,"column_start":5,"column_end":74}},{"value":"/ delimited text.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115673,"byte_end":115692,"line_start":578,"line_end":578,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115697,"byte_end":115700,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This sets the delimiter and record terminator to the ASCII unit","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115705,"byte_end":115772,"line_start":580,"line_end":580,"column_start":5,"column_end":72}},{"value":"/ separator (`\\x1F`) and record separator (`\\x1E`), respectively.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115777,"byte_end":115844,"line_start":581,"line_end":581,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115849,"byte_end":115852,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115857,"byte_end":115870,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115875,"byte_end":115878,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115883,"byte_end":115890,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115895,"byte_end":115921,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115926,"byte_end":115953,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115958,"byte_end":115961,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":115966,"byte_end":116005,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116010,"byte_end":116058,"line_start":590,"line_end":590,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116063,"byte_end":116084,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/ city\\x1Fcountry\\x1Fpop\\x1EBoston\\x1FUnited States\\x1F4628910\";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116089,"byte_end":116155,"line_start":592,"line_end":592,"column_start":5,"column_end":71}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116160,"byte_end":116202,"line_start":593,"line_end":593,"column_start":5,"column_end":47}},{"value":"/         .ascii()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116207,"byte_end":116227,"line_start":594,"line_end":594,"column_start":5,"column_end":25}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116232,"byte_end":116274,"line_start":595,"line_end":595,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116279,"byte_end":116282,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116287,"byte_end":116339,"line_start":597,"line_end":597,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116344,"byte_end":116377,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116382,"byte_end":116457,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116462,"byte_end":116480,"line_start":600,"line_end":600,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116485,"byte_end":116501,"line_start":601,"line_end":601,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116506,"byte_end":116578,"line_start":602,"line_end":602,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116583,"byte_end":116592,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116597,"byte_end":116602,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116607,"byte_end":116614,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116849,"byte_end":116864,"line_start":613,"line_end":613,"column_start":12,"column_end":27},"name":"buffer_capacity","qualname":"<ReaderBuilder>::buffer_capacity","value":"fn (&mut self, capacity: usize) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the capacity (in bytes) of the buffer used in the CSV reader.\n This defaults to a reasonable setting.\n","sig":null,"attributes":[{"value":"/ Set the capacity (in bytes) of the buffer used in the CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116721,"byte_end":116790,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ This defaults to a reasonable setting.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116795,"byte_end":116837,"line_start":612,"line_end":612,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117154,"byte_end":117157,"line_start":623,"line_end":623,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ReaderBuilder>::nfa","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the NFA for parsing CSV.","sig":null,"attributes":[{"value":"/ Enable or disable the NFA for parsing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":116975,"byte_end":117021,"line_start":618,"line_end":618,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117026,"byte_end":117029,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ This is intended to be a debug option. The NFA is always slower than","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117034,"byte_end":117106,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ the DFA.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117111,"byte_end":117123,"line_start":621,"line_end":621,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":121047,"byte_end":121053,"line_start":707,"line_end":707,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" A already configured CSV reader.","sig":null,"attributes":[{"value":"/ A already configured CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117257,"byte_end":117293,"line_start":629,"line_end":629,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117294,"byte_end":117297,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ A CSV reader takes as input CSV data and transforms that into standard Rust","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117298,"byte_end":117377,"line_start":631,"line_end":631,"column_start":1,"column_end":80}},{"value":"/ values. The most flexible way to read CSV data is as a sequence of records,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117378,"byte_end":117457,"line_start":632,"line_end":632,"column_start":1,"column_end":80}},{"value":"/ where a record is a sequence of fields and each field is a string. However,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117458,"byte_end":117537,"line_start":633,"line_end":633,"column_start":1,"column_end":80}},{"value":"/ a reader can also deserialize CSV data into Rust types like `i64` or","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117538,"byte_end":117610,"line_start":634,"line_end":634,"column_start":1,"column_end":73}},{"value":"/ `(String, f64, f64, f64)` or even a custom struct automatically using","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117611,"byte_end":117684,"line_start":635,"line_end":635,"column_start":1,"column_end":74}},{"value":"/ Serde.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117685,"byte_end":117695,"line_start":636,"line_end":636,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117696,"byte_end":117699,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ # Configuration","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117700,"byte_end":117719,"line_start":638,"line_end":638,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117720,"byte_end":117723,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/ A CSV reader has a couple convenient constructor methods like `from_path`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117724,"byte_end":117801,"line_start":640,"line_end":640,"column_start":1,"column_end":78}},{"value":"/ and `from_reader`. However, if you want to configure the CSV reader to use","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117802,"byte_end":117880,"line_start":641,"line_end":641,"column_start":1,"column_end":79}},{"value":"/ a different delimiter or quote character (among many other things), then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117881,"byte_end":117957,"line_start":642,"line_end":642,"column_start":1,"column_end":77}},{"value":"/ you should use a [`ReaderBuilder`](struct.ReaderBuilder.html) to construct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":117958,"byte_end":118036,"line_start":643,"line_end":643,"column_start":1,"column_end":79}},{"value":"/ a `Reader`. For example, to change the field delimiter:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118037,"byte_end":118096,"line_start":644,"line_end":644,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118097,"byte_end":118100,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118101,"byte_end":118108,"line_start":646,"line_end":646,"column_start":1,"column_end":8}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118109,"byte_end":118135,"line_start":647,"line_end":647,"column_start":1,"column_end":27}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118136,"byte_end":118163,"line_start":648,"line_end":648,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118164,"byte_end":118167,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118168,"byte_end":118207,"line_start":650,"line_end":650,"column_start":1,"column_end":40}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118208,"byte_end":118256,"line_start":651,"line_end":651,"column_start":1,"column_end":49}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118257,"byte_end":118278,"line_start":652,"line_end":652,"column_start":1,"column_end":22}},{"value":"/ city;country;pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118279,"byte_end":118299,"line_start":653,"line_end":653,"column_start":1,"column_end":21}},{"value":"/ Boston;United States;4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118300,"byte_end":118332,"line_start":654,"line_end":654,"column_start":1,"column_end":33}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118333,"byte_end":118339,"line_start":655,"line_end":655,"column_start":1,"column_end":7}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118340,"byte_end":118382,"line_start":656,"line_end":656,"column_start":1,"column_end":43}},{"value":"/         .delimiter(b';')","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118383,"byte_end":118411,"line_start":657,"line_end":657,"column_start":1,"column_end":29}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118412,"byte_end":118454,"line_start":658,"line_end":658,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118455,"byte_end":118458,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118459,"byte_end":118511,"line_start":660,"line_end":660,"column_start":1,"column_end":53}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118512,"byte_end":118545,"line_start":661,"line_end":661,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118546,"byte_end":118621,"line_start":662,"line_end":662,"column_start":1,"column_end":76}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118622,"byte_end":118640,"line_start":663,"line_end":663,"column_start":1,"column_end":19}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118641,"byte_end":118657,"line_start":664,"line_end":664,"column_start":1,"column_end":17}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118658,"byte_end":118730,"line_start":665,"line_end":665,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118731,"byte_end":118740,"line_start":666,"line_end":666,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118741,"byte_end":118746,"line_start":667,"line_end":667,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118747,"byte_end":118754,"line_start":668,"line_end":668,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118755,"byte_end":118758,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ # Error handling","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118759,"byte_end":118779,"line_start":670,"line_end":670,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118780,"byte_end":118783,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ In general, CSV *parsing* does not ever return an error. That is, there is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118784,"byte_end":118862,"line_start":672,"line_end":672,"column_start":1,"column_end":79}},{"value":"/ no such thing as malformed CSV data. Instead, this reader will prioritize","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118863,"byte_end":118940,"line_start":673,"line_end":673,"column_start":1,"column_end":78}},{"value":"/ finding a parse over rejecting CSV data that it does not understand. This","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":118941,"byte_end":119018,"line_start":674,"line_end":674,"column_start":1,"column_end":78}},{"value":"/ choice was inspired by other popular CSV parsers, but also because it is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119019,"byte_end":119095,"line_start":675,"line_end":675,"column_start":1,"column_end":77}},{"value":"/ pragmatic. CSV data varies wildly, so even if the CSV data is malformed,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119096,"byte_end":119172,"line_start":676,"line_end":676,"column_start":1,"column_end":77}},{"value":"/ it might still be possible to work with the data. In the land of CSV, there","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119173,"byte_end":119252,"line_start":677,"line_end":677,"column_start":1,"column_end":80}},{"value":"/ is no \"right\" or \"wrong,\" only \"right\" and \"less right.\"","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119253,"byte_end":119313,"line_start":678,"line_end":678,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119314,"byte_end":119317,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ With that said, a number of errors can occur while reading CSV data:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119318,"byte_end":119390,"line_start":680,"line_end":680,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119391,"byte_end":119394,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ * By default, all records in CSV data must have the same number of fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119395,"byte_end":119473,"line_start":682,"line_end":682,"column_start":1,"column_end":79}},{"value":"/   If a record is found with a different number of fields than a prior","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119474,"byte_end":119547,"line_start":683,"line_end":683,"column_start":1,"column_end":74}},{"value":"/   record, then an error is returned. This behavior can be disabled by","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119548,"byte_end":119621,"line_start":684,"line_end":684,"column_start":1,"column_end":74}},{"value":"/   enabling flexible parsing via the `flexible` method on","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119622,"byte_end":119682,"line_start":685,"line_end":685,"column_start":1,"column_end":61}},{"value":"/   [`ReaderBuilder`](struct.ReaderBuilder.html).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119683,"byte_end":119734,"line_start":686,"line_end":686,"column_start":1,"column_end":52}},{"value":"/ * When reading CSV data from a resource (like a file), it is possible for","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119735,"byte_end":119812,"line_start":687,"line_end":687,"column_start":1,"column_end":78}},{"value":"/   reading from the underlying resource to fail. This will return an error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119813,"byte_end":119891,"line_start":688,"line_end":688,"column_start":1,"column_end":79}},{"value":"/   For subsequent calls to the `Reader` after encountering a such error","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119892,"byte_end":119966,"line_start":689,"line_end":689,"column_start":1,"column_end":75}},{"value":"/   (unless `seek` is used), it will behave as if end of file had been","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":119967,"byte_end":120039,"line_start":690,"line_end":690,"column_start":1,"column_end":73}},{"value":"/   reached, in order to avoid running into infinite loops when still","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120040,"byte_end":120111,"line_start":691,"line_end":691,"column_start":1,"column_end":72}},{"value":"/   attempting to read the next record when one has errored.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120112,"byte_end":120174,"line_start":692,"line_end":692,"column_start":1,"column_end":63}},{"value":"/ * When reading CSV data into `String` or `&str` fields (e.g., via a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120175,"byte_end":120246,"line_start":693,"line_end":693,"column_start":1,"column_end":72}},{"value":"/   [`StringRecord`](struct.StringRecord.html)), UTF-8 is strictly","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120247,"byte_end":120315,"line_start":694,"line_end":694,"column_start":1,"column_end":69}},{"value":"/   enforced. If CSV data is invalid UTF-8, then an error is returned. If","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120316,"byte_end":120391,"line_start":695,"line_end":695,"column_start":1,"column_end":76}},{"value":"/   you want to read invalid UTF-8, then you should use the byte oriented","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120392,"byte_end":120467,"line_start":696,"line_end":696,"column_start":1,"column_end":76}},{"value":"/   APIs such as [`ByteRecord`](struct.ByteRecord.html). If you need explicit","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120468,"byte_end":120547,"line_start":697,"line_end":697,"column_start":1,"column_end":80}},{"value":"/   support for another encoding entirely, then you'll need to use another","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120548,"byte_end":120624,"line_start":698,"line_end":698,"column_start":1,"column_end":77}},{"value":"/   crate to transcode your CSV data to UTF-8 before parsing it.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120625,"byte_end":120691,"line_start":699,"line_end":699,"column_start":1,"column_end":67}},{"value":"/ * When using Serde to deserialize CSV data into Rust types, it is possible","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120692,"byte_end":120770,"line_start":700,"line_end":700,"column_start":1,"column_end":79}},{"value":"/   for a number of additional errors to occur. For example, deserializing","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120771,"byte_end":120847,"line_start":701,"line_end":701,"column_start":1,"column_end":77}},{"value":"/   a field `xyz` into an `i32` field will result in an error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120848,"byte_end":120912,"line_start":702,"line_end":702,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120913,"byte_end":120916,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ For more details on the precise semantics of errors, see the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120917,"byte_end":120981,"line_start":704,"line_end":704,"column_start":1,"column_end":65}},{"value":"/ [`Error`](enum.Error.html) type.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":120982,"byte_end":121018,"line_start":705,"line_end":705,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124763,"byte_end":124772,"line_start":811,"line_end":811,"column_start":12,"column_end":21},"name":"from_path","qualname":"<Reader<Reader<File>>>::from_path","value":"fn <P> (path: P) -> Result<Reader<File>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CSV parser with a default configuration for the given\n file path.","sig":null,"attributes":[{"value":"/ Create a new CSV parser with a default configuration for the given","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124150,"byte_end":124220,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ file path.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124225,"byte_end":124239,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124244,"byte_end":124247,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ To customize CSV parsing, use a `ReaderBuilder`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124252,"byte_end":124304,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124309,"byte_end":124312,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124317,"byte_end":124330,"line_start":795,"line_end":795,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124335,"byte_end":124338,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124343,"byte_end":124356,"line_start":797,"line_end":797,"column_start":5,"column_end":18}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124361,"byte_end":124387,"line_start":798,"line_end":798,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124392,"byte_end":124412,"line_start":799,"line_end":799,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124417,"byte_end":124420,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124425,"byte_end":124464,"line_start":801,"line_end":801,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124469,"byte_end":124517,"line_start":802,"line_end":802,"column_start":5,"column_end":53}},{"value":"/     let mut rdr = Reader::from_path(\"foo.csv\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124522,"byte_end":124574,"line_start":803,"line_end":803,"column_start":5,"column_end":57}},{"value":"/     for result in rdr.records() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124579,"byte_end":124616,"line_start":804,"line_end":804,"column_start":5,"column_end":42}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124621,"byte_end":124654,"line_start":805,"line_end":805,"column_start":5,"column_end":38}},{"value":"/         println!(\"{:?}\", record);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124659,"byte_end":124696,"line_start":806,"line_end":806,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124701,"byte_end":124710,"line_start":807,"line_end":807,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124715,"byte_end":124729,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124734,"byte_end":124739,"line_start":809,"line_end":809,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124744,"byte_end":124751,"line_start":810,"line_end":810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126362,"byte_end":126373,"line_start":863,"line_end":863,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<R>>::from_reader","value":"fn (rdr: R) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CSV parser with a default configuration for the given\n reader.","sig":null,"attributes":[{"value":"/ Create a new CSV parser with a default configuration for the given","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125616,"byte_end":125686,"line_start":837,"line_end":837,"column_start":5,"column_end":75}},{"value":"/ reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125691,"byte_end":125702,"line_start":838,"line_end":838,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125707,"byte_end":125710,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ To customize CSV parsing, use a `ReaderBuilder`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125715,"byte_end":125767,"line_start":840,"line_end":840,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125772,"byte_end":125775,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125780,"byte_end":125793,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125798,"byte_end":125801,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125806,"byte_end":125813,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125818,"byte_end":125844,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125849,"byte_end":125869,"line_start":846,"line_end":846,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125874,"byte_end":125877,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125882,"byte_end":125921,"line_start":848,"line_end":848,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125926,"byte_end":125974,"line_start":849,"line_end":849,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":125979,"byte_end":126000,"line_start":850,"line_end":850,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126005,"byte_end":126025,"line_start":851,"line_end":851,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126030,"byte_end":126062,"line_start":852,"line_end":852,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126067,"byte_end":126098,"line_start":853,"line_end":853,"column_start":5,"column_end":36}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126103,"byte_end":126109,"line_start":854,"line_end":854,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126114,"byte_end":126173,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/     for result in rdr.records() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126178,"byte_end":126215,"line_start":856,"line_end":856,"column_start":5,"column_end":42}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126220,"byte_end":126253,"line_start":857,"line_end":857,"column_start":5,"column_end":38}},{"value":"/         println!(\"{:?}\", record);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126258,"byte_end":126295,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126300,"byte_end":126309,"line_start":859,"line_end":859,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126314,"byte_end":126328,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126333,"byte_end":126338,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126343,"byte_end":126350,"line_start":862,"line_end":862,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133260,"byte_end":133271,"line_start":1051,"line_end":1051,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Reader<R>>::deserialize","value":"fn <D> (&mut self) -> DeserializeRecordsIter<R, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed iterator over deserialized records.","sig":null,"attributes":[{"value":"/ Returns a borrowed iterator over deserialized records.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126454,"byte_end":126512,"line_start":867,"line_end":867,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126517,"byte_end":126520,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `Result<D, Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126525,"byte_end":126588,"line_start":869,"line_end":869,"column_start":5,"column_end":68}},{"value":"/ Therefore, in order to access the record, callers must handle the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126593,"byte_end":126662,"line_start":870,"line_end":870,"column_start":5,"column_end":74}},{"value":"/ possibility of error (typically with `try!` or `?`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126667,"byte_end":126723,"line_start":871,"line_end":871,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126728,"byte_end":126731,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126736,"byte_end":126804,"line_start":873,"line_end":873,"column_start":5,"column_end":73}},{"value":"/ default), then this does not include the first record. Additionally,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126809,"byte_end":126881,"line_start":874,"line_end":874,"column_start":5,"column_end":77}},{"value":"/ if `has_headers` is enabled, then deserializing into a struct will","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126886,"byte_end":126956,"line_start":875,"line_end":875,"column_start":5,"column_end":75}},{"value":"/ automatically align the values in each row to the fields of a struct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":126961,"byte_end":127033,"line_start":876,"line_end":876,"column_start":5,"column_end":77}},{"value":"/ based on the header row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127038,"byte_end":127066,"line_start":877,"line_end":877,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127071,"byte_end":127074,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127079,"byte_end":127092,"line_start":879,"line_end":879,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127097,"byte_end":127100,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This shows how to deserialize CSV data into normal Rust structs. The","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127105,"byte_end":127177,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/ fields of the header row are used to match up the values in each row","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127182,"byte_end":127254,"line_start":882,"line_end":882,"column_start":5,"column_end":77}},{"value":"/ to the fields of the struct.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127259,"byte_end":127291,"line_start":883,"line_end":883,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127296,"byte_end":127299,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127304,"byte_end":127311,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127316,"byte_end":127342,"line_start":886,"line_end":886,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127347,"byte_end":127350,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127355,"byte_end":127375,"line_start":888,"line_end":888,"column_start":5,"column_end":25}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127380,"byte_end":127407,"line_start":889,"line_end":889,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127412,"byte_end":127415,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Deserialize, Eq, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127420,"byte_end":127468,"line_start":891,"line_end":891,"column_start":5,"column_end":53}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127473,"byte_end":127489,"line_start":892,"line_end":892,"column_start":5,"column_end":21}},{"value":"/     city: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127494,"byte_end":127515,"line_start":893,"line_end":893,"column_start":5,"column_end":26}},{"value":"/     country: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127520,"byte_end":127544,"line_start":894,"line_end":894,"column_start":5,"column_end":29}},{"value":"/     #[serde(rename = \"popcount\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127549,"byte_end":127586,"line_start":895,"line_end":895,"column_start":5,"column_end":42}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127591,"byte_end":127615,"line_start":896,"line_end":896,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127620,"byte_end":127625,"line_start":897,"line_end":897,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127630,"byte_end":127633,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127638,"byte_end":127677,"line_start":899,"line_end":899,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127682,"byte_end":127730,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127735,"byte_end":127756,"line_start":901,"line_end":901,"column_start":5,"column_end":26}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127761,"byte_end":127786,"line_start":902,"line_end":902,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127791,"byte_end":127823,"line_start":903,"line_end":903,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127828,"byte_end":127834,"line_start":904,"line_end":904,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127839,"byte_end":127898,"line_start":905,"line_end":905,"column_start":5,"column_end":64}},{"value":"/     let mut iter = rdr.deserialize();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127903,"byte_end":127944,"line_start":906,"line_end":906,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127949,"byte_end":127952,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":127957,"byte_end":128000,"line_start":908,"line_end":908,"column_start":5,"column_end":48}},{"value":"/         let record: Row = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128005,"byte_end":128043,"line_start":909,"line_end":909,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(record, Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128048,"byte_end":128084,"line_start":910,"line_end":910,"column_start":5,"column_end":41}},{"value":"/             city: \"Boston\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128089,"byte_end":128132,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/             country: \"United States\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128137,"byte_end":128190,"line_start":912,"line_end":912,"column_start":5,"column_end":58}},{"value":"/             population: 4628910,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128195,"byte_end":128231,"line_start":913,"line_end":913,"column_start":5,"column_end":41}},{"value":"/         });","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128236,"byte_end":128251,"line_start":914,"line_end":914,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128256,"byte_end":128274,"line_start":915,"line_end":915,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128279,"byte_end":128295,"line_start":916,"line_end":916,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128300,"byte_end":128372,"line_start":917,"line_end":917,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128377,"byte_end":128386,"line_start":918,"line_end":918,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128391,"byte_end":128396,"line_start":919,"line_end":919,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128401,"byte_end":128408,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128413,"byte_end":128416,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Rules","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128421,"byte_end":128432,"line_start":922,"line_end":922,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128437,"byte_end":128440,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ For the most part, any Rust type that maps straight-forwardly to a CSV","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128445,"byte_end":128519,"line_start":924,"line_end":924,"column_start":5,"column_end":79}},{"value":"/ record is supported. This includes maps, structs, tuples and tuple","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128524,"byte_end":128594,"line_start":925,"line_end":925,"column_start":5,"column_end":75}},{"value":"/ structs. Other Rust types, such as `Vec`s, arrays, and enums have","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128599,"byte_end":128668,"line_start":926,"line_end":926,"column_start":5,"column_end":74}},{"value":"/ a more complicated story. In general, when working with CSV data, one","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128673,"byte_end":128746,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ should avoid *nested sequences* as much as possible.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128751,"byte_end":128807,"line_start":928,"line_end":928,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128812,"byte_end":128815,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Maps, structs, tuples and tuple structs map to CSV records in a simple","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128820,"byte_end":128894,"line_start":930,"line_end":930,"column_start":5,"column_end":79}},{"value":"/ way. Tuples and tuple structs decode their fields in the order that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128899,"byte_end":128970,"line_start":931,"line_end":931,"column_start":5,"column_end":76}},{"value":"/ they are defined. Structs will do the same only if `has_headers` has","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":128975,"byte_end":129047,"line_start":932,"line_end":932,"column_start":5,"column_end":77}},{"value":"/ been disabled using [`ReaderBuilder`](struct.ReaderBuilder.html),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129052,"byte_end":129121,"line_start":933,"line_end":933,"column_start":5,"column_end":74}},{"value":"/ otherwise, structs and maps are deserialized based on the fields","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129126,"byte_end":129194,"line_start":934,"line_end":934,"column_start":5,"column_end":73}},{"value":"/ defined in the header row. (If there is no header row, then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129199,"byte_end":129262,"line_start":935,"line_end":935,"column_start":5,"column_end":68}},{"value":"/ deserializing into a map will result in an error.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129267,"byte_end":129321,"line_start":936,"line_end":936,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129326,"byte_end":129329,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Nested sequences are supported in a limited capacity. Namely, they","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129334,"byte_end":129404,"line_start":938,"line_end":938,"column_start":5,"column_end":75}},{"value":"/ are flattened. As a result, it's often useful to use a `Vec` to capture","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129409,"byte_end":129484,"line_start":939,"line_end":939,"column_start":5,"column_end":80}},{"value":"/ a \"tail\" of fields in a record:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129489,"byte_end":129524,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129529,"byte_end":129532,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129537,"byte_end":129544,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129549,"byte_end":129575,"line_start":943,"line_end":943,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129580,"byte_end":129583,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ use csv::ReaderBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129588,"byte_end":129615,"line_start":945,"line_end":945,"column_start":5,"column_end":32}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129620,"byte_end":129647,"line_start":946,"line_end":946,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129652,"byte_end":129655,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Deserialize, Eq, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129660,"byte_end":129708,"line_start":948,"line_end":948,"column_start":5,"column_end":53}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129713,"byte_end":129729,"line_start":949,"line_end":949,"column_start":5,"column_end":21}},{"value":"/     label: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129734,"byte_end":129756,"line_start":950,"line_end":950,"column_start":5,"column_end":27}},{"value":"/     values: Vec<i32>,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129761,"byte_end":129786,"line_start":951,"line_end":951,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129791,"byte_end":129796,"line_start":952,"line_end":952,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129801,"byte_end":129804,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129809,"byte_end":129848,"line_start":954,"line_end":954,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129853,"byte_end":129901,"line_start":955,"line_end":955,"column_start":5,"column_end":53}},{"value":"/     let data = \"foo,1,2,3\";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129906,"byte_end":129937,"line_start":956,"line_end":956,"column_start":5,"column_end":36}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129942,"byte_end":129984,"line_start":957,"line_end":957,"column_start":5,"column_end":47}},{"value":"/         .has_headers(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":129989,"byte_end":130020,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/         .from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130025,"byte_end":130067,"line_start":959,"line_end":959,"column_start":5,"column_end":47}},{"value":"/     let mut iter = rdr.deserialize();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130072,"byte_end":130113,"line_start":960,"line_end":960,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130118,"byte_end":130121,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130126,"byte_end":130169,"line_start":962,"line_end":962,"column_start":5,"column_end":48}},{"value":"/         let record: Row = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130174,"byte_end":130212,"line_start":963,"line_end":963,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(record, Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130217,"byte_end":130253,"line_start":964,"line_end":964,"column_start":5,"column_end":41}},{"value":"/             label: \"foo\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130258,"byte_end":130299,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/             values: vec![1, 2, 3],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130304,"byte_end":130342,"line_start":966,"line_end":966,"column_start":5,"column_end":43}},{"value":"/         });","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130347,"byte_end":130362,"line_start":967,"line_end":967,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130367,"byte_end":130385,"line_start":968,"line_end":968,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130390,"byte_end":130406,"line_start":969,"line_end":969,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130411,"byte_end":130483,"line_start":970,"line_end":970,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130488,"byte_end":130497,"line_start":971,"line_end":971,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130502,"byte_end":130507,"line_start":972,"line_end":972,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130512,"byte_end":130519,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130524,"byte_end":130527,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ In the above example, adding another field to the `Row` struct after","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130532,"byte_end":130604,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ the `values` field will result in a deserialization error. This is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130609,"byte_end":130679,"line_start":976,"line_end":976,"column_start":5,"column_end":75}},{"value":"/ because the deserializer doesn't know when to stop reading fields","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130684,"byte_end":130753,"line_start":977,"line_end":977,"column_start":5,"column_end":74}},{"value":"/ into the `values` vector, so it will consume the rest of the fields in","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130758,"byte_end":130832,"line_start":978,"line_end":978,"column_start":5,"column_end":79}},{"value":"/ the record leaving none left over for the additional field.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130837,"byte_end":130900,"line_start":979,"line_end":979,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130905,"byte_end":130908,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ Finally, simple enums in Rust can be deserialized as well. Namely,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130913,"byte_end":130983,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ enums must either be variants with no arguments or variants with a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":130988,"byte_end":131058,"line_start":982,"line_end":982,"column_start":5,"column_end":75}},{"value":"/ single argument. Variants with no arguments are deserialized based on","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131063,"byte_end":131136,"line_start":983,"line_end":983,"column_start":5,"column_end":78}},{"value":"/ which variant name the field matches. Variants with a single argument","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131141,"byte_end":131214,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ are deserialized based on which variant can store the data. The latter","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131219,"byte_end":131293,"line_start":985,"line_end":985,"column_start":5,"column_end":79}},{"value":"/ is only supported when using \"untagged\" enum deserialization. The","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131298,"byte_end":131367,"line_start":986,"line_end":986,"column_start":5,"column_end":74}},{"value":"/ following example shows both forms in action:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131372,"byte_end":131421,"line_start":987,"line_end":987,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131426,"byte_end":131429,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131434,"byte_end":131441,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131446,"byte_end":131472,"line_start":990,"line_end":990,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131477,"byte_end":131480,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131485,"byte_end":131505,"line_start":992,"line_end":992,"column_start":5,"column_end":25}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131510,"byte_end":131537,"line_start":993,"line_end":993,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131542,"byte_end":131545,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131550,"byte_end":131594,"line_start":995,"line_end":995,"column_start":5,"column_end":49}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131599,"byte_end":131615,"line_start":996,"line_end":996,"column_start":5,"column_end":21}},{"value":"/     label: Label,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131620,"byte_end":131641,"line_start":997,"line_end":997,"column_start":5,"column_end":26}},{"value":"/     value: Number,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131646,"byte_end":131668,"line_start":998,"line_end":998,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131673,"byte_end":131678,"line_start":999,"line_end":999,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131683,"byte_end":131686,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131691,"byte_end":131735,"line_start":1001,"line_end":1001,"column_start":5,"column_end":49}},{"value":"/ #[serde(rename_all = \"lowercase\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131740,"byte_end":131778,"line_start":1002,"line_end":1002,"column_start":5,"column_end":43}},{"value":"/ enum Label {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131783,"byte_end":131799,"line_start":1003,"line_end":1003,"column_start":5,"column_end":21}},{"value":"/     Celsius,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131804,"byte_end":131820,"line_start":1004,"line_end":1004,"column_start":5,"column_end":21}},{"value":"/     Fahrenheit,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131825,"byte_end":131844,"line_start":1005,"line_end":1005,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131849,"byte_end":131854,"line_start":1006,"line_end":1006,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131859,"byte_end":131862,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131867,"byte_end":131911,"line_start":1008,"line_end":1008,"column_start":5,"column_end":49}},{"value":"/ #[serde(untagged)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131916,"byte_end":131938,"line_start":1009,"line_end":1009,"column_start":5,"column_end":27}},{"value":"/ enum Number {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131943,"byte_end":131960,"line_start":1010,"line_end":1010,"column_start":5,"column_end":22}},{"value":"/     Integer(i64),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131965,"byte_end":131986,"line_start":1011,"line_end":1011,"column_start":5,"column_end":26}},{"value":"/     Float(f64),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":131991,"byte_end":132010,"line_start":1012,"line_end":1012,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132015,"byte_end":132020,"line_start":1013,"line_end":1013,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132025,"byte_end":132028,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132033,"byte_end":132072,"line_start":1015,"line_end":1015,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132077,"byte_end":132125,"line_start":1016,"line_end":1016,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132130,"byte_end":132151,"line_start":1017,"line_end":1017,"column_start":5,"column_end":26}},{"value":"/ label,value","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132156,"byte_end":132171,"line_start":1018,"line_end":1018,"column_start":5,"column_end":20}},{"value":"/ celsius,22.2222","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132176,"byte_end":132195,"line_start":1019,"line_end":1019,"column_start":5,"column_end":24}},{"value":"/ fahrenheit,72","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132200,"byte_end":132217,"line_start":1020,"line_end":1020,"column_start":5,"column_end":22}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132222,"byte_end":132228,"line_start":1021,"line_end":1021,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132233,"byte_end":132292,"line_start":1022,"line_end":1022,"column_start":5,"column_end":64}},{"value":"/     let mut iter = rdr.deserialize();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132297,"byte_end":132338,"line_start":1023,"line_end":1023,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132343,"byte_end":132346,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/     // Read the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132351,"byte_end":132384,"line_start":1025,"line_end":1025,"column_start":5,"column_end":38}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132389,"byte_end":132432,"line_start":1026,"line_end":1026,"column_start":5,"column_end":48}},{"value":"/         let record: Row = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132437,"byte_end":132475,"line_start":1027,"line_end":1027,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(record, Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132480,"byte_end":132516,"line_start":1028,"line_end":1028,"column_start":5,"column_end":41}},{"value":"/             label: Label::Celsius,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132521,"byte_end":132559,"line_start":1029,"line_end":1029,"column_start":5,"column_end":43}},{"value":"/             value: Number::Float(22.2222),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132564,"byte_end":132610,"line_start":1030,"line_end":1030,"column_start":5,"column_end":51}},{"value":"/         });","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132615,"byte_end":132630,"line_start":1031,"line_end":1031,"column_start":5,"column_end":20}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132635,"byte_end":132651,"line_start":1032,"line_end":1032,"column_start":5,"column_end":21}},{"value":"/         return Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132656,"byte_end":132690,"line_start":1033,"line_end":1033,"column_start":5,"column_end":39}},{"value":"/             \"expected at least two records but got none\"));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132695,"byte_end":132758,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132763,"byte_end":132772,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132777,"byte_end":132780,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/     // Read the second record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132785,"byte_end":132819,"line_start":1037,"line_end":1037,"column_start":5,"column_end":39}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132824,"byte_end":132867,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/         let record: Row = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132872,"byte_end":132910,"line_start":1039,"line_end":1039,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(record, Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132915,"byte_end":132951,"line_start":1040,"line_end":1040,"column_start":5,"column_end":41}},{"value":"/             label: Label::Fahrenheit,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":132956,"byte_end":132997,"line_start":1041,"line_end":1041,"column_start":5,"column_end":46}},{"value":"/             value: Number::Integer(72),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133002,"byte_end":133045,"line_start":1042,"line_end":1042,"column_start":5,"column_end":48}},{"value":"/         });","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133050,"byte_end":133065,"line_start":1043,"line_end":1043,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133070,"byte_end":133088,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133093,"byte_end":133109,"line_start":1045,"line_end":1045,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133114,"byte_end":133141,"line_start":1046,"line_end":1046,"column_start":5,"column_end":32}},{"value":"/             \"expected at least two records but got only one\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133146,"byte_end":133212,"line_start":1047,"line_end":1047,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133217,"byte_end":133226,"line_start":1048,"line_end":1048,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133231,"byte_end":133236,"line_start":1049,"line_end":1049,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133241,"byte_end":133248,"line_start":1050,"line_end":1050,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135406,"byte_end":135422,"line_start":1114,"line_end":1114,"column_start":12,"column_end":28},"name":"into_deserialize","qualname":"<Reader<R>>::into_deserialize","value":"fn <D> (self) -> DeserializeRecordsIntoIter<R, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned iterator over deserialized records.","sig":null,"attributes":[{"value":"/ Returns an owned iterator over deserialized records.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133416,"byte_end":133472,"line_start":1058,"line_end":1058,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133477,"byte_end":133480,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `Result<D, Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133485,"byte_end":133548,"line_start":1060,"line_end":1060,"column_start":5,"column_end":68}},{"value":"/ Therefore, in order to access the record, callers must handle the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133553,"byte_end":133622,"line_start":1061,"line_end":1061,"column_start":5,"column_end":74}},{"value":"/ possibility of error (typically with `try!` or `?`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133627,"byte_end":133683,"line_start":1062,"line_end":1062,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133688,"byte_end":133691,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful when you want to return a CSV iterator or store","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133696,"byte_end":133769,"line_start":1064,"line_end":1064,"column_start":5,"column_end":78}},{"value":"/ it somewhere.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133774,"byte_end":133791,"line_start":1065,"line_end":1065,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133796,"byte_end":133799,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133804,"byte_end":133872,"line_start":1067,"line_end":1067,"column_start":5,"column_end":73}},{"value":"/ default), then this does not include the first record. Additionally,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133877,"byte_end":133949,"line_start":1068,"line_end":1068,"column_start":5,"column_end":77}},{"value":"/ if `has_headers` is enabled, then deserializing into a struct will","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":133954,"byte_end":134024,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ automatically align the values in each row to the fields of a struct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134029,"byte_end":134101,"line_start":1070,"line_end":1070,"column_start":5,"column_end":77}},{"value":"/ based on the header row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134106,"byte_end":134134,"line_start":1071,"line_end":1071,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134139,"byte_end":134142,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ For more detailed deserialization rules, see the documentation on the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134147,"byte_end":134220,"line_start":1073,"line_end":1073,"column_start":5,"column_end":78}},{"value":"/ `deserialize` method.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134225,"byte_end":134250,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134255,"byte_end":134258,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134263,"byte_end":134276,"line_start":1076,"line_end":1076,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134281,"byte_end":134284,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134289,"byte_end":134296,"line_start":1078,"line_end":1078,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134301,"byte_end":134327,"line_start":1079,"line_end":1079,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134332,"byte_end":134335,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134340,"byte_end":134360,"line_start":1081,"line_end":1081,"column_start":5,"column_end":25}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134365,"byte_end":134392,"line_start":1082,"line_end":1082,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134397,"byte_end":134400,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Deserialize, Eq, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134405,"byte_end":134453,"line_start":1084,"line_end":1084,"column_start":5,"column_end":53}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134458,"byte_end":134474,"line_start":1085,"line_end":1085,"column_start":5,"column_end":21}},{"value":"/     city: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134479,"byte_end":134500,"line_start":1086,"line_end":1086,"column_start":5,"column_end":26}},{"value":"/     country: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134505,"byte_end":134529,"line_start":1087,"line_end":1087,"column_start":5,"column_end":29}},{"value":"/     #[serde(rename = \"popcount\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134534,"byte_end":134571,"line_start":1088,"line_end":1088,"column_start":5,"column_end":42}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134576,"byte_end":134600,"line_start":1089,"line_end":1089,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134605,"byte_end":134610,"line_start":1090,"line_end":1090,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134615,"byte_end":134618,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134623,"byte_end":134662,"line_start":1092,"line_end":1092,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134667,"byte_end":134715,"line_start":1093,"line_end":1093,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134720,"byte_end":134741,"line_start":1094,"line_end":1094,"column_start":5,"column_end":26}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134746,"byte_end":134771,"line_start":1095,"line_end":1095,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134776,"byte_end":134808,"line_start":1096,"line_end":1096,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134813,"byte_end":134819,"line_start":1097,"line_end":1097,"column_start":5,"column_end":11}},{"value":"/     let rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134824,"byte_end":134879,"line_start":1098,"line_end":1098,"column_start":5,"column_end":60}},{"value":"/     let mut iter = rdr.into_deserialize();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134884,"byte_end":134930,"line_start":1099,"line_end":1099,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134935,"byte_end":134938,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134943,"byte_end":134986,"line_start":1101,"line_end":1101,"column_start":5,"column_end":48}},{"value":"/         let record: Row = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":134991,"byte_end":135029,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(record, Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135034,"byte_end":135070,"line_start":1103,"line_end":1103,"column_start":5,"column_end":41}},{"value":"/             city: \"Boston\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135075,"byte_end":135118,"line_start":1104,"line_end":1104,"column_start":5,"column_end":48}},{"value":"/             country: \"United States\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135123,"byte_end":135176,"line_start":1105,"line_end":1105,"column_start":5,"column_end":58}},{"value":"/             population: 4628910,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135181,"byte_end":135217,"line_start":1106,"line_end":1106,"column_start":5,"column_end":41}},{"value":"/         });","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135222,"byte_end":135237,"line_start":1107,"line_end":1107,"column_start":5,"column_end":20}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135242,"byte_end":135260,"line_start":1108,"line_end":1108,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135265,"byte_end":135281,"line_start":1109,"line_end":1109,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135286,"byte_end":135358,"line_start":1110,"line_end":1110,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135363,"byte_end":135372,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135377,"byte_end":135382,"line_start":1112,"line_end":1112,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135387,"byte_end":135394,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136751,"byte_end":136758,"line_start":1154,"line_end":1154,"column_start":12,"column_end":19},"name":"records","qualname":"<Reader<R>>::records","value":"fn (&mut self) -> StringRecordsIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed iterator over all records as strings.","sig":null,"attributes":[{"value":"/ Returns a borrowed iterator over all records as strings.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135570,"byte_end":135630,"line_start":1121,"line_end":1121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135635,"byte_end":135638,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `Result<StringRecord, Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135643,"byte_end":135717,"line_start":1123,"line_end":1123,"column_start":5,"column_end":79}},{"value":"/ Therefore, in order to access the record, callers must handle the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135722,"byte_end":135791,"line_start":1124,"line_end":1124,"column_start":5,"column_end":74}},{"value":"/ possibility of error (typically with `try!` or `?`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135796,"byte_end":135852,"line_start":1125,"line_end":1125,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135857,"byte_end":135860,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135865,"byte_end":135933,"line_start":1127,"line_end":1127,"column_start":5,"column_end":73}},{"value":"/ default), then this does not include the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":135938,"byte_end":135996,"line_start":1128,"line_end":1128,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136001,"byte_end":136004,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136009,"byte_end":136022,"line_start":1130,"line_end":1130,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136027,"byte_end":136030,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136035,"byte_end":136042,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136047,"byte_end":136073,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136078,"byte_end":136098,"line_start":1134,"line_end":1134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136103,"byte_end":136106,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136111,"byte_end":136150,"line_start":1136,"line_end":1136,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136155,"byte_end":136203,"line_start":1137,"line_end":1137,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136208,"byte_end":136229,"line_start":1138,"line_end":1138,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136234,"byte_end":136254,"line_start":1139,"line_end":1139,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136259,"byte_end":136291,"line_start":1140,"line_end":1140,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136296,"byte_end":136302,"line_start":1141,"line_end":1141,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136307,"byte_end":136366,"line_start":1142,"line_end":1142,"column_start":5,"column_end":64}},{"value":"/     let mut iter = rdr.records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136371,"byte_end":136408,"line_start":1143,"line_end":1143,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136413,"byte_end":136416,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136421,"byte_end":136464,"line_start":1145,"line_end":1145,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136469,"byte_end":136502,"line_start":1146,"line_end":1146,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136507,"byte_end":136582,"line_start":1147,"line_end":1147,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136587,"byte_end":136605,"line_start":1148,"line_end":1148,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136610,"byte_end":136626,"line_start":1149,"line_end":1149,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136631,"byte_end":136703,"line_start":1150,"line_end":1150,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136708,"byte_end":136717,"line_start":1151,"line_end":1151,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136722,"byte_end":136727,"line_start":1152,"line_end":1152,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136732,"byte_end":136739,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138132,"byte_end":138144,"line_start":1194,"line_end":1194,"column_start":12,"column_end":24},"name":"into_records","qualname":"<Reader<R>>::into_records","value":"fn (self) -> StringRecordsIntoIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned iterator over all records as strings.","sig":null,"attributes":[{"value":"/ Returns an owned iterator over all records as strings.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136844,"byte_end":136902,"line_start":1158,"line_end":1158,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136907,"byte_end":136910,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `Result<StringRecord, Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136915,"byte_end":136989,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ Therefore, in order to access the record, callers must handle the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":136994,"byte_end":137063,"line_start":1161,"line_end":1161,"column_start":5,"column_end":74}},{"value":"/ possibility of error (typically with `try!` or `?`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137068,"byte_end":137124,"line_start":1162,"line_end":1162,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137129,"byte_end":137132,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful when you want to return a CSV iterator or store","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137137,"byte_end":137210,"line_start":1164,"line_end":1164,"column_start":5,"column_end":78}},{"value":"/ it somewhere.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137215,"byte_end":137232,"line_start":1165,"line_end":1165,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137237,"byte_end":137240,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137245,"byte_end":137313,"line_start":1167,"line_end":1167,"column_start":5,"column_end":73}},{"value":"/ default), then this does not include the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137318,"byte_end":137376,"line_start":1168,"line_end":1168,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137381,"byte_end":137384,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137389,"byte_end":137402,"line_start":1170,"line_end":1170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137407,"byte_end":137410,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137415,"byte_end":137422,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137427,"byte_end":137453,"line_start":1173,"line_end":1173,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137458,"byte_end":137478,"line_start":1174,"line_end":1174,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137483,"byte_end":137486,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137491,"byte_end":137530,"line_start":1176,"line_end":1176,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137535,"byte_end":137583,"line_start":1177,"line_end":1177,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137588,"byte_end":137609,"line_start":1178,"line_end":1178,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137614,"byte_end":137634,"line_start":1179,"line_end":1179,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137639,"byte_end":137671,"line_start":1180,"line_end":1180,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137676,"byte_end":137682,"line_start":1181,"line_end":1181,"column_start":5,"column_end":11}},{"value":"/     let rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137687,"byte_end":137742,"line_start":1182,"line_end":1182,"column_start":5,"column_end":60}},{"value":"/     let mut iter = rdr.into_records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137747,"byte_end":137789,"line_start":1183,"line_end":1183,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137794,"byte_end":137797,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137802,"byte_end":137845,"line_start":1185,"line_end":1185,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137850,"byte_end":137883,"line_start":1186,"line_end":1186,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137888,"byte_end":137963,"line_start":1187,"line_end":1187,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137968,"byte_end":137986,"line_start":1188,"line_end":1188,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":137991,"byte_end":138007,"line_start":1189,"line_end":1189,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138012,"byte_end":138084,"line_start":1190,"line_end":1190,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138089,"byte_end":138098,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138103,"byte_end":138108,"line_start":1192,"line_end":1192,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138113,"byte_end":138120,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139419,"byte_end":139431,"line_start":1231,"line_end":1231,"column_start":12,"column_end":24},"name":"byte_records","qualname":"<Reader<R>>::byte_records","value":"fn (&mut self) -> ByteRecordsIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed iterator over all records as raw bytes.","sig":null,"attributes":[{"value":"/ Returns a borrowed iterator over all records as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138233,"byte_end":138295,"line_start":1198,"line_end":1198,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138300,"byte_end":138303,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `Result<ByteRecord, Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138308,"byte_end":138380,"line_start":1200,"line_end":1200,"column_start":5,"column_end":77}},{"value":"/ Therefore, in order to access the record, callers must handle the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138385,"byte_end":138454,"line_start":1201,"line_end":1201,"column_start":5,"column_end":74}},{"value":"/ possibility of error (typically with `try!` or `?`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138459,"byte_end":138515,"line_start":1202,"line_end":1202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138520,"byte_end":138523,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138528,"byte_end":138596,"line_start":1204,"line_end":1204,"column_start":5,"column_end":73}},{"value":"/ default), then this does not include the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138601,"byte_end":138659,"line_start":1205,"line_end":1205,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138664,"byte_end":138667,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138672,"byte_end":138685,"line_start":1207,"line_end":1207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138690,"byte_end":138693,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138698,"byte_end":138705,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138710,"byte_end":138736,"line_start":1210,"line_end":1210,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138741,"byte_end":138761,"line_start":1211,"line_end":1211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138766,"byte_end":138769,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138774,"byte_end":138813,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138818,"byte_end":138866,"line_start":1214,"line_end":1214,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138871,"byte_end":138892,"line_start":1215,"line_end":1215,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138897,"byte_end":138917,"line_start":1216,"line_end":1216,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138922,"byte_end":138954,"line_start":1217,"line_end":1217,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138959,"byte_end":138965,"line_start":1218,"line_end":1218,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":138970,"byte_end":139029,"line_start":1219,"line_end":1219,"column_start":5,"column_end":64}},{"value":"/     let mut iter = rdr.byte_records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139034,"byte_end":139076,"line_start":1220,"line_end":1220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139081,"byte_end":139084,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139089,"byte_end":139132,"line_start":1222,"line_end":1222,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139137,"byte_end":139170,"line_start":1223,"line_end":1223,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139175,"byte_end":139250,"line_start":1224,"line_end":1224,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139255,"byte_end":139273,"line_start":1225,"line_end":1225,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139278,"byte_end":139294,"line_start":1226,"line_end":1226,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139299,"byte_end":139371,"line_start":1227,"line_end":1227,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139376,"byte_end":139385,"line_start":1228,"line_end":1228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139390,"byte_end":139395,"line_start":1229,"line_end":1229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139400,"byte_end":139407,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140806,"byte_end":140823,"line_start":1271,"line_end":1271,"column_start":12,"column_end":29},"name":"into_byte_records","qualname":"<Reader<R>>::into_byte_records","value":"fn (self) -> ByteRecordsIntoIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned iterator over all records as raw bytes.","sig":null,"attributes":[{"value":"/ Returns an owned iterator over all records as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139513,"byte_end":139573,"line_start":1235,"line_end":1235,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139578,"byte_end":139581,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `Result<ByteRecord, Error>`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139586,"byte_end":139658,"line_start":1237,"line_end":1237,"column_start":5,"column_end":77}},{"value":"/ Therefore, in order to access the record, callers must handle the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139663,"byte_end":139732,"line_start":1238,"line_end":1238,"column_start":5,"column_end":74}},{"value":"/ possibility of error (typically with `try!` or `?`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139737,"byte_end":139793,"line_start":1239,"line_end":1239,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139798,"byte_end":139801,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful when you want to return a CSV iterator or store","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139806,"byte_end":139879,"line_start":1241,"line_end":1241,"column_start":5,"column_end":78}},{"value":"/ it somewhere.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139884,"byte_end":139901,"line_start":1242,"line_end":1242,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139906,"byte_end":139909,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139914,"byte_end":139982,"line_start":1244,"line_end":1244,"column_start":5,"column_end":73}},{"value":"/ default), then this does not include the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":139987,"byte_end":140045,"line_start":1245,"line_end":1245,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140050,"byte_end":140053,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140058,"byte_end":140071,"line_start":1247,"line_end":1247,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140076,"byte_end":140079,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140084,"byte_end":140091,"line_start":1249,"line_end":1249,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140096,"byte_end":140122,"line_start":1250,"line_end":1250,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140127,"byte_end":140147,"line_start":1251,"line_end":1251,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140152,"byte_end":140155,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140160,"byte_end":140199,"line_start":1253,"line_end":1253,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140204,"byte_end":140252,"line_start":1254,"line_end":1254,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140257,"byte_end":140278,"line_start":1255,"line_end":1255,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140283,"byte_end":140303,"line_start":1256,"line_end":1256,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140308,"byte_end":140340,"line_start":1257,"line_end":1257,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140345,"byte_end":140351,"line_start":1258,"line_end":1258,"column_start":5,"column_end":11}},{"value":"/     let rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140356,"byte_end":140411,"line_start":1259,"line_end":1259,"column_start":5,"column_end":60}},{"value":"/     let mut iter = rdr.into_byte_records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140416,"byte_end":140463,"line_start":1260,"line_end":1260,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140468,"byte_end":140471,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140476,"byte_end":140519,"line_start":1262,"line_end":1262,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140524,"byte_end":140557,"line_start":1263,"line_end":1263,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140562,"byte_end":140637,"line_start":1264,"line_end":1264,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140642,"byte_end":140660,"line_start":1265,"line_end":1265,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140665,"byte_end":140681,"line_start":1266,"line_end":1266,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140686,"byte_end":140758,"line_start":1267,"line_end":1267,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140763,"byte_end":140772,"line_start":1268,"line_end":1268,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140777,"byte_end":140782,"line_start":1269,"line_end":1269,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140787,"byte_end":140794,"line_start":1270,"line_end":1270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142947,"byte_end":142954,"line_start":1329,"line_end":1329,"column_start":12,"column_end":19},"name":"headers","qualname":"<Reader<R>>::headers","value":"fn (&mut self) -> Result<&StringRecord>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first row read by this parser.","sig":null,"attributes":[{"value":"/ Returns a reference to the first row read by this parser.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140908,"byte_end":140969,"line_start":1275,"line_end":1275,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140974,"byte_end":140977,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ If no row has been read yet, then this will force parsing of the first","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":140982,"byte_end":141056,"line_start":1277,"line_end":1277,"column_start":5,"column_end":79}},{"value":"/ row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141061,"byte_end":141069,"line_start":1278,"line_end":1278,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141074,"byte_end":141077,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ If there was a problem parsing the row or if it wasn't valid UTF-8,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141082,"byte_end":141153,"line_start":1280,"line_end":1280,"column_start":5,"column_end":76}},{"value":"/ then this returns an error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141158,"byte_end":141189,"line_start":1281,"line_end":1281,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141194,"byte_end":141197,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ If the underlying reader emits EOF before any data, then this returns","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141202,"byte_end":141275,"line_start":1283,"line_end":1283,"column_start":5,"column_end":78}},{"value":"/ an empty record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141280,"byte_end":141300,"line_start":1284,"line_end":1284,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141305,"byte_end":141308,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ Note that this method may be used regardless of whether `has_headers`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141313,"byte_end":141386,"line_start":1286,"line_end":1286,"column_start":5,"column_end":78}},{"value":"/ was enabled (but it is enabled by default).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141391,"byte_end":141438,"line_start":1287,"line_end":1287,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141443,"byte_end":141446,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141451,"byte_end":141464,"line_start":1289,"line_end":1289,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141469,"byte_end":141472,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ This example shows how to get the header row of CSV data. Notice that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141477,"byte_end":141550,"line_start":1291,"line_end":1291,"column_start":5,"column_end":78}},{"value":"/ the header row does not appear as a record in the iterator!","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141555,"byte_end":141618,"line_start":1292,"line_end":1292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141623,"byte_end":141626,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141631,"byte_end":141638,"line_start":1294,"line_end":1294,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141643,"byte_end":141669,"line_start":1295,"line_end":1295,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141674,"byte_end":141694,"line_start":1296,"line_end":1296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141699,"byte_end":141702,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141707,"byte_end":141746,"line_start":1298,"line_end":1298,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141751,"byte_end":141799,"line_start":1299,"line_end":1299,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141804,"byte_end":141825,"line_start":1300,"line_end":1300,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141830,"byte_end":141850,"line_start":1301,"line_end":1301,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141855,"byte_end":141887,"line_start":1302,"line_end":1302,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141892,"byte_end":141898,"line_start":1303,"line_end":1303,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141903,"byte_end":141962,"line_start":1304,"line_end":1304,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141967,"byte_end":141970,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/     // We can read the headers before iterating.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":141975,"byte_end":142027,"line_start":1306,"line_end":1306,"column_start":5,"column_end":57}},{"value":"/     {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142032,"byte_end":142041,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/         // `headers` borrows from the reader, so we put this in its","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142046,"byte_end":142117,"line_start":1308,"line_end":1308,"column_start":5,"column_end":76}},{"value":"/         // own scope. That way, the borrow ends before we try iterating","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142122,"byte_end":142197,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/         // below. Alternatively, we could clone the headers.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142202,"byte_end":142266,"line_start":1310,"line_end":1310,"column_start":5,"column_end":69}},{"value":"/         let headers = rdr.headers()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142271,"byte_end":142312,"line_start":1311,"line_end":1311,"column_start":5,"column_end":46}},{"value":"/         assert_eq!(headers, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142317,"byte_end":142381,"line_start":1312,"line_end":1312,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142386,"byte_end":142395,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142400,"byte_end":142403,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142408,"byte_end":142460,"line_start":1315,"line_end":1315,"column_start":5,"column_end":57}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142465,"byte_end":142498,"line_start":1316,"line_end":1316,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142503,"byte_end":142578,"line_start":1317,"line_end":1317,"column_start":5,"column_end":80}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142583,"byte_end":142599,"line_start":1318,"line_end":1318,"column_start":5,"column_end":21}},{"value":"/         return Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142604,"byte_end":142638,"line_start":1319,"line_end":1319,"column_start":5,"column_end":39}},{"value":"/             \"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142643,"byte_end":142704,"line_start":1320,"line_end":1320,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142709,"byte_end":142718,"line_start":1321,"line_end":1321,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142723,"byte_end":142726,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/     // We can also read the headers after iterating.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142731,"byte_end":142787,"line_start":1323,"line_end":1323,"column_start":5,"column_end":61}},{"value":"/     let headers = rdr.headers()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142792,"byte_end":142829,"line_start":1324,"line_end":1324,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(headers, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142834,"byte_end":142894,"line_start":1325,"line_end":1325,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142899,"byte_end":142913,"line_start":1326,"line_end":1326,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142918,"byte_end":142923,"line_start":1327,"line_end":1327,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":142928,"byte_end":142935,"line_start":1328,"line_end":1328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145569,"byte_end":145581,"line_start":1398,"line_end":1398,"column_start":12,"column_end":24},"name":"byte_headers","qualname":"<Reader<R>>::byte_headers","value":"fn (&mut self) -> Result<&ByteRecord>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first row read by this parser as raw bytes.","sig":null,"attributes":[{"value":"/ Returns a reference to the first row read by this parser as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143539,"byte_end":143613,"line_start":1345,"line_end":1345,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143618,"byte_end":143621,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ If no row has been read yet, then this will force parsing of the first","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143626,"byte_end":143700,"line_start":1347,"line_end":1347,"column_start":5,"column_end":79}},{"value":"/ row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143705,"byte_end":143713,"line_start":1348,"line_end":1348,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143718,"byte_end":143721,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ If there was a problem parsing the row then this returns an error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143726,"byte_end":143796,"line_start":1350,"line_end":1350,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143801,"byte_end":143804,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ If the underlying reader emits EOF before any data, then this returns","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143809,"byte_end":143882,"line_start":1352,"line_end":1352,"column_start":5,"column_end":78}},{"value":"/ an empty record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143887,"byte_end":143907,"line_start":1353,"line_end":1353,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143912,"byte_end":143915,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Note that this method may be used regardless of whether `has_headers`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143920,"byte_end":143993,"line_start":1355,"line_end":1355,"column_start":5,"column_end":78}},{"value":"/ was enabled (but it is enabled by default).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":143998,"byte_end":144045,"line_start":1356,"line_end":1356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144050,"byte_end":144053,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144058,"byte_end":144071,"line_start":1358,"line_end":1358,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144076,"byte_end":144079,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ This example shows how to get the header row of CSV data. Notice that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144084,"byte_end":144157,"line_start":1360,"line_end":1360,"column_start":5,"column_end":78}},{"value":"/ the header row does not appear as a record in the iterator!","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144162,"byte_end":144225,"line_start":1361,"line_end":1361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144230,"byte_end":144233,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144238,"byte_end":144245,"line_start":1363,"line_end":1363,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144250,"byte_end":144276,"line_start":1364,"line_end":1364,"column_start":5,"column_end":31}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144281,"byte_end":144301,"line_start":1365,"line_end":1365,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144306,"byte_end":144309,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144314,"byte_end":144353,"line_start":1367,"line_end":1367,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144358,"byte_end":144406,"line_start":1368,"line_end":1368,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144411,"byte_end":144432,"line_start":1369,"line_end":1369,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144437,"byte_end":144457,"line_start":1370,"line_end":1370,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144462,"byte_end":144494,"line_start":1371,"line_end":1371,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144499,"byte_end":144505,"line_start":1372,"line_end":1372,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144510,"byte_end":144569,"line_start":1373,"line_end":1373,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144574,"byte_end":144577,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/     // We can read the headers before iterating.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144582,"byte_end":144634,"line_start":1375,"line_end":1375,"column_start":5,"column_end":57}},{"value":"/     {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144639,"byte_end":144648,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}},{"value":"/         // `headers` borrows from the reader, so we put this in its","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144653,"byte_end":144724,"line_start":1377,"line_end":1377,"column_start":5,"column_end":76}},{"value":"/         // own scope. That way, the borrow ends before we try iterating","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144729,"byte_end":144804,"line_start":1378,"line_end":1378,"column_start":5,"column_end":80}},{"value":"/         // below. Alternatively, we could clone the headers.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144809,"byte_end":144873,"line_start":1379,"line_end":1379,"column_start":5,"column_end":69}},{"value":"/         let headers = rdr.byte_headers()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144878,"byte_end":144924,"line_start":1380,"line_end":1380,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(headers, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144929,"byte_end":144993,"line_start":1381,"line_end":1381,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":144998,"byte_end":145007,"line_start":1382,"line_end":1382,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145012,"byte_end":145015,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/     if let Some(result) = rdr.byte_records().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145020,"byte_end":145077,"line_start":1384,"line_end":1384,"column_start":5,"column_end":62}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145082,"byte_end":145115,"line_start":1385,"line_end":1385,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145120,"byte_end":145195,"line_start":1386,"line_end":1386,"column_start":5,"column_end":80}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145200,"byte_end":145216,"line_start":1387,"line_end":1387,"column_start":5,"column_end":21}},{"value":"/         return Err(From::from(","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145221,"byte_end":145255,"line_start":1388,"line_end":1388,"column_start":5,"column_end":39}},{"value":"/             \"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145260,"byte_end":145321,"line_start":1389,"line_end":1389,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145326,"byte_end":145335,"line_start":1390,"line_end":1390,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145340,"byte_end":145343,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/     // We can also read the headers after iterating.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145348,"byte_end":145404,"line_start":1392,"line_end":1392,"column_start":5,"column_end":61}},{"value":"/     let headers = rdr.byte_headers()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145409,"byte_end":145451,"line_start":1393,"line_end":1393,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(headers, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145456,"byte_end":145516,"line_start":1394,"line_end":1394,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145521,"byte_end":145535,"line_start":1395,"line_end":1395,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145540,"byte_end":145545,"line_start":1396,"line_end":1396,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145550,"byte_end":145557,"line_start":1397,"line_end":1397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146776,"byte_end":146787,"line_start":1434,"line_end":1434,"column_start":12,"column_end":23},"name":"set_headers","qualname":"<Reader<R>>::set_headers","value":"fn (&mut self, headers: StringRecord) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the headers of this CSV parser manually.","sig":null,"attributes":[{"value":"/ Set the headers of this CSV parser manually.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145893,"byte_end":145941,"line_start":1407,"line_end":1407,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145946,"byte_end":145949,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ This overrides any other setting (including `set_byte_headers`). Any","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":145954,"byte_end":146026,"line_start":1409,"line_end":1409,"column_start":5,"column_end":77}},{"value":"/ automatic detection of headers is disabled. This may be called at any","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146031,"byte_end":146104,"line_start":1410,"line_end":1410,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146109,"byte_end":146118,"line_start":1411,"line_end":1411,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146123,"byte_end":146126,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146131,"byte_end":146144,"line_start":1413,"line_end":1413,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146149,"byte_end":146152,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146157,"byte_end":146164,"line_start":1415,"line_end":1415,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146169,"byte_end":146195,"line_start":1416,"line_end":1416,"column_start":5,"column_end":31}},{"value":"/ use csv::{Reader, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146200,"byte_end":146236,"line_start":1417,"line_end":1417,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146241,"byte_end":146244,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146249,"byte_end":146288,"line_start":1419,"line_end":1419,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146293,"byte_end":146341,"line_start":1420,"line_end":1420,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146346,"byte_end":146367,"line_start":1421,"line_end":1421,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146372,"byte_end":146392,"line_start":1422,"line_end":1422,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146397,"byte_end":146429,"line_start":1423,"line_end":1423,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146434,"byte_end":146440,"line_start":1424,"line_end":1424,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146445,"byte_end":146504,"line_start":1425,"line_end":1425,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146509,"byte_end":146512,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(rdr.headers()?, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146517,"byte_end":146584,"line_start":1427,"line_end":1427,"column_start":5,"column_end":72}},{"value":"/     rdr.set_headers(StringRecord::from(vec![\"a\", \"b\", \"c\"]));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146589,"byte_end":146654,"line_start":1428,"line_end":1428,"column_start":5,"column_end":70}},{"value":"/     assert_eq!(rdr.headers()?, vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146659,"byte_end":146715,"line_start":1429,"line_end":1429,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146720,"byte_end":146723,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146728,"byte_end":146742,"line_start":1431,"line_end":1431,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146747,"byte_end":146752,"line_start":1432,"line_end":1432,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146757,"byte_end":146764,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147781,"byte_end":147797,"line_start":1465,"line_end":1465,"column_start":12,"column_end":28},"name":"set_byte_headers","qualname":"<Reader<R>>::set_byte_headers","value":"fn (&mut self, headers: ByteRecord) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the headers of this CSV parser manually as raw bytes.","sig":null,"attributes":[{"value":"/ Set the headers of this CSV parser manually as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146879,"byte_end":146940,"line_start":1438,"line_end":1438,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146945,"byte_end":146948,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ This overrides any other setting (including `set_headers`). Any","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":146953,"byte_end":147020,"line_start":1440,"line_end":1440,"column_start":5,"column_end":72}},{"value":"/ automatic detection of headers is disabled. This may be called at any","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147025,"byte_end":147098,"line_start":1441,"line_end":1441,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147103,"byte_end":147112,"line_start":1442,"line_end":1442,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147117,"byte_end":147120,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147125,"byte_end":147138,"line_start":1444,"line_end":1444,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147143,"byte_end":147146,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147151,"byte_end":147158,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147163,"byte_end":147189,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/ use csv::{Reader, ByteRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147194,"byte_end":147228,"line_start":1448,"line_end":1448,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147233,"byte_end":147236,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147241,"byte_end":147280,"line_start":1450,"line_end":1450,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147285,"byte_end":147333,"line_start":1451,"line_end":1451,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147338,"byte_end":147359,"line_start":1452,"line_end":1452,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147364,"byte_end":147384,"line_start":1453,"line_end":1453,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147389,"byte_end":147421,"line_start":1454,"line_end":1454,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147426,"byte_end":147432,"line_start":1455,"line_end":1455,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147437,"byte_end":147496,"line_start":1456,"line_end":1456,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147501,"byte_end":147504,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(rdr.byte_headers()?, vec![\"city\", \"country\", \"pop\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147509,"byte_end":147581,"line_start":1458,"line_end":1458,"column_start":5,"column_end":77}},{"value":"/     rdr.set_byte_headers(ByteRecord::from(vec![\"a\", \"b\", \"c\"]));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147586,"byte_end":147654,"line_start":1459,"line_end":1459,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(rdr.byte_headers()?, vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147659,"byte_end":147720,"line_start":1460,"line_end":1460,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147725,"byte_end":147728,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147733,"byte_end":147747,"line_start":1462,"line_end":1462,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147752,"byte_end":147757,"line_start":1463,"line_end":1463,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":147762,"byte_end":147769,"line_start":1464,"line_end":1464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150393,"byte_end":150404,"line_start":1536,"line_end":1536,"column_start":12,"column_end":23},"name":"read_record","qualname":"<Reader<R>>::read_record","value":"fn (&mut self, record: &mut StringRecord) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Read a single row into the given record. Returns false when no more\n records could be read.","sig":null,"attributes":[{"value":"/ Read a single row into the given record. Returns false when no more","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":148987,"byte_end":149058,"line_start":1499,"line_end":1499,"column_start":5,"column_end":76}},{"value":"/ records could be read.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149063,"byte_end":149089,"line_start":1500,"line_end":1500,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149094,"byte_end":149097,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149102,"byte_end":149170,"line_start":1502,"line_end":1502,"column_start":5,"column_end":73}},{"value":"/ default), then this will never read the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149175,"byte_end":149232,"line_start":1503,"line_end":1503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149237,"byte_end":149240,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you want to read records as fast as","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149245,"byte_end":149311,"line_start":1505,"line_end":1505,"column_start":5,"column_end":71}},{"value":"/ as possible. It's less ergonomic than an iterator, but it permits the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149316,"byte_end":149389,"line_start":1506,"line_end":1506,"column_start":5,"column_end":78}},{"value":"/ caller to reuse the `StringRecord` allocation, which usually results","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149394,"byte_end":149466,"line_start":1507,"line_end":1507,"column_start":5,"column_end":77}},{"value":"/ in higher throughput.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149471,"byte_end":149496,"line_start":1508,"line_end":1508,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149501,"byte_end":149504,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ Records read via this method are guaranteed to have a position set","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149509,"byte_end":149579,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ on them, even if the reader is at EOF or if an error is returned.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149584,"byte_end":149653,"line_start":1511,"line_end":1511,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149658,"byte_end":149661,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149666,"byte_end":149679,"line_start":1513,"line_end":1513,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149684,"byte_end":149687,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149692,"byte_end":149699,"line_start":1515,"line_end":1515,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149704,"byte_end":149730,"line_start":1516,"line_end":1516,"column_start":5,"column_end":31}},{"value":"/ use csv::{Reader, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149735,"byte_end":149771,"line_start":1517,"line_end":1517,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149776,"byte_end":149779,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149784,"byte_end":149823,"line_start":1519,"line_end":1519,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149828,"byte_end":149876,"line_start":1520,"line_end":1520,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149881,"byte_end":149902,"line_start":1521,"line_end":1521,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149907,"byte_end":149927,"line_start":1522,"line_end":1522,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149932,"byte_end":149964,"line_start":1523,"line_end":1523,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149969,"byte_end":149975,"line_start":1524,"line_end":1524,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":149980,"byte_end":150039,"line_start":1525,"line_end":1525,"column_start":5,"column_end":64}},{"value":"/     let mut record = StringRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150044,"byte_end":150089,"line_start":1526,"line_end":1526,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150094,"byte_end":150097,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/     if rdr.read_record(&mut record)? {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150102,"byte_end":150144,"line_start":1528,"line_end":1528,"column_start":5,"column_end":47}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150149,"byte_end":150224,"line_start":1529,"line_end":1529,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150229,"byte_end":150247,"line_start":1530,"line_end":1530,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150252,"byte_end":150268,"line_start":1531,"line_end":1531,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150273,"byte_end":150345,"line_start":1532,"line_end":1532,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150350,"byte_end":150359,"line_start":1533,"line_end":1533,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150364,"byte_end":150369,"line_start":1534,"line_end":1534,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150374,"byte_end":150381,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152194,"byte_end":152210,"line_start":1584,"line_end":1584,"column_start":12,"column_end":28},"name":"read_byte_record","qualname":"<Reader<R>>::read_byte_record","value":"fn (&mut self, record: &mut ByteRecord) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Read a single row into the given byte record. Returns false when no\n more records could be read.","sig":null,"attributes":[{"value":"/ Read a single row into the given byte record. Returns false when no","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150784,"byte_end":150855,"line_start":1547,"line_end":1547,"column_start":5,"column_end":76}},{"value":"/ more records could be read.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150860,"byte_end":150891,"line_start":1548,"line_end":1548,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150896,"byte_end":150899,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` was enabled via a `ReaderBuilder` (which is the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150904,"byte_end":150972,"line_start":1550,"line_end":1550,"column_start":5,"column_end":73}},{"value":"/ default), then this will never read the first record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":150977,"byte_end":151034,"line_start":1551,"line_end":1551,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151039,"byte_end":151042,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you want to read records as fast as","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151047,"byte_end":151113,"line_start":1553,"line_end":1553,"column_start":5,"column_end":71}},{"value":"/ as possible. It's less ergonomic than an iterator, but it permits the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151118,"byte_end":151191,"line_start":1554,"line_end":1554,"column_start":5,"column_end":78}},{"value":"/ caller to reuse the `ByteRecord` allocation, which usually results","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151196,"byte_end":151266,"line_start":1555,"line_end":1555,"column_start":5,"column_end":75}},{"value":"/ in higher throughput.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151271,"byte_end":151296,"line_start":1556,"line_end":1556,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151301,"byte_end":151304,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ Records read via this method are guaranteed to have a position set","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151309,"byte_end":151379,"line_start":1558,"line_end":1558,"column_start":5,"column_end":75}},{"value":"/ on them, even if the reader is at EOF or if an error is returned.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151384,"byte_end":151453,"line_start":1559,"line_end":1559,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151458,"byte_end":151461,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151466,"byte_end":151479,"line_start":1561,"line_end":1561,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151484,"byte_end":151487,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151492,"byte_end":151499,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151504,"byte_end":151530,"line_start":1564,"line_end":1564,"column_start":5,"column_end":31}},{"value":"/ use csv::{ByteRecord, Reader};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151535,"byte_end":151569,"line_start":1565,"line_end":1565,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151574,"byte_end":151577,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151582,"byte_end":151621,"line_start":1567,"line_end":1567,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151626,"byte_end":151674,"line_start":1568,"line_end":1568,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151679,"byte_end":151700,"line_start":1569,"line_end":1569,"column_start":5,"column_end":26}},{"value":"/ city,country,pop","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151705,"byte_end":151725,"line_start":1570,"line_end":1570,"column_start":5,"column_end":25}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151730,"byte_end":151762,"line_start":1571,"line_end":1571,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151767,"byte_end":151773,"line_start":1572,"line_end":1572,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151778,"byte_end":151837,"line_start":1573,"line_end":1573,"column_start":5,"column_end":64}},{"value":"/     let mut record = ByteRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151842,"byte_end":151885,"line_start":1574,"line_end":1574,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151890,"byte_end":151893,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8}},{"value":"/     if rdr.read_byte_record(&mut record)? {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151898,"byte_end":151945,"line_start":1576,"line_end":1576,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(record, vec![\"Boston\", \"United States\", \"4628910\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":151950,"byte_end":152025,"line_start":1577,"line_end":1577,"column_start":5,"column_end":80}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152030,"byte_end":152048,"line_start":1578,"line_end":1578,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152053,"byte_end":152069,"line_start":1579,"line_end":1579,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152074,"byte_end":152146,"line_start":1580,"line_end":1580,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152151,"byte_end":152160,"line_start":1581,"line_end":1581,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152165,"byte_end":152170,"line_start":1582,"line_end":1582,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":152175,"byte_end":152182,"line_start":1583,"line_end":1583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157025,"byte_end":157033,"line_start":1721,"line_end":1721,"column_start":12,"column_end":20},"name":"position","qualname":"<Reader<R>>::position","value":"fn (&self) -> &Position","parent":null,"children":[],"decl_id":null,"docs":" Return the current position of this CSV reader.","sig":null,"attributes":[{"value":"/ Return the current position of this CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155622,"byte_end":155673,"line_start":1681,"line_end":1681,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155678,"byte_end":155681,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ The byte offset in the position returned can be used to `seek` this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155686,"byte_end":155757,"line_start":1683,"line_end":1683,"column_start":5,"column_end":76}},{"value":"/ reader. In particular, seeking to a position returned here on the same","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155762,"byte_end":155836,"line_start":1684,"line_end":1684,"column_start":5,"column_end":79}},{"value":"/ data will result in parsing the same subsequent record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155841,"byte_end":155900,"line_start":1685,"line_end":1685,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155905,"byte_end":155908,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ # Example: reading the position","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155913,"byte_end":155948,"line_start":1687,"line_end":1687,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155953,"byte_end":155956,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155961,"byte_end":155968,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":155973,"byte_end":155999,"line_start":1690,"line_end":1690,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156004,"byte_end":156020,"line_start":1691,"line_end":1691,"column_start":5,"column_end":21}},{"value":"/ use csv::{Reader, Position};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156025,"byte_end":156057,"line_start":1692,"line_end":1692,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156062,"byte_end":156065,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156070,"byte_end":156109,"line_start":1694,"line_end":1694,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156114,"byte_end":156162,"line_start":1695,"line_end":1695,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156167,"byte_end":156188,"line_start":1696,"line_end":1696,"column_start":5,"column_end":26}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156193,"byte_end":156218,"line_start":1697,"line_end":1697,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156223,"byte_end":156255,"line_start":1698,"line_end":1698,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156260,"byte_end":156291,"line_start":1699,"line_end":1699,"column_start":5,"column_end":36}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156296,"byte_end":156302,"line_start":1700,"line_end":1700,"column_start":5,"column_end":11}},{"value":"/     let rdr = Reader::from_reader(io::Cursor::new(data));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156307,"byte_end":156368,"line_start":1701,"line_end":1701,"column_start":5,"column_end":66}},{"value":"/     let mut iter = rdr.into_records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156373,"byte_end":156415,"line_start":1702,"line_end":1702,"column_start":5,"column_end":47}},{"value":"/     let mut pos = Position::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156420,"byte_end":156458,"line_start":1703,"line_end":1703,"column_start":5,"column_end":43}},{"value":"/     loop {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156463,"byte_end":156477,"line_start":1704,"line_end":1704,"column_start":5,"column_end":19}},{"value":"/         // Read the position immediately before each record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156482,"byte_end":156546,"line_start":1705,"line_end":1705,"column_start":5,"column_end":69}},{"value":"/         let next_pos = iter.reader().position().clone();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156551,"byte_end":156611,"line_start":1706,"line_end":1706,"column_start":5,"column_end":65}},{"value":"/         if iter.next().is_none() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156616,"byte_end":156654,"line_start":1707,"line_end":1707,"column_start":5,"column_end":43}},{"value":"/             break;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156659,"byte_end":156681,"line_start":1708,"line_end":1708,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156686,"byte_end":156699,"line_start":1709,"line_end":1709,"column_start":5,"column_end":18}},{"value":"/         pos = next_pos;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156704,"byte_end":156731,"line_start":1710,"line_end":1710,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156736,"byte_end":156745,"line_start":1711,"line_end":1711,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156750,"byte_end":156753,"line_start":1712,"line_end":1712,"column_start":5,"column_end":8}},{"value":"/     // `pos` should now be the position immediately before the last","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156758,"byte_end":156829,"line_start":1713,"line_end":1713,"column_start":5,"column_end":76}},{"value":"/     // record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156834,"byte_end":156852,"line_start":1714,"line_end":1714,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(pos.byte(), 51);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156857,"byte_end":156892,"line_start":1715,"line_end":1715,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(pos.line(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156897,"byte_end":156931,"line_start":1716,"line_end":1716,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(pos.record(), 2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156936,"byte_end":156972,"line_start":1717,"line_end":1717,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156977,"byte_end":156991,"line_start":1718,"line_end":1718,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":156996,"byte_end":157001,"line_start":1719,"line_end":1719,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157006,"byte_end":157013,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157965,"byte_end":157972,"line_start":1753,"line_end":1753,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Reader<R>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this reader has been exhausted.","sig":null,"attributes":[{"value":"/ Returns true if and only if this reader has been exhausted.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157095,"byte_end":157158,"line_start":1725,"line_end":1725,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157163,"byte_end":157166,"line_start":1726,"line_end":1726,"column_start":5,"column_end":8}},{"value":"/ When this returns true, no more records can be read from this reader","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157171,"byte_end":157243,"line_start":1727,"line_end":1727,"column_start":5,"column_end":77}},{"value":"/ (unless it has been seeked to another position).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157248,"byte_end":157300,"line_start":1728,"line_end":1728,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157305,"byte_end":157308,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157313,"byte_end":157326,"line_start":1730,"line_end":1730,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157331,"byte_end":157334,"line_start":1731,"line_end":1731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157339,"byte_end":157346,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157351,"byte_end":157377,"line_start":1733,"line_end":1733,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157382,"byte_end":157398,"line_start":1734,"line_end":1734,"column_start":5,"column_end":21}},{"value":"/ use csv::{Reader, Position};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157403,"byte_end":157435,"line_start":1735,"line_end":1735,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157440,"byte_end":157443,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157448,"byte_end":157487,"line_start":1737,"line_end":1737,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157492,"byte_end":157540,"line_start":1738,"line_end":1738,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157545,"byte_end":157566,"line_start":1739,"line_end":1739,"column_start":5,"column_end":26}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157571,"byte_end":157596,"line_start":1740,"line_end":1740,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157601,"byte_end":157633,"line_start":1741,"line_end":1741,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157638,"byte_end":157669,"line_start":1742,"line_end":1742,"column_start":5,"column_end":36}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157674,"byte_end":157680,"line_start":1743,"line_end":1743,"column_start":5,"column_end":11}},{"value":"/     let mut rdr = Reader::from_reader(io::Cursor::new(data));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157685,"byte_end":157750,"line_start":1744,"line_end":1744,"column_start":5,"column_end":70}},{"value":"/     assert!(!rdr.is_done());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157755,"byte_end":157787,"line_start":1745,"line_end":1745,"column_start":5,"column_end":37}},{"value":"/     for result in rdr.records() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157792,"byte_end":157829,"line_start":1746,"line_end":1746,"column_start":5,"column_end":42}},{"value":"/         let _ = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157834,"byte_end":157862,"line_start":1747,"line_end":1747,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157867,"byte_end":157876,"line_start":1748,"line_end":1748,"column_start":5,"column_end":14}},{"value":"/     assert!(rdr.is_done());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157881,"byte_end":157912,"line_start":1749,"line_end":1749,"column_start":5,"column_end":36}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157917,"byte_end":157931,"line_start":1750,"line_end":1750,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157936,"byte_end":157941,"line_start":1751,"line_end":1751,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":157946,"byte_end":157953,"line_start":1752,"line_end":1752,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158183,"byte_end":158194,"line_start":1759,"line_end":1759,"column_start":12,"column_end":23},"name":"has_headers","qualname":"<Reader<R>>::has_headers","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this reader has been configured to\n interpret the first record as a header record.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this reader has been configured to","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158050,"byte_end":158116,"line_start":1757,"line_end":1757,"column_start":5,"column_end":71}},{"value":"/ interpret the first record as a header record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158121,"byte_end":158171,"line_start":1758,"line_end":1758,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158315,"byte_end":158322,"line_start":1764,"line_end":1764,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158254,"byte_end":158303,"line_start":1763,"line_end":1763,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158445,"byte_end":158452,"line_start":1769,"line_end":1769,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158376,"byte_end":158433,"line_start":1768,"line_end":1768,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158685,"byte_end":158695,"line_start":1777,"line_end":1777,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this CSV reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this CSV reader, returning the underlying reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158514,"byte_end":158575,"line_start":1773,"line_end":1773,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158580,"byte_end":158583,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data inside this reader's internal buffer is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158588,"byte_end":158659,"line_start":1775,"line_end":1775,"column_start":5,"column_end":76}},{"value":"/ lost.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158664,"byte_end":158673,"line_start":1776,"line_end":1776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161339,"byte_end":161343,"line_start":1845,"line_end":1845,"column_start":12,"column_end":16},"name":"seek","qualname":"<Reader<R>>::seek","value":"fn (&mut self, pos: Position) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Seeks the underlying reader to the position given.","sig":null,"attributes":[{"value":"/ Seeks the underlying reader to the position given.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158793,"byte_end":158847,"line_start":1783,"line_end":1783,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158852,"byte_end":158855,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ This comes with a few caveats:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158860,"byte_end":158894,"line_start":1785,"line_end":1785,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158899,"byte_end":158902,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ * Any internal buffer associated with this reader is cleared.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158907,"byte_end":158972,"line_start":1787,"line_end":1787,"column_start":5,"column_end":70}},{"value":"/ * If the given position does not correspond to a position immediately","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158977,"byte_end":159050,"line_start":1788,"line_end":1788,"column_start":5,"column_end":78}},{"value":"/   before the start of a record, then the behavior of this reader is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159055,"byte_end":159126,"line_start":1789,"line_end":1789,"column_start":5,"column_end":76}},{"value":"/   unspecified.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159131,"byte_end":159149,"line_start":1790,"line_end":1790,"column_start":5,"column_end":23}},{"value":"/ * Any special logic that skips the first record in the CSV reader","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159154,"byte_end":159223,"line_start":1791,"line_end":1791,"column_start":5,"column_end":74}},{"value":"/   when reading or iterating over records is disabled.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159228,"byte_end":159285,"line_start":1792,"line_end":1792,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159290,"byte_end":159293,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ If the given position has a byte offset equivalent to the current","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159298,"byte_end":159367,"line_start":1794,"line_end":1794,"column_start":5,"column_end":74}},{"value":"/ position, then no seeking is performed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159372,"byte_end":159415,"line_start":1795,"line_end":1795,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159420,"byte_end":159423,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ If the header row has not already been read, then this will attempt","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159428,"byte_end":159499,"line_start":1797,"line_end":1797,"column_start":5,"column_end":76}},{"value":"/ to read the header row before seeking. Therefore, it is possible that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159504,"byte_end":159577,"line_start":1798,"line_end":1798,"column_start":5,"column_end":78}},{"value":"/ this returns an error associated with reading CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159582,"byte_end":159641,"line_start":1799,"line_end":1799,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159646,"byte_end":159649,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ Note that seeking is performed based only on the byte offset in the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159654,"byte_end":159725,"line_start":1801,"line_end":1801,"column_start":5,"column_end":76}},{"value":"/ given position. Namely, the record or line numbers in the position may","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159730,"byte_end":159804,"line_start":1802,"line_end":1802,"column_start":5,"column_end":79}},{"value":"/ be incorrect, but this will cause any future position generated by","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159809,"byte_end":159879,"line_start":1803,"line_end":1803,"column_start":5,"column_end":75}},{"value":"/ this CSV reader to be similarly incorrect.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159884,"byte_end":159930,"line_start":1804,"line_end":1804,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159935,"byte_end":159938,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ # Example: seek to parse a record twice","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159943,"byte_end":159986,"line_start":1806,"line_end":1806,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159991,"byte_end":159994,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":159999,"byte_end":160006,"line_start":1808,"line_end":1808,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160011,"byte_end":160037,"line_start":1809,"line_end":1809,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160042,"byte_end":160058,"line_start":1810,"line_end":1810,"column_start":5,"column_end":21}},{"value":"/ use csv::{Reader, Position};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160063,"byte_end":160095,"line_start":1811,"line_end":1811,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160100,"byte_end":160103,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160108,"byte_end":160147,"line_start":1813,"line_end":1813,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160152,"byte_end":160200,"line_start":1814,"line_end":1814,"column_start":5,"column_end":53}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160205,"byte_end":160226,"line_start":1815,"line_end":1815,"column_start":5,"column_end":26}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160231,"byte_end":160256,"line_start":1816,"line_end":1816,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160261,"byte_end":160293,"line_start":1817,"line_end":1817,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160298,"byte_end":160329,"line_start":1818,"line_end":1818,"column_start":5,"column_end":36}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160334,"byte_end":160340,"line_start":1819,"line_end":1819,"column_start":5,"column_end":11}},{"value":"/     let rdr = Reader::from_reader(io::Cursor::new(data));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160345,"byte_end":160406,"line_start":1820,"line_end":1820,"column_start":5,"column_end":66}},{"value":"/     let mut iter = rdr.into_records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160411,"byte_end":160453,"line_start":1821,"line_end":1821,"column_start":5,"column_end":47}},{"value":"/     let mut pos = Position::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160458,"byte_end":160496,"line_start":1822,"line_end":1822,"column_start":5,"column_end":43}},{"value":"/     loop {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160501,"byte_end":160515,"line_start":1823,"line_end":1823,"column_start":5,"column_end":19}},{"value":"/         // Read the position immediately before each record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160520,"byte_end":160584,"line_start":1824,"line_end":1824,"column_start":5,"column_end":69}},{"value":"/         let next_pos = iter.reader().position().clone();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160589,"byte_end":160649,"line_start":1825,"line_end":1825,"column_start":5,"column_end":65}},{"value":"/         if iter.next().is_none() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160654,"byte_end":160692,"line_start":1826,"line_end":1826,"column_start":5,"column_end":43}},{"value":"/             break;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160697,"byte_end":160719,"line_start":1827,"line_end":1827,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160724,"byte_end":160737,"line_start":1828,"line_end":1828,"column_start":5,"column_end":18}},{"value":"/         pos = next_pos;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160742,"byte_end":160769,"line_start":1829,"line_end":1829,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160774,"byte_end":160783,"line_start":1830,"line_end":1830,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160788,"byte_end":160791,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/     // Now seek the reader back to `pos`. This will let us read the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160796,"byte_end":160867,"line_start":1832,"line_end":1832,"column_start":5,"column_end":76}},{"value":"/     // last record again.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160872,"byte_end":160901,"line_start":1833,"line_end":1833,"column_start":5,"column_end":34}},{"value":"/     iter.reader_mut().seek(pos)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160906,"byte_end":160943,"line_start":1834,"line_end":1834,"column_start":5,"column_end":42}},{"value":"/     let mut iter = iter.into_reader().into_records();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":160948,"byte_end":161005,"line_start":1835,"line_end":1835,"column_start":5,"column_end":62}},{"value":"/     if let Some(result) = iter.next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161010,"byte_end":161053,"line_start":1836,"line_end":1836,"column_start":5,"column_end":48}},{"value":"/         let record = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161058,"byte_end":161091,"line_start":1837,"line_end":1837,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(record, vec![\"Concord\", \"United States\", \"42695\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161096,"byte_end":161170,"line_start":1838,"line_end":1838,"column_start":5,"column_end":79}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161175,"byte_end":161193,"line_start":1839,"line_end":1839,"column_start":5,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161198,"byte_end":161214,"line_start":1840,"line_end":1840,"column_start":5,"column_end":21}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161219,"byte_end":161291,"line_start":1841,"line_end":1841,"column_start":5,"column_end":77}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161296,"byte_end":161305,"line_start":1842,"line_end":1842,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161310,"byte_end":161315,"line_start":1843,"line_end":1843,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161320,"byte_end":161327,"line_start":1844,"line_end":1844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162499,"byte_end":162507,"line_start":1872,"line_end":1872,"column_start":12,"column_end":20},"name":"seek_raw","qualname":"<Reader<R>>::seek_raw","value":"fn (&mut self, seek_from: io::SeekFrom, pos: Position) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This is like `seek`, but provides direct control over how the seeking\n operation is performed via `io::SeekFrom`.","sig":null,"attributes":[{"value":"/ This is like `seek`, but provides direct control over how the seeking","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161773,"byte_end":161846,"line_start":1859,"line_end":1859,"column_start":5,"column_end":78}},{"value":"/ operation is performed via `io::SeekFrom`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161851,"byte_end":161897,"line_start":1860,"line_end":1860,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161902,"byte_end":161905,"line_start":1861,"line_end":1861,"column_start":5,"column_end":8}},{"value":"/ The `pos` position given *should* correspond the position indicated","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161910,"byte_end":161981,"line_start":1862,"line_end":1862,"column_start":5,"column_end":76}},{"value":"/ by `seek_from`, but there is no requirement. If the `pos` position","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":161986,"byte_end":162056,"line_start":1863,"line_end":1863,"column_start":5,"column_end":75}},{"value":"/ given is incorrect, then the position information returned by this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162061,"byte_end":162131,"line_start":1864,"line_end":1864,"column_start":5,"column_end":75}},{"value":"/ reader will be similarly incorrect.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162136,"byte_end":162175,"line_start":1865,"line_end":1865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162180,"byte_end":162183,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ If the header row has not already been read, then this will attempt","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162188,"byte_end":162259,"line_start":1867,"line_end":1867,"column_start":5,"column_end":76}},{"value":"/ to read the header row before seeking. Therefore, it is possible that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162264,"byte_end":162337,"line_start":1868,"line_end":1868,"column_start":5,"column_end":78}},{"value":"/ this returns an error associated with reading CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162342,"byte_end":162401,"line_start":1869,"line_end":1869,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162406,"byte_end":162409,"line_start":1870,"line_end":1870,"column_start":5,"column_end":8}},{"value":"/ Unlike `seek`, this will always cause an actual seek to be performed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162414,"byte_end":162487,"line_start":1871,"line_end":1871,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":163907,"byte_end":163933,"line_start":1915,"line_end":1915,"column_start":12,"column_end":38},"name":"DeserializeRecordsIntoIter","qualname":"::reader::DeserializeRecordsIntoIter","value":"DeserializeRecordsIntoIter {  }","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"decl_id":null,"docs":" An owned iterator over deserialized records.","sig":null,"attributes":[{"value":"/ An owned iterator over deserialized records.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":163692,"byte_end":163740,"line_start":1911,"line_end":1911,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":163741,"byte_end":163744,"line_start":1912,"line_end":1912,"column_start":1,"column_end":4}},{"value":"/ The type parameter `R` refers to the underlying `io::Read` type, and `D`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":163745,"byte_end":163821,"line_start":1913,"line_end":1913,"column_start":1,"column_end":77}},{"value":"/ refers to the type that this iterator will deserialize a record into.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":163822,"byte_end":163895,"line_start":1914,"line_end":1914,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164581,"byte_end":164587,"line_start":1938,"line_end":1938,"column_start":12,"column_end":18},"name":"reader","qualname":"<DeserializeRecordsIntoIter<R, D>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164517,"byte_end":164569,"line_start":1937,"line_end":1937,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164712,"byte_end":164722,"line_start":1943,"line_end":1943,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<DeserializeRecordsIntoIter<R, D>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164640,"byte_end":164700,"line_start":1942,"line_end":1942,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164859,"byte_end":164870,"line_start":1948,"line_end":1948,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<DeserializeRecordsIntoIter<R, D>>::into_reader","value":"fn (self) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Drop this iterator and return the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Drop this iterator and return the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164787,"byte_end":164847,"line_start":1947,"line_end":1947,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":550},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165608,"byte_end":165630,"line_start":1973,"line_end":1973,"column_start":12,"column_end":34},"name":"DeserializeRecordsIter","qualname":"::reader::DeserializeRecordsIter","value":"DeserializeRecordsIter {  }","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":" A borrowed iterator over deserialized records.","sig":null,"attributes":[{"value":"/ A borrowed iterator over deserialized records.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165300,"byte_end":165350,"line_start":1967,"line_end":1967,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165351,"byte_end":165354,"line_start":1968,"line_end":1968,"column_start":1,"column_end":4}},{"value":"/ The lifetime parameter `'r` refers to the lifetime of the underlying","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165355,"byte_end":165427,"line_start":1969,"line_end":1969,"column_start":1,"column_end":73}},{"value":"/ CSV `Reader`. The type parameter `R` refers to the underlying `io::Read`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165428,"byte_end":165504,"line_start":1970,"line_end":1970,"column_start":1,"column_end":77}},{"value":"/ type, and `D` refers to the type that this iterator will deserialize a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165505,"byte_end":165579,"line_start":1971,"line_end":1971,"column_start":1,"column_end":75}},{"value":"/ record into.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165580,"byte_end":165596,"line_start":1972,"line_end":1972,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166298,"byte_end":166304,"line_start":1996,"line_end":1996,"column_start":12,"column_end":18},"name":"reader","qualname":"<DeserializeRecordsIter>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166234,"byte_end":166286,"line_start":1995,"line_end":1995,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166429,"byte_end":166439,"line_start":2001,"line_end":2001,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<DeserializeRecordsIter>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166357,"byte_end":166417,"line_start":2000,"line_end":2000,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166946,"byte_end":166967,"line_start":2021,"line_end":2021,"column_start":12,"column_end":33},"name":"StringRecordsIntoIter","qualname":"::reader::StringRecordsIntoIter","value":"StringRecordsIntoIter {  }","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" An owned iterator over records as strings.\n","sig":null,"attributes":[{"value":"/ An owned iterator over records as strings.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166888,"byte_end":166934,"line_start":2020,"line_end":2020,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167265,"byte_end":167271,"line_start":2032,"line_end":2032,"column_start":12,"column_end":18},"name":"reader","qualname":"<StringRecordsIntoIter<R>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167201,"byte_end":167253,"line_start":2031,"line_end":2031,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167396,"byte_end":167406,"line_start":2037,"line_end":2037,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<StringRecordsIntoIter<R>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167324,"byte_end":167384,"line_start":2036,"line_end":2036,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167543,"byte_end":167554,"line_start":2042,"line_end":2042,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<StringRecordsIntoIter<R>>::into_reader","value":"fn (self) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Drop this iterator and return the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Drop this iterator and return the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167471,"byte_end":167531,"line_start":2041,"line_end":2041,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168105,"byte_end":168122,"line_start":2063,"line_end":2063,"column_start":12,"column_end":29},"name":"StringRecordsIter","qualname":"::reader::StringRecordsIter","value":"StringRecordsIter {  }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" A borrowed iterator over records as strings.","sig":null,"attributes":[{"value":"/ A borrowed iterator over records as strings.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167950,"byte_end":167998,"line_start":2059,"line_end":2059,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167999,"byte_end":168002,"line_start":2060,"line_end":2060,"column_start":1,"column_end":4}},{"value":"/ The lifetime parameter `'r` refers to the lifetime of the underlying","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168003,"byte_end":168075,"line_start":2061,"line_end":2061,"column_start":1,"column_end":73}},{"value":"/ CSV `Reader`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168076,"byte_end":168093,"line_start":2062,"line_end":2062,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168444,"byte_end":168450,"line_start":2074,"line_end":2074,"column_start":12,"column_end":18},"name":"reader","qualname":"<StringRecordsIter>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168380,"byte_end":168432,"line_start":2073,"line_end":2073,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168575,"byte_end":168585,"line_start":2079,"line_end":2079,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<StringRecordsIter>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168503,"byte_end":168563,"line_start":2078,"line_end":2078,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":601},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169060,"byte_end":169079,"line_start":2097,"line_end":2097,"column_start":12,"column_end":31},"name":"ByteRecordsIntoIter","qualname":"::reader::ByteRecordsIntoIter","value":"ByteRecordsIntoIter {  }","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"decl_id":null,"docs":" An owned iterator over records as raw bytes.\n","sig":null,"attributes":[{"value":"/ An owned iterator over records as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169000,"byte_end":169048,"line_start":2096,"line_end":2096,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169367,"byte_end":169373,"line_start":2108,"line_end":2108,"column_start":12,"column_end":18},"name":"reader","qualname":"<ByteRecordsIntoIter<R>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169303,"byte_end":169355,"line_start":2107,"line_end":2107,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169498,"byte_end":169508,"line_start":2113,"line_end":2113,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<ByteRecordsIntoIter<R>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169426,"byte_end":169486,"line_start":2112,"line_end":2112,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169645,"byte_end":169656,"line_start":2118,"line_end":2118,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<ByteRecordsIntoIter<R>>::into_reader","value":"fn (self) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Drop this iterator and return the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Drop this iterator and return the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169573,"byte_end":169633,"line_start":2117,"line_end":2117,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170208,"byte_end":170223,"line_start":2139,"line_end":2139,"column_start":12,"column_end":27},"name":"ByteRecordsIter","qualname":"::reader::ByteRecordsIter","value":"ByteRecordsIter {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" A borrowed iterator over records as raw bytes.","sig":null,"attributes":[{"value":"/ A borrowed iterator over records as raw bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170051,"byte_end":170101,"line_start":2135,"line_end":2135,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170102,"byte_end":170105,"line_start":2136,"line_end":2136,"column_start":1,"column_end":4}},{"value":"/ The lifetime parameter `'r` refers to the lifetime of the underlying","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170106,"byte_end":170178,"line_start":2137,"line_end":2137,"column_start":1,"column_end":73}},{"value":"/ CSV `Reader`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170179,"byte_end":170196,"line_start":2138,"line_end":2138,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170535,"byte_end":170541,"line_start":2150,"line_end":2150,"column_start":12,"column_end":18},"name":"reader","qualname":"<ByteRecordsIter>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170471,"byte_end":170523,"line_start":2149,"line_end":2149,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170666,"byte_end":170676,"line_start":2155,"line_end":2155,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<ByteRecordsIter>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the underlying CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170594,"byte_end":170654,"line_start":2154,"line_end":2154,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225415,"byte_end":225427,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"StringRecord","qualname":"::string_record::StringRecord","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single CSV record stored as valid UTF-8 bytes.","sig":null,"attributes":[{"value":"/ A single CSV record stored as valid UTF-8 bytes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224174,"byte_end":224226,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224227,"byte_end":224230,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A string record permits reading or writing CSV rows that are valid UTF-8.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224231,"byte_end":224308,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ If string records are used to read CSV data that is not valid UTF-8, then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224309,"byte_end":224386,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ the CSV reader will return an invalid UTF-8 error. If you do need to read","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224387,"byte_end":224464,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ possibly invalid UTF-8 data, then you should prefer using a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224465,"byte_end":224528,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/ [`ByteRecord`](struct.ByteRecord.html),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224529,"byte_end":224572,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ since it makes no assumptions about UTF-8.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224573,"byte_end":224619,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224620,"byte_end":224623,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you are using the Serde (de)serialization APIs, then you probably never","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224624,"byte_end":224702,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ need to interact with a `ByteRecord` or a `StringRecord`. However, there","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224703,"byte_end":224779,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ are some circumstances in which you might need to use a raw record type","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224780,"byte_end":224855,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ while still using Serde. For example, if you need to deserialize possibly","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224856,"byte_end":224933,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ invalid UTF-8 fields, then you'll need to first read your record into a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":224934,"byte_end":225009,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ `ByteRecord`, and then use `ByteRecord::deserialize` to run Serde. Another","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225010,"byte_end":225088,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ reason for using the raw record deserialization APIs is if you're using","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225089,"byte_end":225164,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ Serde to read into borrowed data such as a `&'a str` or a `&'a [u8]`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225165,"byte_end":225238,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225239,"byte_end":225242,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Two `StringRecord`s are compared on the basis of their field data. Any","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225243,"byte_end":225317,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ position information associated with the records is ignored.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225318,"byte_end":225382,"line_start":34,"line_end":34,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227124,"byte_end":227127,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<StringRecord>::new","value":"fn () -> StringRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `StringRecord`.","sig":null,"attributes":[{"value":"/ Create a new empty `StringRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226479,"byte_end":226517,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226522,"byte_end":226525,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that you may find the `StringRecord::from` constructor more","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226530,"byte_end":226598,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ convenient, which is provided by an impl on the `From` trait.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226603,"byte_end":226668,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226673,"byte_end":226676,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example: create an empty record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226681,"byte_end":226718,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226723,"byte_end":226726,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226731,"byte_end":226738,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226743,"byte_end":226769,"line_start":91,"line_end":91,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226774,"byte_end":226777,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226782,"byte_end":226819,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(record.len(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226824,"byte_end":226856,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226861,"byte_end":226868,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226873,"byte_end":226876,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Example: initialize a record from a `Vec`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226881,"byte_end":226928,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226933,"byte_end":226936,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226941,"byte_end":226948,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226953,"byte_end":226979,"line_start":100,"line_end":100,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226984,"byte_end":226987,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226992,"byte_end":227049,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227054,"byte_end":227086,"line_start":103,"line_end":103,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227091,"byte_end":227098,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227103,"byte_end":227112,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227471,"byte_end":227484,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StringRecord>::with_capacity","value":"fn (buffer: usize, fields: usize) -> StringRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `StringRecord` with the given capacity.","sig":null,"attributes":[{"value":"/ Create a new empty `StringRecord` with the given capacity.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227199,"byte_end":227261,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227266,"byte_end":227269,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ `buffer` refers to the capacity of the buffer used to store the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227274,"byte_end":227341,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ actual row contents. `fields` refers to the number of fields one","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227346,"byte_end":227414,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ might expect to store.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227419,"byte_end":227445,"line_start":114,"line_end":114,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227450,"byte_end":227459,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228800,"byte_end":228816,"line_start":154,"line_end":154,"column_start":12,"column_end":28},"name":"from_byte_record","qualname":"<StringRecord>::from_byte_record","value":"fn (record: ByteRecord) -> result::Result<StringRecord, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StringRecord` from a `ByteRecord`.","sig":null,"attributes":[{"value":"/ Create a new `StringRecord` from a `ByteRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227608,"byte_end":227660,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227665,"byte_end":227668,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note that this does UTF-8 validation. If the given `ByteRecord` does","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227673,"byte_end":227745,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ not contain valid UTF-8, then this returns an error. The error includes","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227750,"byte_end":227825,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ the UTF-8 error and the original `ByteRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227830,"byte_end":227880,"line_start":124,"line_end":124,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227885,"byte_end":227888,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Example: valid UTF-8","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227893,"byte_end":227919,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227924,"byte_end":227927,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227932,"byte_end":227939,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227944,"byte_end":227970,"line_start":129,"line_end":129,"column_start":5,"column_end":31}},{"value":"/ use csv::{ByteRecord, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":227975,"byte_end":228015,"line_start":130,"line_end":130,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228020,"byte_end":228023,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228028,"byte_end":228067,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228072,"byte_end":228120,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/     let byte_record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228125,"byte_end":228189,"line_start":134,"line_end":134,"column_start":5,"column_end":69}},{"value":"/     let str_record = StringRecord::from_byte_record(byte_record)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228194,"byte_end":228264,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/     assert_eq!(str_record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228269,"byte_end":228309,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228314,"byte_end":228328,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228333,"byte_end":228338,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228343,"byte_end":228350,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228355,"byte_end":228358,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Example: invalid UTF-8","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228363,"byte_end":228391,"line_start":141,"line_end":141,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228396,"byte_end":228399,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228404,"byte_end":228411,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use csv::{ByteRecord, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228416,"byte_end":228456,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228461,"byte_end":228464,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let byte_record = ByteRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228469,"byte_end":228513,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/     &b\"quux\"[..], &b\"foo\\xFFbar\"[..], &b\"c\"[..],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228518,"byte_end":228570,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/ ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228575,"byte_end":228582,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ let err = StringRecord::from_byte_record(byte_record).unwrap_err();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228587,"byte_end":228658,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(err.utf8_error().field(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228663,"byte_end":228707,"line_start":150,"line_end":150,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(err.utf8_error().valid_up_to(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228712,"byte_end":228762,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228767,"byte_end":228774,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":228779,"byte_end":228788,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230108,"byte_end":230130,"line_start":193,"line_end":193,"column_start":12,"column_end":34},"name":"from_byte_record_lossy","qualname":"<StringRecord>::from_byte_record_lossy","value":"fn (record: ByteRecord) -> StringRecord","parent":null,"children":[],"decl_id":null,"docs":" Lossily create a new `StringRecord` from a `ByteRecord`.","sig":null,"attributes":[{"value":"/ Lossily create a new `StringRecord` from a `ByteRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229066,"byte_end":229126,"line_start":163,"line_end":163,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229131,"byte_end":229134,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This is like `StringRecord::from_byte_record`, except all invalid UTF-8","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229139,"byte_end":229214,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ sequences are replaced with the `U+FFFD REPLACEMENT CHARACTER`, which","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229219,"byte_end":229292,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ looks like this: �.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229297,"byte_end":229322,"line_start":167,"line_end":167,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229327,"byte_end":229330,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example: valid UTF-8","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229335,"byte_end":229361,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229366,"byte_end":229369,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229374,"byte_end":229381,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use csv::{ByteRecord, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229386,"byte_end":229426,"line_start":172,"line_end":172,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229431,"byte_end":229434,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let byte_record = ByteRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229439,"byte_end":229499,"line_start":174,"line_end":174,"column_start":5,"column_end":65}},{"value":"/ let str_record = StringRecord::from_byte_record_lossy(byte_record);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229504,"byte_end":229575,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(str_record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229580,"byte_end":229616,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229621,"byte_end":229628,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229633,"byte_end":229636,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example: invalid UTF-8","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229641,"byte_end":229669,"line_start":179,"line_end":179,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229674,"byte_end":229677,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229682,"byte_end":229689,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use csv::{ByteRecord, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229694,"byte_end":229734,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229739,"byte_end":229742,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let byte_record = ByteRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229747,"byte_end":229791,"line_start":184,"line_end":184,"column_start":5,"column_end":49}},{"value":"/     &b\"quux\"[..], &b\"foo\\xFFbar\"[..], &b\"c\"[..],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229796,"byte_end":229848,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/ ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229853,"byte_end":229860,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ let str_record = StringRecord::from_byte_record_lossy(byte_record);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229865,"byte_end":229936,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(&str_record[0], \"quux\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229941,"byte_end":229980,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(&str_record[1], \"foo�bar\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":229985,"byte_end":230029,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(&str_record[2], \"c\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230034,"byte_end":230070,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230075,"byte_end":230082,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230087,"byte_end":230096,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233623,"byte_end":233634,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<StringRecord>::deserialize","value":"fn <'de, D> (&'de self, headers: Option<&'de StringRecord>) -> Result<D>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize this record.","sig":null,"attributes":[{"value":"/ Deserialize this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230645,"byte_end":230673,"line_start":207,"line_end":207,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230678,"byte_end":230681,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The `D` type parameter refers to the type that this record should be","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230686,"byte_end":230758,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/ deserialized into. The `'de` lifetime refers to the lifetime of the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230763,"byte_end":230834,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ `StringRecord`. The `'de` lifetime permits deserializing into structs","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230839,"byte_end":230912,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ that borrow field data from this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230917,"byte_end":230961,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230966,"byte_end":230969,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ An optional `headers` parameter permits deserializing into a struct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":230974,"byte_end":231045,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/ based on its field names (corresponding to header values) rather than","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231050,"byte_end":231123,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ the order in which the fields are defined.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231128,"byte_end":231174,"line_start":216,"line_end":216,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231179,"byte_end":231182,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example: without headers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231187,"byte_end":231217,"line_start":218,"line_end":218,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231222,"byte_end":231225,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This shows how to deserialize a single row into a struct based on the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231230,"byte_end":231303,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ order in which fields occur. This example also shows how to borrow","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231308,"byte_end":231378,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ fields from the `StringRecord`, which results in zero allocation","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231383,"byte_end":231451,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ deserialization.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231456,"byte_end":231476,"line_start":223,"line_end":223,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231481,"byte_end":231484,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231489,"byte_end":231496,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231501,"byte_end":231527,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231532,"byte_end":231535,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231540,"byte_end":231566,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231571,"byte_end":231598,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231603,"byte_end":231606,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231611,"byte_end":231637,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ struct Row<'a> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231642,"byte_end":231662,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/     city: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231667,"byte_end":231689,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/     country: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231694,"byte_end":231719,"line_start":234,"line_end":234,"column_start":5,"column_end":30}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231724,"byte_end":231748,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231753,"byte_end":231758,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231763,"byte_end":231766,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap() }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231771,"byte_end":231809,"line_start":238,"line_end":238,"column_start":5,"column_end":43}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231814,"byte_end":231862,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/     let record = StringRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231867,"byte_end":231912,"line_start":240,"line_end":240,"column_start":5,"column_end":50}},{"value":"/         \"Boston\", \"United States\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231917,"byte_end":231966,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231971,"byte_end":231982,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231987,"byte_end":231990,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     let row: Row = record.deserialize(None)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":231995,"byte_end":232044,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(row.city, \"Boston\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232049,"byte_end":232088,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(row.country, \"United States\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232093,"byte_end":232142,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(row.population, 4628910);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232147,"byte_end":232191,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232196,"byte_end":232210,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232215,"byte_end":232220,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232225,"byte_end":232232,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232237,"byte_end":232240,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example: with headers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232245,"byte_end":232272,"line_start":252,"line_end":252,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232277,"byte_end":232280,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This example is like the previous one, but shows how to deserialize","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232285,"byte_end":232356,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/ into a struct based on the struct's field names. For this to work,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232361,"byte_end":232431,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/ you must provide a header row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232436,"byte_end":232470,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232475,"byte_end":232478,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This example also shows that you can deserialize into owned data","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232483,"byte_end":232551,"line_start":258,"line_end":258,"column_start":5,"column_end":73}},{"value":"/ types (e.g., `String`) instead of borrowed data types (e.g., `&str`).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232556,"byte_end":232629,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232634,"byte_end":232637,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232642,"byte_end":232649,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232654,"byte_end":232680,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232685,"byte_end":232688,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232693,"byte_end":232719,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232724,"byte_end":232751,"line_start":265,"line_end":265,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232756,"byte_end":232759,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232764,"byte_end":232790,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232795,"byte_end":232811,"line_start":268,"line_end":268,"column_start":5,"column_end":21}},{"value":"/     city: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232816,"byte_end":232837,"line_start":269,"line_end":269,"column_start":5,"column_end":26}},{"value":"/     country: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232842,"byte_end":232866,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232871,"byte_end":232895,"line_start":271,"line_end":271,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232900,"byte_end":232905,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232910,"byte_end":232913,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap() }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232918,"byte_end":232956,"line_start":274,"line_end":274,"column_start":5,"column_end":43}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":232961,"byte_end":233009,"line_start":275,"line_end":275,"column_start":5,"column_end":53}},{"value":"/     // Notice that the fields are not in the same order","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233014,"byte_end":233073,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/     // as the fields in the struct!","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233078,"byte_end":233117,"line_start":277,"line_end":277,"column_start":5,"column_end":44}},{"value":"/     let header = StringRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233122,"byte_end":233167,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/         \"country\", \"city\", \"population\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233172,"byte_end":233216,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233221,"byte_end":233232,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/     let record = StringRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233237,"byte_end":233282,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/         \"United States\", \"Boston\", \"4628910\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233287,"byte_end":233336,"line_start":282,"line_end":282,"column_start":5,"column_end":54}},{"value":"/     ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233341,"byte_end":233352,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233357,"byte_end":233360,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/     let row: Row = record.deserialize(Some(&header))?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233365,"byte_end":233423,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(row.city, \"Boston\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233428,"byte_end":233467,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(row.country, \"United States\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233472,"byte_end":233521,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(row.population, 4628910);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233526,"byte_end":233570,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233575,"byte_end":233589,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233594,"byte_end":233599,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233604,"byte_end":233611,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234247,"byte_end":234251,"line_start":314,"line_end":314,"column_start":12,"column_end":16},"name":"iter","qualname":"<StringRecord>::iter","value":"fn (&self) -> StringRecordIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all fields in this record.","sig":null,"attributes":[{"value":"/ Returns an iterator over all fields in this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233806,"byte_end":233861,"line_start":299,"line_end":299,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233866,"byte_end":233869,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233874,"byte_end":233887,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233892,"byte_end":233895,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This example shows how to iterate over each field in a `StringRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233900,"byte_end":233974,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233979,"byte_end":233982,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233987,"byte_end":233994,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":233999,"byte_end":234025,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234030,"byte_end":234033,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234038,"byte_end":234095,"line_start":308,"line_end":308,"column_start":5,"column_end":62}},{"value":"/ for field in record.iter() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234100,"byte_end":234132,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/     assert!(field == \"a\" || field == \"b\" || field == \"c\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234137,"byte_end":234199,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234204,"byte_end":234209,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234214,"byte_end":234221,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234226,"byte_end":234235,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234698,"byte_end":234701,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"get","qualname":"<StringRecord>::get","value":"fn (&self, i: usize) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the field at index `i`.","sig":null,"attributes":[{"value":"/ Return the field at index `i`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234317,"byte_end":234351,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234356,"byte_end":234359,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ If no field at index `i` exists, then this returns `None`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234364,"byte_end":234426,"line_start":320,"line_end":320,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234431,"byte_end":234434,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234439,"byte_end":234452,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234457,"byte_end":234460,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234465,"byte_end":234472,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234477,"byte_end":234503,"line_start":325,"line_end":325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234508,"byte_end":234511,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234516,"byte_end":234573,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(record.get(1), Some(\"b\"));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234578,"byte_end":234619,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(record.get(3), None);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234624,"byte_end":234660,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234665,"byte_end":234672,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":234677,"byte_end":234686,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235336,"byte_end":235344,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StringRecord>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this record is empty.","sig":null,"attributes":[{"value":"/ Returns true if and only if this record is empty.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235111,"byte_end":235164,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235169,"byte_end":235172,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235177,"byte_end":235190,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235195,"byte_end":235198,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235203,"byte_end":235210,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235215,"byte_end":235241,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235246,"byte_end":235249,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(StringRecord::new().is_empty());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235254,"byte_end":235298,"line_start":349,"line_end":349,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235303,"byte_end":235310,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235315,"byte_end":235324,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235667,"byte_end":235670,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"len","qualname":"<StringRecord>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this record.","sig":null,"attributes":[{"value":"/ Returns the number of fields in this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235397,"byte_end":235445,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235450,"byte_end":235453,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235458,"byte_end":235471,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235476,"byte_end":235479,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235484,"byte_end":235491,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235496,"byte_end":235522,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235527,"byte_end":235530,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235535,"byte_end":235592,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235597,"byte_end":235629,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235634,"byte_end":235641,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235646,"byte_end":235655,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236199,"byte_end":236207,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"truncate","qualname":"<StringRecord>::truncate","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncate this record to `n` fields.","sig":null,"attributes":[{"value":"/ Truncate this record to `n` fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235721,"byte_end":235760,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235765,"byte_end":235768,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If `n` is greater than the number of fields in this record, then this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235773,"byte_end":235846,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ has no effect.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235851,"byte_end":235869,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235874,"byte_end":235877,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235882,"byte_end":235895,"line_start":376,"line_end":376,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235900,"byte_end":235903,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235908,"byte_end":235915,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235920,"byte_end":235946,"line_start":379,"line_end":379,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235951,"byte_end":235954,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mut record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":235959,"byte_end":236020,"line_start":381,"line_end":381,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236025,"byte_end":236057,"line_start":382,"line_end":382,"column_start":5,"column_end":37}},{"value":"/ record.truncate(1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236062,"byte_end":236085,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(record.len(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236090,"byte_end":236122,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(record, vec![\"a\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236127,"byte_end":236161,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236166,"byte_end":236173,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236178,"byte_end":236187,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236713,"byte_end":236718,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"clear","qualname":"<StringRecord>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear this record so that it has zero fields.","sig":null,"attributes":[{"value":"/ Clear this record so that it has zero fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236270,"byte_end":236319,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236324,"byte_end":236327,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Note that it is not necessary to clear the record to reuse it with","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236332,"byte_end":236402,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ the CSV reader.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236407,"byte_end":236426,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236431,"byte_end":236434,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236439,"byte_end":236452,"line_start":397,"line_end":397,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236457,"byte_end":236460,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236465,"byte_end":236472,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236477,"byte_end":236503,"line_start":400,"line_end":400,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236508,"byte_end":236511,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ let mut record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236516,"byte_end":236577,"line_start":402,"line_end":402,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236582,"byte_end":236614,"line_start":403,"line_end":403,"column_start":5,"column_end":37}},{"value":"/ record.clear();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236619,"byte_end":236638,"line_start":404,"line_end":404,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(record.len(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236643,"byte_end":236675,"line_start":405,"line_end":405,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236680,"byte_end":236687,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236692,"byte_end":236701,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237241,"byte_end":237245,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"trim","qualname":"<StringRecord>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Trim the fields of this record so that leading and trailing whitespace\n is removed.","sig":null,"attributes":[{"value":"/ Trim the fields of this record so that leading and trailing whitespace","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236767,"byte_end":236841,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ is removed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236846,"byte_end":236861,"line_start":413,"line_end":413,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236866,"byte_end":236869,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This method uses the Unicode definition of whitespace.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236874,"byte_end":236932,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236937,"byte_end":236940,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236945,"byte_end":236958,"line_start":417,"line_end":417,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236963,"byte_end":236966,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236971,"byte_end":236978,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":236983,"byte_end":237009,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237014,"byte_end":237017,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let mut record = StringRecord::from(vec![","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237022,"byte_end":237067,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/     \"  \", \"\\u{3000}\\tfoo \", \"bar  \", \"b a z\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237072,"byte_end":237121,"line_start":423,"line_end":423,"column_start":5,"column_end":54}},{"value":"/ ]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237126,"byte_end":237133,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ record.trim();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237138,"byte_end":237156,"line_start":425,"line_end":425,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(record, vec![\"\", \"foo\", \"bar\", \"b a z\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237161,"byte_end":237217,"line_start":426,"line_end":426,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237222,"byte_end":237229,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237981,"byte_end":237991,"line_start":455,"line_end":455,"column_start":12,"column_end":22},"name":"push_field","qualname":"<StringRecord>::push_field","value":"fn (&mut self, field: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a new field to this record.","sig":null,"attributes":[{"value":"/ Add a new field to this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237704,"byte_end":237739,"line_start":443,"line_end":443,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237744,"byte_end":237747,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237752,"byte_end":237765,"line_start":445,"line_end":445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237770,"byte_end":237773,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237778,"byte_end":237785,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237790,"byte_end":237816,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237821,"byte_end":237824,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut record = StringRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237829,"byte_end":237870,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/ record.push_field(\"foo\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237875,"byte_end":237904,"line_start":451,"line_end":451,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(&record[0], \"foo\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237909,"byte_end":237943,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237948,"byte_end":237955,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":237960,"byte_end":237969,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239314,"byte_end":239322,"line_start":496,"line_end":496,"column_start":12,"column_end":20},"name":"position","qualname":"<StringRecord>::position","value":"fn (&self) -> Option<&Position>","parent":null,"children":[],"decl_id":null,"docs":" Return the position of this record, if available.","sig":null,"attributes":[{"value":"/ Return the position of this record, if available.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238074,"byte_end":238127,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238132,"byte_end":238135,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238140,"byte_end":238153,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238158,"byte_end":238161,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238166,"byte_end":238173,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238178,"byte_end":238204,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/ use csv::{StringRecord, ReaderBuilder};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238209,"byte_end":238252,"line_start":465,"line_end":465,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238257,"byte_end":238260,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238265,"byte_end":238304,"line_start":467,"line_end":467,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238309,"byte_end":238357,"line_start":468,"line_end":468,"column_start":5,"column_end":53}},{"value":"/     let mut record = StringRecord::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238362,"byte_end":238407,"line_start":469,"line_end":469,"column_start":5,"column_end":50}},{"value":"/     let mut rdr = ReaderBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238412,"byte_end":238454,"line_start":470,"line_end":470,"column_start":5,"column_end":47}},{"value":"/         .has_headers(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238459,"byte_end":238490,"line_start":471,"line_end":471,"column_start":5,"column_end":36}},{"value":"/         .from_reader(\"a,b,c\\nx,y,z\".as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238495,"byte_end":238547,"line_start":472,"line_end":472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238552,"byte_end":238555,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     assert!(rdr.read_record(&mut record)?);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238560,"byte_end":238607,"line_start":474,"line_end":474,"column_start":5,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238612,"byte_end":238621,"line_start":475,"line_end":475,"column_start":5,"column_end":14}},{"value":"/         let pos = record.position().expect(\"a record position\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238626,"byte_end":238694,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/         assert_eq!(pos.byte(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238699,"byte_end":238737,"line_start":477,"line_end":477,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.line(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238742,"byte_end":238780,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.record(), 0);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238785,"byte_end":238825,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238830,"byte_end":238839,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238844,"byte_end":238847,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/     assert!(rdr.read_record(&mut record)?);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238852,"byte_end":238899,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238904,"byte_end":238913,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/         let pos = record.position().expect(\"a record position\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238918,"byte_end":238986,"line_start":484,"line_end":484,"column_start":5,"column_end":73}},{"value":"/         assert_eq!(pos.byte(), 6);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":238991,"byte_end":239029,"line_start":485,"line_end":485,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.line(), 2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239034,"byte_end":239072,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(pos.record(), 1);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239077,"byte_end":239117,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239122,"byte_end":239131,"line_start":488,"line_end":488,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239136,"byte_end":239139,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     // Finish the CSV reader for good measure.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239144,"byte_end":239194,"line_start":490,"line_end":490,"column_start":5,"column_end":55}},{"value":"/     assert!(!rdr.read_record(&mut record)?);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239199,"byte_end":239247,"line_start":491,"line_end":491,"column_start":5,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239252,"byte_end":239266,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239271,"byte_end":239276,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239281,"byte_end":239288,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239293,"byte_end":239302,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239852,"byte_end":239864,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"name":"set_position","qualname":"<StringRecord>::set_position","value":"fn (&mut self, pos: Option<Position>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the position of this record.","sig":null,"attributes":[{"value":"/ Set the position of this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239390,"byte_end":239426,"line_start":500,"line_end":500,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239431,"byte_end":239434,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239439,"byte_end":239452,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239457,"byte_end":239460,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239465,"byte_end":239472,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ use csv::{StringRecord, Position};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239477,"byte_end":239515,"line_start":505,"line_end":505,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239520,"byte_end":239523,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let mut record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239528,"byte_end":239589,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ let mut pos = Position::new();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239594,"byte_end":239628,"line_start":508,"line_end":508,"column_start":5,"column_end":39}},{"value":"/ pos.set_byte(100);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239633,"byte_end":239655,"line_start":509,"line_end":509,"column_start":5,"column_end":27}},{"value":"/ pos.set_line(4);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239660,"byte_end":239680,"line_start":510,"line_end":510,"column_start":5,"column_end":25}},{"value":"/ pos.set_record(2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239685,"byte_end":239707,"line_start":511,"line_end":511,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239712,"byte_end":239715,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ record.set_position(Some(pos.clone()));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239720,"byte_end":239763,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(record.position(), Some(&pos));","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239768,"byte_end":239814,"line_start":514,"line_end":514,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239819,"byte_end":239826,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239831,"byte_end":239840,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240593,"byte_end":240598,"line_start":539,"line_end":539,"column_start":12,"column_end":17},"name":"range","qualname":"<StringRecord>::range","value":"fn (&self, i: usize) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the start and end position of a field in this record.","sig":null,"attributes":[{"value":"/ Return the start and end position of a field in this record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":239946,"byte_end":240010,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240015,"byte_end":240018,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ If no such field exists at the given index, then return `None`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240023,"byte_end":240090,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240095,"byte_end":240098,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The range returned can be used with the slice returned by `as_slice`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240103,"byte_end":240176,"line_start":525,"line_end":525,"column_start":5,"column_end":78}},{"value":"/ Namely, the range returned is guaranteed to start and end at valid","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240181,"byte_end":240251,"line_start":526,"line_end":526,"column_start":5,"column_end":75}},{"value":"/ UTF-8 sequence boundaries.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240256,"byte_end":240286,"line_start":527,"line_end":527,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240291,"byte_end":240294,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240299,"byte_end":240312,"line_start":529,"line_end":529,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240317,"byte_end":240320,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240325,"byte_end":240332,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240337,"byte_end":240363,"line_start":532,"line_end":532,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240368,"byte_end":240371,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::from(vec![\"foo\", \"quux\", \"z\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240376,"byte_end":240438,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"/ let range = record.range(1).expect(\"a record range\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240443,"byte_end":240500,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(&record.as_slice()[range], \"quux\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240505,"byte_end":240555,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240560,"byte_end":240567,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240572,"byte_end":240581,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241107,"byte_end":241115,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<StringRecord>::as_slice","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the entire row as a single string slice. The slice returned\n stores all fields contiguously. The boundaries of each field can be\n determined via the `range` method.","sig":null,"attributes":[{"value":"/ Return the entire row as a single string slice. The slice returned","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240677,"byte_end":240747,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"/ stores all fields contiguously. The boundaries of each field can be","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240752,"byte_end":240823,"line_start":544,"line_end":544,"column_start":5,"column_end":76}},{"value":"/ determined via the `range` method.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240828,"byte_end":240866,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240871,"byte_end":240874,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240879,"byte_end":240892,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240897,"byte_end":240900,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240905,"byte_end":240912,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240917,"byte_end":240943,"line_start":550,"line_end":550,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240948,"byte_end":240951,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let record = StringRecord::from(vec![\"foo\", \"quux\", \"z\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":240956,"byte_end":241018,"line_start":552,"line_end":552,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(record.as_slice(), \"fooquuxz\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241023,"byte_end":241069,"line_start":553,"line_end":553,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241074,"byte_end":241081,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241086,"byte_end":241095,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241863,"byte_end":241877,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"as_byte_record","qualname":"<StringRecord>::as_byte_record","value":"fn (&self) -> &ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to this record's raw\n [`ByteRecord`](struct.ByteRecord.html).","sig":null,"attributes":[{"value":"/ Return a reference to this record's raw","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241485,"byte_end":241528,"line_start":564,"line_end":564,"column_start":5,"column_end":48}},{"value":"/ [`ByteRecord`](struct.ByteRecord.html).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241533,"byte_end":241576,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241581,"byte_end":241584,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241589,"byte_end":241602,"line_start":567,"line_end":567,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241607,"byte_end":241610,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241615,"byte_end":241622,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241627,"byte_end":241653,"line_start":570,"line_end":570,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241658,"byte_end":241661,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let str_record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241666,"byte_end":241727,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ let byte_record = str_record.as_byte_record();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241732,"byte_end":241782,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(&byte_record[2], b\"c\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241787,"byte_end":241825,"line_start":574,"line_end":574,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241830,"byte_end":241837,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241842,"byte_end":241851,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242838,"byte_end":242854,"line_start":609,"line_end":609,"column_start":12,"column_end":28},"name":"into_byte_record","qualname":"<StringRecord>::into_byte_record","value":"fn (self) -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Convert this `StringRecord` into a\n [`ByteRecord`](struct.ByteRecord.html).","sig":null,"attributes":[{"value":"/ Convert this `StringRecord` into a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241929,"byte_end":241967,"line_start":581,"line_end":581,"column_start":5,"column_end":43}},{"value":"/ [`ByteRecord`](struct.ByteRecord.html).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":241972,"byte_end":242015,"line_start":582,"line_end":582,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242020,"byte_end":242023,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242028,"byte_end":242041,"line_start":584,"line_end":584,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242046,"byte_end":242049,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242054,"byte_end":242061,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ use csv::StringRecord;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242066,"byte_end":242092,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242097,"byte_end":242100,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let str_record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242105,"byte_end":242166,"line_start":589,"line_end":589,"column_start":5,"column_end":66}},{"value":"/ let byte_record = str_record.into_byte_record();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242171,"byte_end":242223,"line_start":590,"line_end":590,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(&byte_record[2], b\"c\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242228,"byte_end":242266,"line_start":591,"line_end":591,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242271,"byte_end":242278,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242283,"byte_end":242286,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Note that this can also be achieved using the `From` impl:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242291,"byte_end":242353,"line_start":594,"line_end":594,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242358,"byte_end":242361,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242366,"byte_end":242373,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ use csv::{ByteRecord, StringRecord};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242378,"byte_end":242418,"line_start":597,"line_end":597,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242423,"byte_end":242426,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // Using ByteRecord::from...","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242431,"byte_end":242463,"line_start":599,"line_end":599,"column_start":5,"column_end":37}},{"value":"/ let str_record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242468,"byte_end":242529,"line_start":600,"line_end":600,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(ByteRecord::from(str_record).len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242534,"byte_end":242588,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242593,"byte_end":242596,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ // Using StringRecord::into...","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242601,"byte_end":242635,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ let str_record = StringRecord::from(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242640,"byte_end":242701,"line_start":604,"line_end":604,"column_start":5,"column_end":66}},{"value":"/ let byte_record: ByteRecord = str_record.into();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242706,"byte_end":242758,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(byte_record.len(), 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242763,"byte_end":242800,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242805,"byte_end":242812,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":242817,"byte_end":242826,"line_start":608,"line_end":608,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245651,"byte_end":245667,"line_start":703,"line_end":703,"column_start":12,"column_end":28},"name":"StringRecordIter","qualname":"::string_record::StringRecordIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the fields in a string record.","sig":null,"attributes":[{"value":"/ An iterator over the fields in a string record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245458,"byte_end":245509,"line_start":698,"line_end":698,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245510,"byte_end":245513,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ The `'r` lifetime variable refers to the lifetime of the `StringRecord`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245514,"byte_end":245589,"line_start":700,"line_end":700,"column_start":1,"column_end":76}},{"value":"/ that is being iterated over.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245590,"byte_end":245622,"line_start":701,"line_end":701,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/tutorial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tutorial","qualname":"::tutorial","value":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/tutorial.rs","parent":null,"children":[],"decl_id":null,"docs":"A tutorial for handling CSV data in Rust.","sig":null,"attributes":[{"value":"!\nA tutorial for handling CSV data in Rust.\n\nThis tutorial will cover basic CSV reading and writing, automatic\n(de)serialization with Serde, CSV transformations and performance.\n\nThis tutorial is targeted at beginner Rust programmers. Experienced Rust\nprogrammers may find this tutorial to be too verbose, but skimming may be\nuseful. There is also a\n[cookbook](../cookbook/index.html)\nof examples for those that prefer more information density.\n\nFor an introduction to Rust, please see the\n[official book](https://doc.rust-lang.org/book/second-edition/).\nIf you haven't written any Rust code yet but have written code in another\nlanguage, then this tutorial might be accessible to you without needing to read\nthe book first.\n\n# Table of contents\n\n1. [Setup](#setup)\n1. [Basic error handling](#basic-error-handling)\n    * [Switch to recoverable errors](#switch-to-recoverable-errors)\n1. [Reading CSV](#reading-csv)\n    * [Reading headers](#reading-headers)\n    * [Delimiters, quotes and variable length records](#delimiters-quotes-and-variable-length-records)\n    * [Reading with Serde](#reading-with-serde)\n    * [Handling invalid data with Serde](#handling-invalid-data-with-serde)\n1. [Writing CSV](#writing-csv)\n    * [Writing tab separated values](#writing-tab-separated-values)\n    * [Writing with Serde](#writing-with-serde)\n1. [Pipelining](#pipelining)\n    * [Filter by search](#filter-by-search)\n    * [Filter by population count](#filter-by-population-count)\n1. [Performance](#performance)\n    * [Amortizing allocations](#amortizing-allocations)\n    * [Serde and zero allocation](#serde-and-zero-allocation)\n    * [CSV parsing without the standard library](#csv-parsing-without-the-standard-library)\n1. [Closing thoughts](#closing-thoughts)\n\n# Setup\n\nIn this section, we'll get you setup with a simple program that reads CSV data\nand prints a \"debug\" version of each record. This assumes that you have the\n[Rust toolchain installed](https://www.rust-lang.org/install.html),\nwhich includes both Rust and Cargo.\n\nWe'll start by creating a new Cargo project:\n\n```text\n$ cargo new --bin csvtutor\n$ cd csvtutor\n```\n\nOnce inside `csvtutor`, open `Cargo.toml` in your favorite text editor and add\n`csv = \"1.1\"` to your `[dependencies]` section. At this point, your\n`Cargo.toml` should look something like this:\n\n```text\n[package]\nname = \"csvtutor\"\nversion = \"0.1.0\"\nauthors = [\"Your Name\"]\n\n[dependencies]\ncsv = \"1.1\"\n```\n\nNext, let's build your project. Since you added the `csv` crate as a\ndependency, Cargo will automatically download it and compile it for you. To\nbuild your project, use Cargo:\n\n```text\n$ cargo build\n```\n\nThis will produce a new binary, `csvtutor`, in your `target/debug` directory.\nIt won't do much at this point, but you can run it:\n\n```text\n$ ./target/debug/csvtutor\nHello, world!\n```\n\nLet's make our program do something useful. Our program will read CSV data on\nstdin and print debug output for each record on stdout. To write this program,\nopen `src/main.rs` in your favorite text editor and replace its contents with\nthis:\n\n```no_run\n//tutorial-setup-01.rs\n// Import the standard library's I/O module so we can read from stdin.\nuse std::io;\n\n// The `main` function is where your program starts executing.\nfn main() {\n    // Create a CSV parser that reads data from stdin.\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    // Loop over each record.\n    for result in rdr.records() {\n        // An error may occur, so abort the program in an unfriendly way.\n        // We will make this more friendly later!\n        let record = result.expect(\"a CSV record\");\n        // Print a debug version of the record.\n        println!(\"{:?}\", record);\n    }\n}\n```\n\nDon't worry too much about what this code means; we'll dissect it in the next\nsection. For now, try rebuilding your project:\n\n```text\n$ cargo build\n```\n\nAssuming that succeeds, let's try running our program. But first, we will need\nsome CSV data to play with! For that, we will use a random selection of 100\nUS cities, along with their population size and geographical coordinates. (We\nwill use this same CSV data throughout the entire tutorial.) To get the data,\ndownload it from github:\n\n```text\n$ curl -LO 'https://raw.githubusercontent.com/BurntSushi/rust-csv/master/examples/data/uspop.csv'\n```\n\nAnd now finally, run your program on `uspop.csv`:\n\n```text\n$ ./target/debug/csvtutor < uspop.csv\nStringRecord([\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])\nStringRecord([\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])\nStringRecord([\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])\n# ... and much more\n```\n\n# Basic error handling\n\nSince reading CSV data can result in errors, error handling is pervasive\nthroughout the examples in this tutorial. Therefore, we're going to spend a\nlittle bit of time going over basic error handling, and in particular, fix\nour previous example to show errors in a more friendly way. **If you're already\ncomfortable with things like `Result` and `try!`/`?` in Rust, then you can\nsafely skip this section.**\n\nNote that\n[The Rust Programming Language Book](https://doc.rust-lang.org/book/second-edition/)\ncontains an\n[introduction to general error handling](https://doc.rust-lang.org/book/second-edition/ch09-00-error-handling.html).\nFor a deeper dive, see\n[my blog post on error handling in Rust](http://blog.burntsushi.net/rust-error-handling/).\nThe blog post is especially important if you plan on building Rust libraries.\n\nWith that out of the way, error handling in Rust comes in two different forms:\nunrecoverable errors and recoverable errors.\n\nUnrecoverable errors generally correspond to things like bugs in your program,\nwhich might occur when an invariant or contract is broken. At that point, the\nstate of your program is unpredictable, and there's typically little recourse\nother than *panicking*. In Rust, a panic is similar to simply aborting your\nprogram, but it will unwind the stack and clean up resources before your\nprogram exits.\n\nOn the other hand, recoverable errors generally correspond to predictable\nerrors. A non-existent file or invalid CSV data are examples of recoverable\nerrors. In Rust, recoverable errors are handled via `Result`. A `Result`\nrepresents the state of a computation that has either succeeded or failed.\nIt is defined like so:\n\n```\nenum Result<T, E> {\n    Ok(T),\n    Err(E),\n}\n```\n\nThat is, a `Result` either contains a value of type `T` when the computation\nsucceeds, or it contains a value of type `E` when the computation fails.\n\nThe relationship between unrecoverable errors and recoverable errors is\nimportant. In particular, it is **strongly discouraged** to treat recoverable\nerrors as if they were unrecoverable. For example, panicking when a file could\nnot be found, or if some CSV data is invalid, is considered bad practice.\nInstead, predictable errors should be handled using Rust's `Result` type.\n\nWith our new found knowledge, let's re-examine our previous example and dissect\nits error handling.\n\n```no_run\n//tutorial-error-01.rs\nuse std::io;\n\nfn main() {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        let record = result.expect(\"a CSV record\");\n        println!(\"{:?}\", record);\n    }\n}\n```\n\nThere are two places where an error can occur in this program. The first is\nif there was a problem reading a record from stdin. The second is if there is\na problem writing to stdout. In general, we will ignore the latter problem in\nthis tutorial, although robust command line applications should probably try\nto handle it (e.g., when a broken pipe occurs). The former however is worth\nlooking into in more detail. For example, if a user of this program provides\ninvalid CSV data, then the program will panic:\n\n```text\n$ cat invalid\nheader1,header2\nfoo,bar\nquux,baz,foobar\n$ ./target/debug/csvtutor < invalid\nStringRecord { position: Some(Position { byte: 16, line: 2, record: 1 }), fields: [\"foo\", \"bar\"] }\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: UnequalLengths { pos: Some(Position { byte: 24, line: 3, record: 2 }), expected_len: 2, len: 3 }', /checkout/src/libcore/result.rs:859\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n```\n\nWhat happened here? First and foremost, we should talk about why the CSV data\nis invalid. The CSV data consists of three records: a header and two data\nrecords. The header and first data record have two fields, but the second\ndata record has three fields. By default, the csv crate will treat inconsistent\nrecord lengths as an error.\n(This behavior can be toggled using the\n[`ReaderBuilder::flexible`](../struct.ReaderBuilder.html#method.flexible)\nconfig knob.) This explains why the first data record is printed in this\nexample, since it has the same number of fields as the header record. That is,\nwe don't actually hit an error until we parse the second data record.\n\n(Note that the CSV reader automatically interprets the first record as a\nheader. This can be toggled with the\n[`ReaderBuilder::has_headers`](../struct.ReaderBuilder.html#method.has_headers)\nconfig knob.)\n\nSo what actually causes the panic to happen in our program? That would be the\nfirst line in our loop:\n\n```ignore\nfor result in rdr.records() {\n    let record = result.expect(\"a CSV record\"); // this panics\n    println!(\"{:?}\", record);\n}\n```\n\nThe key thing to understand here is that `rdr.records()` returns an iterator\nthat yields `Result` values. That is, instead of yielding records, it yields\na `Result` that contains either a record or an error. The `expect` method,\nwhich is defined on `Result`, *unwraps* the success value inside the `Result`.\nSince the `Result` might contain an error instead, `expect` will *panic* when\nit does contain an error.\n\nIt might help to look at the implementation of `expect`:\n\n```ignore\nuse std::fmt;\n\n// This says, \"for all types T and E, where E can be turned into a human\n// readable debug message, define the `expect` method.\"\nimpl<T, E: fmt::Debug> Result<T, E> {\n    fn expect(self, msg: &str) -> T {\n        match self {\n            Ok(t) => t,\n            Err(e) => panic!(\"{}: {:?}\", msg, e),\n        }\n    }\n}\n```\n\nSince this causes a panic if the CSV data is invalid, and invalid CSV data is\na perfectly predictable error, we've turned what should be a *recoverable*\nerror into an *unrecoverable* error. We did this because it is expedient to\nuse unrecoverable errors. Since this is bad practice, we will endeavor to avoid\nunrecoverable errors throughout the rest of the tutorial.\n\n## Switch to recoverable errors\n\nWe'll convert our unrecoverable error to a recoverable error in 3 steps. First,\nlet's get rid of the panic and print an error message manually:\n\n```no_run\n//tutorial-error-02.rs\nuse std::io;\nuse std::process;\n\nfn main() {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        // Examine our Result.\n        // If there was no problem, print the record.\n        // Otherwise, print the error message and quit the program.\n        match result {\n            Ok(record) => println!(\"{:?}\", record),\n            Err(err) => {\n                println!(\"error reading CSV from <stdin>: {}\", err);\n                process::exit(1);\n            }\n        }\n    }\n}\n```\n\nIf we run our program again, we'll still see an error message, but it is no\nlonger a panic message:\n\n```text\n$ cat invalid\nheader1,header2\nfoo,bar\nquux,baz,foobar\n$ ./target/debug/csvtutor < invalid\nStringRecord { position: Some(Position { byte: 16, line: 2, record: 1 }), fields: [\"foo\", \"bar\"] }\nerror reading CSV from <stdin>: CSV error: record 2 (line: 3, byte: 24): found record with 3 fields, but the previous record has 2 fields\n```\n\nThe second step for moving to recoverable errors is to put our CSV record loop\ninto a separate function. This function then has the option of *returning* an\nerror, which our `main` function can then inspect and decide what to do with.\n\n```no_run\n//tutorial-error-03.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        // Examine our Result.\n        // If there was no problem, print the record.\n        // Otherwise, convert our error to a Box<dyn Error> and return it.\n        match result {\n            Err(err) => return Err(From::from(err)),\n            Ok(record) => {\n              println!(\"{:?}\", record);\n            }\n        }\n    }\n    Ok(())\n}\n```\n\nOur new function, `run`, has a return type of `Result<(), Box<dyn Error>>`. In\nsimple terms, this says that `run` either returns nothing when successful, or\nif an error occurred, it returns a `Box<dyn Error>`, which stands for \"any kind of\nerror.\" A `Box<dyn Error>` is hard to inspect if we cared about the specific error\nthat occurred. But for our purposes, all we need to do is gracefully print an\nerror message and exit the program.\n\nThe third and final step is to replace our explicit `match` expression with a\nspecial Rust language feature: the question mark.\n\n```no_run\n//tutorial-error-04.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        // This is effectively the same code as our `match` in the\n        // previous example. In other words, `?` is syntactic sugar.\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n```\n\nThis last step shows how we can use the `?` to automatically forward errors\nto our caller without having to do explicit case analysis with `match`\nourselves. We will use the `?` heavily throughout this tutorial, and it's\nimportant to note that it can **only be used in functions that return\n`Result`.**\n\nWe'll end this section with a word of caution: using `Box<dyn Error>` as our error\ntype is the minimally acceptable thing we can do here. Namely, while it allows\nour program to gracefully handle errors, it makes it hard for callers to\ninspect the specific error condition that occurred. However, since this is a\ntutorial on writing command line programs that do CSV parsing, we will consider\nourselves satisfied. If you'd like to know more, or are interested in writing\na library that handles CSV data, then you should check out my\n[blog post on error handling](http://blog.burntsushi.net/rust-error-handling/).\n\nWith all that said, if all you're doing is writing a one-off program to do\nCSV transformations, then using methods like `expect` and panicking when an\nerror occurs is a perfectly reasonable thing to do. Nevertheless, this tutorial\nwill endeavor to show idiomatic code.\n\n# Reading CSV\n\nNow that we've got you setup and covered basic error handling, it's time to do\nwhat we came here to do: handle CSV data. We've already seen how to read\nCSV data from `stdin`, but this section will cover how to read CSV data from\nfiles and how to configure our CSV reader to data formatted with different\ndelimiters and quoting strategies.\n\nFirst up, let's adapt the example we've been working with to accept a file\npath argument instead of stdin.\n\n```no_run\n//tutorial-read-01.rs\nuse std::env;\nuse std::error::Error;\nuse std::ffi::OsString;\nuse std::fs::File;\nuse std::process;\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let file_path = get_first_arg()?;\n    let file = File::open(file_path)?;\n    let mut rdr = csv::Reader::from_reader(file);\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\n/// Returns the first positional argument sent to this process. If there are no\n/// positional arguments, then this returns an error.\nfn get_first_arg() -> Result<OsString, Box<dyn Error>> {\n    match env::args_os().nth(1) {\n        None => Err(From::from(\"expected 1 argument, but got none\")),\n        Some(file_path) => Ok(file_path),\n    }\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\nIf you replace the contents of your `src/main.rs` file with the above code,\nthen you should be able to rebuild your project and try it out:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor uspop.csv\nStringRecord([\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])\nStringRecord([\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])\nStringRecord([\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])\n# ... and much more\n```\n\nThis example contains two new pieces of code:\n\n1. Code for querying the positional arguments of your program. We put this code\n   into its own function called `get_first_arg`. Our program expects a file\n   path in the first position (which is indexed at `1`; the argument at index\n   `0` is the executable name), so if one doesn't exist, then `get_first_arg`\n   returns an error.\n2. Code for opening a file. In `run`, we open a file using `File::open`. If\n   there was a problem opening the file, we forward the error to the caller of\n   `run` (which is `main` in this program). Note that we do *not* wrap the\n   `File` in a buffer. The CSV reader does buffering internally, so there's\n   no need for the caller to do it.\n\nNow is a good time to introduce an alternate CSV reader constructor, which\nmakes it slightly more convenient to open CSV data from a file. That is,\ninstead of:\n\n```ignore\nlet file_path = get_first_arg()?;\nlet file = File::open(file_path)?;\nlet mut rdr = csv::Reader::from_reader(file);\n```\n\nyou can use:\n\n```ignore\nlet file_path = get_first_arg()?;\nlet mut rdr = csv::Reader::from_path(file_path)?;\n```\n\n`csv::Reader::from_path` will open the file for you and return an error if\nthe file could not be opened.\n\n## Reading headers\n\nIf you had a chance to look at the data inside `uspop.csv`, you would notice\nthat there is a header record that looks like this:\n\n```text\nCity,State,Population,Latitude,Longitude\n```\n\nNow, if you look back at the output of the commands you've run so far, you'll\nnotice that the header record is never printed. Why is that? By default, the\nCSV reader will interpret the first record in CSV data as a header, which\nis typically distinct from the actual data in the records that follow.\nTherefore, the header record is always skipped whenever you try to read or\niterate over the records in CSV data.\n\nThe CSV reader does not try to be smart about the header record and does\n**not** employ any heuristics for automatically detecting whether the first\nrecord is a header or not. Instead, if you don't want to treat the first record\nas a header, you'll need to tell the CSV reader that there are no headers.\n\nTo configure a CSV reader to do this, we'll need to use a\n[`ReaderBuilder`](../struct.ReaderBuilder.html)\nto build a CSV reader with our desired configuration. Here's an example that\ndoes just that. (Note that we've moved back to reading from `stdin`, since it\nproduces terser examples.)\n\n```no_run\n//tutorial-read-headers-01.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::ReaderBuilder::new()\n        .has_headers(false)\n        .from_reader(io::stdin());\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nIf you compile and run this program with our `uspop.csv` data, then you'll see\nthat the header record is now printed:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < uspop.csv\nStringRecord([\"City\", \"State\", \"Population\", \"Latitude\", \"Longitude\"])\nStringRecord([\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])\nStringRecord([\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])\nStringRecord([\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])\n```\n\nIf you ever need to access the header record directly, then you can use the\n[`Reader::header`](../struct.Reader.html#method.headers)\nmethod like so:\n\n```no_run\n//tutorial-read-headers-02.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    {\n        // We nest this call in its own scope because of lifetimes.\n        let headers = rdr.headers()?;\n        println!(\"{:?}\", headers);\n    }\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    // We can ask for the headers at any time. There's no need to nest this\n    // call in its own scope because we never try to borrow the reader again.\n    let headers = rdr.headers()?;\n    println!(\"{:?}\", headers);\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nOne interesting thing to note in this example is that we put the call to\n`rdr.headers()` in its own scope. We do this because `rdr.headers()` returns\na *borrow* of the reader's internal header state. The nested scope in this\ncode allows the borrow to end before we try to iterate over the records. If\nwe didn't nest the call to `rdr.headers()` in its own scope, then the code\nwouldn't compile because we cannot borrow the reader's headers at the same time\nthat we try to borrow the reader to iterate over its records.\n\nAnother way of solving this problem is to *clone* the header record:\n\n```ignore\nlet headers = rdr.headers()?.clone();\n```\n\nThis converts it from a borrow of the CSV reader to a new owned value. This\nmakes the code a bit easier to read, but at the cost of copying the header\nrecord into a new allocation.\n\n## Delimiters, quotes and variable length records\n\nIn this section we'll temporarily depart from our `uspop.csv` data set and\nshow how to read some CSV data that is a little less clean. This CSV data\nuses `;` as a delimiter, escapes quotes with `\\\"` (instead of `\"\"`) and has\nrecords of varying length. Here's the data, which contains a list of WWE\nwrestlers and the year they started, if it's known:\n\n```text\n$ cat strange.csv\n\"\\\"Hacksaw\\\" Jim Duggan\";1987\n\"Bret \\\"Hit Man\\\" Hart\";1984\n# We're not sure when Rafael started, so omit the year.\nRafael Halperin\n\"\\\"Big Cat\\\" Ernie Ladd\";1964\n\"\\\"Macho Man\\\" Randy Savage\";1985\n\"Jake \\\"The Snake\\\" Roberts\";1986\n```\n\nTo read this CSV data, we'll want to do the following:\n\n1. Disable headers, since this data has none.\n2. Change the delimiter from `,` to `;`.\n3. Change the quote strategy from doubled (e.g., `\"\"`) to escaped (e.g., `\\\"`).\n4. Permit flexible length records, since some omit the year.\n5. Ignore lines beginning with a `#`.\n\nAll of this (and more!) can be configured with a\n[`ReaderBuilder`](../struct.ReaderBuilder.html),\nas seen in the following example:\n\n```no_run\n//tutorial-read-delimiter-01.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::ReaderBuilder::new()\n        .has_headers(false)\n        .delimiter(b';')\n        .double_quote(false)\n        .escape(Some(b'\\\\'))\n        .flexible(true)\n        .comment(Some(b'#'))\n        .from_reader(io::stdin());\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nNow re-compile your project and try running the program on `strange.csv`:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < strange.csv\nStringRecord([\"\\\"Hacksaw\\\" Jim Duggan\", \"1987\"])\nStringRecord([\"Bret \\\"Hit Man\\\" Hart\", \"1984\"])\nStringRecord([\"Rafael Halperin\"])\nStringRecord([\"\\\"Big Cat\\\" Ernie Ladd\", \"1964\"])\nStringRecord([\"\\\"Macho Man\\\" Randy Savage\", \"1985\"])\nStringRecord([\"Jake \\\"The Snake\\\" Roberts\", \"1986\"])\n```\n\nYou should feel encouraged to play around with the settings. Some interesting\nthings you might try:\n\n1. If you remove the `escape` setting, notice that no CSV errors are reported.\n   Instead, records are still parsed. This is a feature of the CSV parser. Even\n   though it gets the data slightly wrong, it still provides a parse that you\n   might be able to work with. This is a useful property given the messiness\n   of real world CSV data.\n2. If you remove the `delimiter` setting, parsing still succeeds, although\n   every record has exactly one field.\n3. If you remove the `flexible` setting, the reader will print the first two\n   records (since they both have the same number of fields), but will return a\n   parse error on the third record, since it has only one field.\n\nThis covers most of the things you might want to configure on your CSV reader,\nalthough there are a few other knobs. For example, you can change the record\nterminator from a new line to any other character. (By default, the terminator\nis `CRLF`, which treats each of `\\r\\n`, `\\r` and `\\n` as single record\nterminators.) For more details, see the documentation and examples for each of\nthe methods on\n[`ReaderBuilder`](../struct.ReaderBuilder.html).\n\n## Reading with Serde\n\nOne of the most convenient features of this crate is its support for\n[Serde](https://serde.rs/).\nSerde is a framework for automatically serializing and deserializing data into\nRust types. In simpler terms, that means instead of iterating over records\nas an array of string fields, we can iterate over records of a specific type\nof our choosing.\n\nFor example, let's take a look at some data from our `uspop.csv` file:\n\n```text\nCity,State,Population,Latitude,Longitude\nDavidsons Landing,AK,,65.2419444,-165.2716667\nKenai,AK,7610,60.5544444,-151.2583333\n```\n\nWhile some of these fields make sense as strings (`City`, `State`), other\nfields look more like numbers. For example, `Population` looks like it contains\nintegers while `Latitude` and `Longitude` appear to contain decimals. If we\nwanted to convert these fields to their \"proper\" types, then we need to do\na lot of manual work. This next example shows how.\n\n```no_run\n//tutorial-read-serde-01.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.records() {\n        let record = result?;\n\n        let city = &record[0];\n        let state = &record[1];\n        // Some records are missing population counts, so if we can't\n        // parse a number, treat the population count as missing instead\n        // of returning an error.\n        let pop: Option<u64> = record[2].parse().ok();\n        // Lucky us! Latitudes and longitudes are available for every record.\n        // Therefore, if one couldn't be parsed, return an error.\n        let latitude: f64 = record[3].parse()?;\n        let longitude: f64 = record[4].parse()?;\n\n        println!(\n            \"city: {:?}, state: {:?}, \\\n             pop: {:?}, latitude: {:?}, longitude: {:?}\",\n            city, state, pop, latitude, longitude);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nThe problem here is that we need to parse each individual field manually, which\ncan be labor intensive and repetitive. Serde, however, makes this process\nautomatic. For example, we can ask to deserialize every record into a tuple\ntype: `(String, String, Option<u64>, f64, f64)`.\n\n```no_run\n//tutorial-read-serde-02.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\n// This introduces a type alias so that we can conveniently reference our\n// record type.\ntype Record = (String, String, Option<u64>, f64, f64);\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    // Instead of creating an iterator with the `records` method, we create\n    // an iterator with the `deserialize` method.\n    for result in rdr.deserialize() {\n        // We must tell Serde what type we want to deserialize into.\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nRunning this code should show similar output as previous examples:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < uspop.csv\n(\"Davidsons Landing\", \"AK\", None, 65.2419444, -165.2716667)\n(\"Kenai\", \"AK\", Some(7610), 60.5544444, -151.2583333)\n(\"Oakman\", \"AL\", None, 33.7133333, -87.3886111)\n# ... and much more\n```\n\nOne of the downsides of using Serde this way is that the type you use must\nmatch the order of fields as they appear in each record. This can be a pain\nif your CSV data has a header record, since you might tend to think about each\nfield as a value of a particular named field rather than as a numbered field.\nOne way we might achieve this is to deserialize our record into a map type like\n[`HashMap`](https://doc.rust-lang.org/std/collections/struct.HashMap.html)\nor\n[`BTreeMap`](https://doc.rust-lang.org/std/collections/struct.BTreeMap.html).\nThe next example shows how, and in particular, notice that the only thing that\nchanged from the last example is the definition of the `Record` type alias and\na new `use` statement that imports `HashMap` from the standard library:\n\n```no_run\n//tutorial-read-serde-03.rs\nuse std::collections::HashMap;\n# use std::error::Error;\n# use std::io;\n# use std::process;\n\n// This introduces a type alias so that we can conveniently reference our\n// record type.\ntype Record = HashMap<String, String>;\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.deserialize() {\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nRunning this program shows similar results as before, but each record is\nprinted as a map:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < uspop.csv\n{\"City\": \"Davidsons Landing\", \"Latitude\": \"65.2419444\", \"State\": \"AK\", \"Population\": \"\", \"Longitude\": \"-165.2716667\"}\n{\"City\": \"Kenai\", \"Population\": \"7610\", \"State\": \"AK\", \"Longitude\": \"-151.2583333\", \"Latitude\": \"60.5544444\"}\n{\"State\": \"AL\", \"City\": \"Oakman\", \"Longitude\": \"-87.3886111\", \"Population\": \"\", \"Latitude\": \"33.7133333\"}\n```\n\nThis method works especially well if you need to read CSV data with header\nrecords, but whose exact structure isn't known until your program runs.\nHowever, in our case, we know the structure of the data in `uspop.csv`. In\nparticular, with the `HashMap` approach, we've lost the specific types we had\nfor each field in the previous example when we deserialized each record into a\n`(String, String, Option<u64>, f64, f64)`. Is there a way to identify fields\nby their corresponding header name *and* assign each field its own unique\ntype? The answer is yes, but we'll need to bring in Serde's `derive` feature\nfirst. You can do that by adding this to the `[dependencies]` section of your\n`Cargo.toml` file:\n\n```text\nserde = { version = \"1\", features = [\"derive\"] }\n```\n\nWith these crates added to our project, we can now define our own custom struct\nthat represents our record. We then ask Serde to automatically write the glue\ncode required to populate our struct from a CSV record. The next example shows\nhow. Don't miss the new Serde imports!\n\n```no_run\n//tutorial-read-serde-04.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\n// This lets us write `#[derive(Deserialize)]`.\nuse serde::Deserialize;\n\n// We don't need to derive `Debug` (which doesn't require Serde), but it's a\n// good habit to do it for all your types.\n//\n// Notice that the field names in this struct are NOT in the same order as\n// the fields in the CSV data!\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record {\n    latitude: f64,\n    longitude: f64,\n    population: Option<u64>,\n    city: String,\n    state: String,\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.deserialize() {\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n        // Try this if you don't like each record smushed on one line:\n        // println!(\"{:#?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\nCompile and run this program to see similar output as before:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < uspop.csv\nRecord { latitude: 65.2419444, longitude: -165.2716667, population: None, city: \"Davidsons Landing\", state: \"AK\" }\nRecord { latitude: 60.5544444, longitude: -151.2583333, population: Some(7610), city: \"Kenai\", state: \"AK\" }\nRecord { latitude: 33.7133333, longitude: -87.3886111, population: None, city: \"Oakman\", state: \"AL\" }\n```\n\nOnce again, we didn't need to change our `run` function at all: we're still\niterating over records using the `deserialize` iterator that we started with\nin the beginning of this section. The only thing that changed in this example\nwas the definition of the `Record` type and a new `use` statement. Our `Record`\ntype is now a custom struct that we defined instead of a type alias, and as a\nresult, Serde doesn't know how to deserialize it by default. However, a special\ncompiler plugin provided by Serde is available, which will read your struct\ndefinition at compile time and generate code that will deserialize a CSV record\ninto a `Record` value. To see what happens if you leave out the automatic\nderive, change `#[derive(Debug, Deserialize)]` to `#[derive(Debug)]`.\n\nOne other thing worth mentioning in this example is the use of\n`#[serde(rename_all = \"PascalCase\")]`. This directive helps Serde map your\nstruct's field names to the header names in the CSV data. If you recall, our\nheader record is:\n\n```text\nCity,State,Population,Latitude,Longitude\n```\n\nNotice that each name is capitalized, but the fields in our struct are not. The\n`#[serde(rename_all = \"PascalCase\")]` directive fixes that by interpreting each\nfield in `PascalCase`, where the first letter of the field is capitalized. If\nwe didn't tell Serde about the name remapping, then the program will quit with\nan error:\n\n```text\n$ ./target/debug/csvtutor < uspop.csv\nCSV deserialize error: record 1 (line: 2, byte: 41): missing field `latitude`\n```\n\nWe could have fixed this through other means. For example, we could have used\ncapital letters in our field names:\n\n```ignore\n#[derive(Debug, Deserialize)]\nstruct Record {\n    Latitude: f64,\n    Longitude: f64,\n    Population: Option<u64>,\n    City: String,\n    State: String,\n}\n```\n\nHowever, this violates Rust naming style. (In fact, the Rust compiler\nwill even warn you that the names do not follow convention!)\n\nAnother way to fix this is to ask Serde to rename each field individually. This\nis useful when there is no consistent name mapping from fields to header names:\n\n```ignore\n#[derive(Debug, Deserialize)]\nstruct Record {\n    #[serde(rename = \"Latitude\")]\n    latitude: f64,\n    #[serde(rename = \"Longitude\")]\n    longitude: f64,\n    #[serde(rename = \"Population\")]\n    population: Option<u64>,\n    #[serde(rename = \"City\")]\n    city: String,\n    #[serde(rename = \"State\")]\n    state: String,\n}\n```\n\nTo read more about renaming fields and about other Serde directives, please\nconsult the\n[Serde documentation on attributes](https://serde.rs/attributes.html).\n\n## Handling invalid data with Serde\n\nIn this section we will see a brief example of how to deal with data that isn't\nclean. To do this exercise, we'll work with a slightly tweaked version of the\nUS population data we've been using throughout this tutorial. This version of\nthe data is slightly messier than what we've been using. You can get it like\nso:\n\n```text\n$ curl -LO 'https://raw.githubusercontent.com/BurntSushi/rust-csv/master/examples/data/uspop-null.csv'\n```\n\nLet's start by running our program from the previous section:\n\n```no_run\n//tutorial-read-serde-invalid-01.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\n# use serde::Deserialize;\n#\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record {\n    latitude: f64,\n    longitude: f64,\n    population: Option<u64>,\n    city: String,\n    state: String,\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.deserialize() {\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nCompile and run it on our messier data:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < uspop-null.csv\nRecord { latitude: 65.2419444, longitude: -165.2716667, population: None, city: \"Davidsons Landing\", state: \"AK\" }\nRecord { latitude: 60.5544444, longitude: -151.2583333, population: Some(7610), city: \"Kenai\", state: \"AK\" }\nRecord { latitude: 33.7133333, longitude: -87.3886111, population: None, city: \"Oakman\", state: \"AL\" }\n# ... more records\nCSV deserialize error: record 42 (line: 43, byte: 1710): field 2: invalid digit found in string\n```\n\nOops! What happened? The program printed several records, but stopped when it\ntripped over a deserialization problem. The error message says that it found\nan invalid digit in the field at index `2` (which is the `Population` field)\non line 43. What does line 43 look like?\n\n```text\n$ head -n 43 uspop-null.csv | tail -n1\nFlint Springs,KY,NULL,37.3433333,-86.7136111\n```\n\nAh! The third field (index `2`) is supposed to either be empty or contain a\npopulation count. However, in this data, it seems that `NULL` sometimes appears\nas a value, presumably to indicate that there is no count available.\n\nThe problem with our current program is that it fails to read this record\nbecause it doesn't know how to deserialize a `NULL` string into an\n`Option<u64>`. That is, a `Option<u64>` either corresponds to an empty field\nor an integer.\n\nTo fix this, we tell Serde to convert any deserialization errors on this field\nto a `None` value, as shown in this next example:\n\n```no_run\n//tutorial-read-serde-invalid-02.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\n# use serde::Deserialize;\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record {\n    latitude: f64,\n    longitude: f64,\n    #[serde(deserialize_with = \"csv::invalid_option\")]\n    population: Option<u64>,\n    city: String,\n    state: String,\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    for result in rdr.deserialize() {\n        let record: Record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nIf you compile and run this example, then it should run to completion just\nlike the other examples:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor < uspop-null.csv\nRecord { latitude: 65.2419444, longitude: -165.2716667, population: None, city: \"Davidsons Landing\", state: \"AK\" }\nRecord { latitude: 60.5544444, longitude: -151.2583333, population: Some(7610), city: \"Kenai\", state: \"AK\" }\nRecord { latitude: 33.7133333, longitude: -87.3886111, population: None, city: \"Oakman\", state: \"AL\" }\n# ... and more\n```\n\nThe only change in this example was adding this attribute to the `population`\nfield in our `Record` type:\n\n```ignore\n#[serde(deserialize_with = \"csv::invalid_option\")]\n```\n\nThe\n[`invalid_option`](../fn.invalid_option.html)\nfunction is a generic helper function that does one very simple thing: when\napplied to `Option` fields, it will convert any deserialization error into a\n`None` value. This is useful when you need to work with messy CSV data.\n\n# Writing CSV\n\nIn this section we'll show a few examples that write CSV data. Writing CSV data\ntends to be a bit more straight-forward than reading CSV data, since you get to\ncontrol the output format.\n\nLet's start with the most basic example: writing a few CSV records to `stdout`.\n\n```no_run\n//tutorial-write-01.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n    // Since we're writing records manually, we must explicitly write our\n    // header record. A header record is written the same way that other\n    // records are written.\n    wtr.write_record(&[\"City\", \"State\", \"Population\", \"Latitude\", \"Longitude\"])?;\n    wtr.write_record(&[\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])?;\n    wtr.write_record(&[\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])?;\n    wtr.write_record(&[\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])?;\n\n    // A CSV writer maintains an internal buffer, so it's important\n    // to flush the buffer when you're done.\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\nCompiling and running this example results in CSV data being printed:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor\nCity,State,Population,Latitude,Longitude\nDavidsons Landing,AK,,65.2419444,-165.2716667\nKenai,AK,7610,60.5544444,-151.2583333\nOakman,AL,,33.7133333,-87.3886111\n```\n\nBefore moving on, it's worth taking a closer look at the `write_record`\nmethod. In this example, it looks rather simple, but if you're new to Rust then\nits type signature might look a little daunting:\n\n```ignore\npub fn write_record<I, T>(&mut self, record: I) -> csv::Result<()>\n    where I: IntoIterator<Item=T>, T: AsRef<[u8]>\n{\n    // implementation elided\n}\n```\n\nTo understand the type signature, we can break it down piece by piece.\n\n1. The method takes two parameters: `self` and `record`.\n2. `self` is a special parameter that corresponds to the `Writer` itself.\n3. `record` is the CSV record we'd like to write. Its type is `I`, which is\n   a generic type.\n4. In the method's `where` clause, the `I` type is constrained by the\n   `IntoIterator<Item=T>` bound. What that means is that `I` must satisfy the\n   `IntoIterator` trait. If you look at the documentation of the\n   [`IntoIterator` trait](https://doc.rust-lang.org/std/iter/trait.IntoIterator.html),\n   then we can see that it describes types that can build iterators. In this\n   case, we want an iterator that yields *another* generic type `T`, where\n   `T` is the type of each field we want to write.\n5. `T` also appears in the method's `where` clause, but its constraint is the\n   `AsRef<[u8]>` bound. The `AsRef` trait is a way to describe zero cost\n   conversions between types in Rust. In this case, the `[u8]` in `AsRef<[u8]>`\n   means that we want to be able to *borrow* a slice of bytes from `T`.\n   The CSV writer will take these bytes and write them as a single field.\n   The `AsRef<[u8]>` bound is useful because types like `String`, `&str`,\n   `Vec<u8>` and `&[u8]` all satisfy it.\n6. Finally, the method returns a `csv::Result<()>`, which is short-hand for\n   `Result<(), csv::Error>`. That means `write_record` either returns nothing\n   on success or returns a `csv::Error` on failure.\n\nNow, let's apply our new found understanding of the type signature of\n`write_record`. If you recall, in our previous example, we used it like so:\n\n```ignore\nwtr.write_record(&[\"field 1\", \"field 2\", \"etc\"])?;\n```\n\nSo how do the types match up? Well, the type of each of our fields in this\ncode is `&'static str` (which is the type of a string literal in Rust). Since\nwe put them in a slice literal, the type of our parameter is\n`&'static [&'static str]`, or more succinctly written as `&[&str]` without the\nlifetime annotations. Since slices satisfy the `IntoIterator` bound and\nstrings satisfy the `AsRef<[u8]>` bound, this ends up being a legal call.\n\nHere are a few more examples of ways you can call `write_record`:\n\n```no_run\n# use csv;\n# let mut wtr = csv::Writer::from_writer(vec![]);\n// A slice of byte strings.\nwtr.write_record(&[b\"a\", b\"b\", b\"c\"]);\n// A vector.\nwtr.write_record(vec![\"a\", \"b\", \"c\"]);\n// A string record.\nwtr.write_record(&csv::StringRecord::from(vec![\"a\", \"b\", \"c\"]));\n// A byte record.\nwtr.write_record(&csv::ByteRecord::from(vec![\"a\", \"b\", \"c\"]));\n```\n\nFinally, the example above can be easily adapted to write to a file instead\nof `stdout`:\n\n```no_run\n//tutorial-write-02.rs\nuse std::env;\nuse std::error::Error;\nuse std::ffi::OsString;\nuse std::process;\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let file_path = get_first_arg()?;\n    let mut wtr = csv::Writer::from_path(file_path)?;\n\n    wtr.write_record(&[\"City\", \"State\", \"Population\", \"Latitude\", \"Longitude\"])?;\n    wtr.write_record(&[\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])?;\n    wtr.write_record(&[\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])?;\n    wtr.write_record(&[\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])?;\n\n    wtr.flush()?;\n    Ok(())\n}\n\n/// Returns the first positional argument sent to this process. If there are no\n/// positional arguments, then this returns an error.\nfn get_first_arg() -> Result<OsString, Box<dyn Error>> {\n    match env::args_os().nth(1) {\n        None => Err(From::from(\"expected 1 argument, but got none\")),\n        Some(file_path) => Ok(file_path),\n    }\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\n## Writing tab separated values\n\nIn the previous section, we saw how to write some simple CSV data to `stdout`\nthat looked like this:\n\n```text\nCity,State,Population,Latitude,Longitude\nDavidsons Landing,AK,,65.2419444,-165.2716667\nKenai,AK,7610,60.5544444,-151.2583333\nOakman,AL,,33.7133333,-87.3886111\n```\n\nYou might wonder to yourself: what's the point of using a CSV writer if the\ndata is so simple? Well, the benefit of a CSV writer is that it can handle all\ntypes of data without sacrificing the integrity of your data. That is, it knows\nwhen to quote fields that contain special CSV characters (like commas or new\nlines) or escape literal quotes that appear in your data. The CSV writer can\nalso be easily configured to use different delimiters or quoting strategies.\n\nIn this section, we'll take a look a look at how to tweak some of the settings\non a CSV writer. In particular, we'll write TSV (\"tab separated values\")\ninstead of CSV, and we'll ask the CSV writer to quote all non-numeric fields.\nHere's an example:\n\n```no_run\n//tutorial-write-delimiter-01.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut wtr = csv::WriterBuilder::new()\n        .delimiter(b'\\t')\n        .quote_style(csv::QuoteStyle::NonNumeric)\n        .from_writer(io::stdout());\n\n    wtr.write_record(&[\"City\", \"State\", \"Population\", \"Latitude\", \"Longitude\"])?;\n    wtr.write_record(&[\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])?;\n    wtr.write_record(&[\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])?;\n    wtr.write_record(&[\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])?;\n\n    wtr.flush()?;\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nCompiling and running this example gives:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor\n\"City\"  \"State\" \"Population\"    \"Latitude\"      \"Longitude\"\n\"Davidsons Landing\"     \"AK\"    \"\"      65.2419444      -165.2716667\n\"Kenai\" \"AK\"    7610    60.5544444      -151.2583333\n\"Oakman\"        \"AL\"    \"\"      33.7133333      -87.3886111\n```\n\nIn this example, we used a new type\n[`QuoteStyle`](../enum.QuoteStyle.html).\nThe `QuoteStyle` type represents the different quoting strategies available\nto you. The default is to add quotes to fields only when necessary. This\nprobably works for most use cases, but you can also ask for quotes to always\nbe put around fields, to never be put around fields or to always be put around\nnon-numeric fields.\n\n## Writing with Serde\n\nJust like the CSV reader supports automatic deserialization into Rust types\nwith Serde, the CSV writer supports automatic serialization from Rust types\ninto CSV records using Serde. In this section, we'll learn how to use it.\n\nAs with reading, let's start by seeing how we can serialize a Rust tuple.\n\n```no_run\n//tutorial-write-serde-01.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    // We still need to write headers manually.\n    wtr.write_record(&[\"City\", \"State\", \"Population\", \"Latitude\", \"Longitude\"])?;\n\n    // But now we can write records by providing a normal Rust value.\n    //\n    // Note that the odd `None::<u64>` syntax is required because `None` on\n    // its own doesn't have a concrete type, but Serde needs a concrete type\n    // in order to serialize it. That is, `None` has type `Option<T>` but\n    // `None::<u64>` has type `Option<u64>`.\n    wtr.serialize((\"Davidsons Landing\", \"AK\", None::<u64>, 65.2419444, -165.2716667))?;\n    wtr.serialize((\"Kenai\", \"AK\", Some(7610), 60.5544444, -151.2583333))?;\n    wtr.serialize((\"Oakman\", \"AL\", None::<u64>, 33.7133333, -87.3886111))?;\n\n    wtr.flush()?;\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nCompiling and running this program gives the expected output:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor\nCity,State,Population,Latitude,Longitude\nDavidsons Landing,AK,,65.2419444,-165.2716667\nKenai,AK,7610,60.5544444,-151.2583333\nOakman,AL,,33.7133333,-87.3886111\n```\n\nThe key thing to note in the above example is the use of `serialize` instead\nof `write_record` to write our data. In particular, `write_record` is used\nwhen writing a simple record that contains string-like data only. On the other\nhand, `serialize` is used when your data consists of more complex values like\nnumbers, floats or optional values. Of course, you could always convert the\ncomplex values to strings and then use `write_record`, but Serde can do it for\nyou automatically.\n\nAs with reading, we can also serialize custom structs as CSV records. As a\nbonus, the fields in a struct will automatically be written as a header\nrecord!\n\nTo write custom structs as CSV records, we'll need to make use of Serde's\nautomatic `derive` feature again. As in the\n[previous section on reading with Serde](#reading-with-serde),\nwe'll need to add a couple crates to our `[dependencies]` section in our\n`Cargo.toml` (if they aren't already there):\n\n```text\nserde = { version = \"1\", features = [\"derive\"] }\n```\n\nAnd we'll also need to add a new `use` statement to our code, for Serde, as\nshown in the example:\n\n```no_run\n//tutorial-write-serde-02.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nuse serde::Serialize;\n\n// Note that structs can derive both Serialize and Deserialize!\n#[derive(Debug, Serialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record<'a> {\n    city: &'a str,\n    state: &'a str,\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    wtr.serialize(Record {\n        city: \"Davidsons Landing\",\n        state: \"AK\",\n        population: None,\n        latitude: 65.2419444,\n        longitude: -165.2716667,\n    })?;\n    wtr.serialize(Record {\n        city: \"Kenai\",\n        state: \"AK\",\n        population: Some(7610),\n        latitude: 60.5544444,\n        longitude: -151.2583333,\n    })?;\n    wtr.serialize(Record {\n        city: \"Oakman\",\n        state: \"AL\",\n        population: None,\n        latitude: 33.7133333,\n        longitude: -87.3886111,\n    })?;\n\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\nCompiling and running this example has the same output as last time, even\nthough we didn't explicitly write a header record:\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor\nCity,State,Population,Latitude,Longitude\nDavidsons Landing,AK,,65.2419444,-165.2716667\nKenai,AK,7610,60.5544444,-151.2583333\nOakman,AL,,33.7133333,-87.3886111\n```\n\nIn this case, the `serialize` method noticed that we were writing a struct\nwith field names. When this happens, `serialize` will automatically write a\nheader record (only if no other records have been written) that consists of\nthe fields in the struct in the order in which they are defined. Note that\nthis behavior can be disabled with the\n[`WriterBuilder::has_headers`](../struct.WriterBuilder.html#method.has_headers)\nmethod.\n\nIt's also worth pointing out the use of a *lifetime parameter* in our `Record`\nstruct:\n\n```ignore\nstruct Record<'a> {\n    city: &'a str,\n    state: &'a str,\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n```\n\nThe `'a` lifetime parameter corresponds to the lifetime of the `city` and\n`state` string slices. This says that the `Record` struct contains *borrowed*\ndata. We could have written our struct without borrowing any data, and\ntherefore, without any lifetime parameters:\n\n```ignore\nstruct Record {\n    city: String,\n    state: String,\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n```\n\nHowever, since we had to replace our borrowed `&str` types with owned `String`\ntypes, we're now forced to allocate a new `String` value for both of `city`\nand `state` for every record that we write. There's no intrinsic problem with\ndoing that, but it might be a bit wasteful.\n\nFor more examples and more details on the rules for serialization, please see\nthe\n[`Writer::serialize`](../struct.Writer.html#method.serialize)\nmethod.\n\n# Pipelining\n\nIn this section, we're going to cover a few examples that demonstrate programs\nthat take CSV data as input, and produce possibly transformed or filtered CSV\ndata as output. This shows how to write a complete program that efficiently\nreads and writes CSV data. Rust is well positioned to perform this task, since\nyou'll get great performance with the convenience of a high level CSV library.\n\n## Filter by search\n\nThe first example of CSV pipelining we'll look at is a simple filter. It takes\nas input some CSV data on stdin and a single string query as its only\npositional argument, and it will produce as output CSV data that only contains\nrows with a field that matches the query.\n\n```no_run\n//tutorial-pipeline-search-01.rs\nuse std::env;\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn run() -> Result<(), Box<dyn Error>> {\n    // Get the query from the positional arguments.\n    // If one doesn't exist, return an error.\n    let query = match env::args().nth(1) {\n        None => return Err(From::from(\"expected 1 argument, but got none\")),\n        Some(query) => query,\n    };\n\n    // Build CSV readers and writers to stdin and stdout, respectively.\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    // Before reading our data records, we should write the header record.\n    wtr.write_record(rdr.headers()?)?;\n\n    // Iterate over all the records in `rdr`, and write only records containing\n    // `query` to `wtr`.\n    for result in rdr.records() {\n        let record = result?;\n        if record.iter().any(|field| field == &query) {\n            wtr.write_record(&record)?;\n        }\n    }\n\n    // CSV writers use an internal buffer, so we should always flush when done.\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\nIf we compile and run this program with a query of `MA` on `uspop.csv`, we'll\nsee that only one record matches:\n\n```text\n$ cargo build\n$ ./csvtutor MA < uspop.csv\nCity,State,Population,Latitude,Longitude\nReading,MA,23441,42.5255556,-71.0958333\n```\n\nThis example doesn't actually introduce anything new. It merely combines what\nyou've already learned about CSV readers and writers from previous sections.\n\nLet's add a twist to this example. In the real world, you're often faced with\nmessy CSV data that might not be encoded correctly. One example you might come\nacross is CSV data encoded in\n[Latin-1](https://en.wikipedia.org/wiki/ISO/IEC_8859-1).\nUnfortunately, for the examples we've seen so far, our CSV reader assumes that\nall of the data is UTF-8. Since all of the data we've worked on has been\nASCII---which is a subset of both Latin-1 and UTF-8---we haven't had any\nproblems. But let's introduce a slightly tweaked version of our `uspop.csv`\nfile that contains an encoding of a Latin-1 character that is invalid UTF-8.\nYou can get the data like so:\n\n```text\n$ curl -LO 'https://raw.githubusercontent.com/BurntSushi/rust-csv/master/examples/data/uspop-latin1.csv'\n```\n\nEven though I've already given away the problem, let's see what happen when\nwe try to run our previous example on this new data:\n\n```text\n$ ./csvtutor MA < uspop-latin1.csv\nCity,State,Population,Latitude,Longitude\nCSV parse error: record 3 (line 4, field: 0, byte: 125): invalid utf-8: invalid UTF-8 in field 0 near byte index 0\n```\n\nThe error message tells us exactly what's wrong. Let's take a look at line 4\nto see what we're dealing with:\n\n```text\n$ head -n4 uspop-latin1.csv | tail -n1\nÕakman,AL,,33.7133333,-87.3886111\n```\n\nIn this case, the very first character is the Latin-1 `Õ`, which is encoded as\nthe byte `0xD5`, which is in turn invalid UTF-8. So what do we do now that our\nCSV parser has choked on our data? You have two choices. The first is to go in\nand fix up your CSV data so that it's valid UTF-8. This is probably a good\nidea anyway, and tools like `iconv` can help with the task of transcoding.\nBut if you can't or don't want to do that, then you can instead read CSV data\nin a way that is mostly encoding agnostic (so long as ASCII is still a valid\nsubset). The trick is to use *byte records* instead of *string records*.\n\nThus far, we haven't actually talked much about the type of a record in this\nlibrary, but now is a good time to introduce them. There are two of them,\n[`StringRecord`](../struct.StringRecord.html)\nand\n[`ByteRecord`](../struct.ByteRecord.html).\nEach them represent a single record in CSV data, where a record is a sequence\nof an arbitrary number of fields. The only difference between `StringRecord`\nand `ByteRecord` is that `StringRecord` is guaranteed to be valid UTF-8, where\nas `ByteRecord` contains arbitrary bytes.\n\nArmed with that knowledge, we can now begin to understand why we saw an error\nwhen we ran the last example on data that wasn't UTF-8. Namely, when we call\n`records`, we get back an iterator of `StringRecord`. Since `StringRecord` is\nguaranteed to be valid UTF-8, trying to build a `StringRecord` with invalid\nUTF-8 will result in the error that we see.\n\nAll we need to do to make our example work is to switch from a `StringRecord`\nto a `ByteRecord`. This means using `byte_records` to create our iterator\ninstead of `records`, and similarly using `byte_headers` instead of `headers`\nif we think our header data might contain invalid UTF-8 as well. Here's the\nchange:\n\n```no_run\n//tutorial-pipeline-search-02.rs\n# use std::env;\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<(), Box<dyn Error>> {\n    let query = match env::args().nth(1) {\n        None => return Err(From::from(\"expected 1 argument, but got none\")),\n        Some(query) => query,\n    };\n\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    wtr.write_record(rdr.byte_headers()?)?;\n\n    for result in rdr.byte_records() {\n        let record = result?;\n        // `query` is a `String` while `field` is now a `&[u8]`, so we'll\n        // need to convert `query` to `&[u8]` before doing a comparison.\n        if record.iter().any(|field| field == query.as_bytes()) {\n            wtr.write_record(&record)?;\n        }\n    }\n\n    wtr.flush()?;\n    Ok(())\n}\n#\n# fn main() {\n#     if let Err(err) = run() {\n#         println!(\"{}\", err);\n#         process::exit(1);\n#     }\n# }\n```\n\nCompiling and running this now yields the same results as our first example,\nbut this time it works on data that isn't valid UTF-8.\n\n```text\n$ cargo build\n$ ./csvtutor MA < uspop-latin1.csv\nCity,State,Population,Latitude,Longitude\nReading,MA,23441,42.5255556,-71.0958333\n```\n\n## Filter by population count\n\nIn this section, we will show another example program that both reads and\nwrites CSV data, but instead of dealing with arbitrary records, we will use\nSerde to deserialize and serialize records with specific types.\n\nFor this program, we'd like to be able to filter records in our population data\nby population count. Specifically, we'd like to see which records meet a\ncertain population threshold. In addition to using a simple inequality, we must\nalso account for records that have a missing population count. This is where\ntypes like `Option<T>` come in handy, because the compiler will force us to\nconsider the case when the population count is missing.\n\nSince we're using Serde in this example, don't forget to add the Serde\ndependencies to your `Cargo.toml` in your `[dependencies]` section if they\naren't already there:\n\n```text\nserde = { version = \"1\", features = [\"derive\"] }\n```\n\nNow here's the code:\n\n```no_run\n//tutorial-pipeline-pop-01.rs\nuse std::env;\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nuse serde::{Deserialize, Serialize};\n\n// Unlike previous examples, we derive both Deserialize and Serialize. This\n// means we'll be able to automatically deserialize and serialize this type.\n#[derive(Debug, Deserialize, Serialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record {\n    city: String,\n    state: String,\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n\nfn run() -> Result<(), Box<dyn Error>> {\n    // Get the query from the positional arguments.\n    // If one doesn't exist or isn't an integer, return an error.\n    let minimum_pop: u64 = match env::args().nth(1) {\n        None => return Err(From::from(\"expected 1 argument, but got none\")),\n        Some(arg) => arg.parse()?,\n    };\n\n    // Build CSV readers and writers to stdin and stdout, respectively.\n    // Note that we don't need to write headers explicitly. Since we're\n    // serializing a custom struct, that's done for us automatically.\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    let mut wtr = csv::Writer::from_writer(io::stdout());\n\n    // Iterate over all the records in `rdr`, and write only records containing\n    // a population that is greater than or equal to `minimum_pop`.\n    for result in rdr.deserialize() {\n        // Remember that when deserializing, we must use a type hint to\n        // indicate which type we want to deserialize our record into.\n        let record: Record = result?;\n\n        // `map_or` is a combinator on `Option`. It take two parameters:\n        // a value to use when the `Option` is `None` (i.e., the record has\n        // no population count) and a closure that returns another value of\n        // the same type when the `Option` is `Some`. In this case, we test it\n        // against our minimum population count that we got from the command\n        // line.\n        if record.population.map_or(false, |pop| pop >= minimum_pop) {\n            wtr.serialize(record)?;\n        }\n    }\n\n    // CSV writers use an internal buffer, so we should always flush when done.\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n```\n\nIf we compile and run our program with a minimum threshold of `100000`, we\nshould see three matching records. Notice that the headers were added even\nthough we never explicitly wrote them!\n\n```text\n$ cargo build\n$ ./target/debug/csvtutor 100000 < uspop.csv\nCity,State,Population,Latitude,Longitude\nFontana,CA,169160,34.0922222,-117.4341667\nBridgeport,CT,139090,41.1669444,-73.2052778\nIndianapolis,IN,773283,39.7683333,-86.1580556\n```\n\n# Performance\n\nIn this section, we'll go over how to squeeze the most juice out of our CSV\nreader. As it happens, most of the APIs we've seen so far were designed with\nhigh level convenience in mind, and that often comes with some costs. For the\nmost part, those costs revolve around unnecessary allocations. Therefore, most\nof the section will show how to do CSV parsing with as little allocation as\npossible.\n\nThere are two critical preliminaries we must cover.\n\nFirstly, when you care about performance, you should compile your code\nwith `cargo build --release` instead of `cargo build`. The `--release`\nflag instructs the compiler to spend more time optimizing your code. When\ncompiling with the `--release` flag, you'll find your compiled program at\n`target/release/csvtutor` instead of `target/debug/csvtutor`. Throughout this\ntutorial, we've used `cargo build` because our dataset was small and we weren't\nfocused on speed. The downside of `cargo build --release` is that it will take\nlonger than `cargo build`.\n\nSecondly, the dataset we've used throughout this tutorial only has 100 records.\nWe'd have to try really hard to cause our program to run slowly on 100 records,\neven when we compile without the `--release` flag. Therefore, in order to\nactually witness a performance difference, we need a bigger dataset. To get\nsuch a dataset, we'll use the original source of `uspop.csv`. **Warning: the\ndownload is 41MB compressed and decompresses to 145MB.**\n\n```text\n$ curl -LO http://burntsushi.net/stuff/worldcitiespop.csv.gz\n$ gunzip worldcitiespop.csv.gz\n$ wc worldcitiespop.csv\n  3173959   5681543 151492068 worldcitiespop.csv\n$ md5sum worldcitiespop.csv\n6198bd180b6d6586626ecbf044c1cca5  worldcitiespop.csv\n```\n\nFinally, it's worth pointing out that this section is not attempting to\npresent a rigorous set of benchmarks. We will stay away from rigorous analysis\nand instead rely a bit more on wall clock times and intuition.\n\n## Amortizing allocations\n\nIn order to measure performance, we must be careful about what it is we're\nmeasuring. We must also be careful to not change the thing we're measuring as\nwe make improvements to the code. For this reason, we will focus on measuring\nhow long it takes to count the number of records corresponding to city\npopulation counts in Massachusetts. This represents a very small amount of work\nthat requires us to visit every record, and therefore represents a decent way\nto measure how long it takes to do CSV parsing.\n\nBefore diving into our first optimization, let's start with a baseline by\nadapting a previous example to count the number of records in\n`worldcitiespop.csv`:\n\n```no_run\n//tutorial-perf-alloc-01.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nfn run() -> Result<u64, Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n\n    let mut count = 0;\n    for result in rdr.records() {\n        let record = result?;\n        if &record[0] == \"us\" && &record[3] == \"MA\" {\n            count += 1;\n        }\n    }\n    Ok(count)\n}\n\nfn main() {\n    match run() {\n        Ok(count) => {\n            println!(\"{}\", count);\n        }\n        Err(err) => {\n            println!(\"{}\", err);\n            process::exit(1);\n        }\n    }\n}\n```\n\nNow let's compile and run it and see what kind of timing we get. Don't forget\nto compile with the `--release` flag. (For grins, try compiling without the\n`--release` flag and see how long it takes to run the program!)\n\n```text\n$ cargo build --release\n$ time ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m0.645s\nuser    0m0.627s\nsys     0m0.017s\n```\n\nAll right, so what's the first thing we can do to make this faster? This\nsection promised to speed things up by amortizing allocation, but we can do\nsomething even simpler first: iterate over\n[`ByteRecord`](../struct.ByteRecord.html)s\ninstead of\n[`StringRecord`](../struct.StringRecord.html)s.\nIf you recall from a previous section, a `StringRecord` is guaranteed to be\nvalid UTF-8, and therefore must validate that its contents is actually UTF-8.\n(If validation fails, then the CSV reader will return an error.) If we remove\nthat validation from our program, then we can realize a nice speed boost as\nshown in the next example:\n\n```no_run\n//tutorial-perf-alloc-02.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<u64, Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n\n    let mut count = 0;\n    for result in rdr.byte_records() {\n        let record = result?;\n        if &record[0] == b\"us\" && &record[3] == b\"MA\" {\n            count += 1;\n        }\n    }\n    Ok(count)\n}\n#\n# fn main() {\n#     match run() {\n#         Ok(count) => {\n#             println!(\"{}\", count);\n#         }\n#         Err(err) => {\n#             println!(\"{}\", err);\n#             process::exit(1);\n#         }\n#     }\n# }\n```\n\nAnd now compile and run:\n\n```text\n$ cargo build --release\n$ time ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m0.429s\nuser    0m0.403s\nsys     0m0.023s\n```\n\nOur program is now approximately 30% faster, all because we removed UTF-8\nvalidation. But was it actually okay to remove UTF-8 validation? What have we\nlost? In this case, it is perfectly acceptable to drop UTF-8 validation and use\n`ByteRecord` instead because all we're doing with the data in the record is\ncomparing two of its fields to raw bytes:\n\n```ignore\nif &record[0] == b\"us\" && &record[3] == b\"MA\" {\n    count += 1;\n}\n```\n\nIn particular, it doesn't matter whether `record` is valid UTF-8 or not, since\nwe're checking for equality on the raw bytes themselves.\n\nUTF-8 validation via `StringRecord` is useful because it provides access to\nfields as `&str` types, where as `ByteRecord` provides fields as `&[u8]` types.\n`&str` is the type of a borrowed string in Rust, which provides convenient\naccess to string APIs like substring search. Strings are also frequently used\nin other areas, so they tend to be a useful thing to have. Therefore, sticking\nwith `StringRecord` is a good default, but if you need the extra speed and can\ndeal with arbitrary bytes, then switching to `ByteRecord` might be a good idea.\n\nMoving on, let's try to get another speed boost by amortizing allocation.\nAmortizing allocation is the technique that creates an allocation once (or\nvery rarely), and then attempts to reuse it instead of creating additional\nallocations. In the case of the previous examples, we used iterators created\nby the `records` and `byte_records` methods on a CSV reader. These iterators\nallocate a new record for every item that it yields, which in turn corresponds\nto a new allocation. It does this because iterators cannot yield items that\nborrow from the iterator itself, and because creating new allocations tends to\nbe a lot more convenient.\n\nIf we're willing to forgo use of iterators, then we can amortize allocations\nby creating a *single* `ByteRecord` and asking the CSV reader to read into it.\nWe do this by using the\n[`Reader::read_byte_record`](../struct.Reader.html#method.read_byte_record)\nmethod.\n\n```no_run\n//tutorial-perf-alloc-03.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\nfn run() -> Result<u64, Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    let mut record = csv::ByteRecord::new();\n\n    let mut count = 0;\n    while rdr.read_byte_record(&mut record)? {\n        if &record[0] == b\"us\" && &record[3] == b\"MA\" {\n            count += 1;\n        }\n    }\n    Ok(count)\n}\n#\n# fn main() {\n#     match run() {\n#         Ok(count) => {\n#             println!(\"{}\", count);\n#         }\n#         Err(err) => {\n#             println!(\"{}\", err);\n#             process::exit(1);\n#         }\n#     }\n# }\n```\n\nCompile and run:\n\n```text\n$ cargo build --release\n$ time ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m0.308s\nuser    0m0.283s\nsys     0m0.023s\n```\n\nWoohoo! This represents *another* 30% boost over the previous example, which is\na 50% boost over the first example.\n\nLet's dissect this code by taking a look at the type signature of the\n`read_byte_record` method:\n\n```ignore\nfn read_byte_record(&mut self, record: &mut ByteRecord) -> csv::Result<bool>;\n```\n\nThis method takes as input a CSV reader (the `self` parameter) and a *mutable\nborrow* of a `ByteRecord`, and returns a `csv::Result<bool>`. (The\n`csv::Result<bool>` is equivalent to `Result<bool, csv::Error>`.) The return\nvalue is `true` if and only if a record was read. When it's `false`, that means\nthe reader has exhausted its input. This method works by copying the contents\nof the next record into the provided `ByteRecord`. Since the same `ByteRecord`\nis used to read every record, it will already have space allocated for data.\nWhen `read_byte_record` runs, it will overwrite the contents that were there\nwith the new record, which means that it can reuse the space that was\nallocated. Thus, we have *amortized allocation*.\n\nAn exercise you might consider doing is to use a `StringRecord` instead of a\n`ByteRecord`, and therefore\n[`Reader::read_record`](../struct.Reader.html#method.read_record)\ninstead of `read_byte_record`. This will give you easy access to Rust strings\nat the cost of UTF-8 validation but *without* the cost of allocating a new\n`StringRecord` for every record.\n\n## Serde and zero allocation\n\nIn this section, we are going to briefly examine how we use Serde and what we\ncan do to speed it up. The key optimization we'll want to make is to---you\nguessed it---amortize allocation.\n\nAs with the previous section, let's start with a simple baseline based off an\nexample using Serde in a previous section:\n\n```no_run\n//tutorial-perf-serde-01.rs\nuse std::error::Error;\nuse std::io;\nuse std::process;\n\nuse serde::Deserialize;\n\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record {\n    country: String,\n    city: String,\n    accent_city: String,\n    region: String,\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n\nfn run() -> Result<u64, Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n\n    let mut count = 0;\n    for result in rdr.deserialize() {\n        let record: Record = result?;\n        if record.country == \"us\" && record.region == \"MA\" {\n            count += 1;\n        }\n    }\n    Ok(count)\n}\n\nfn main() {\n    match run() {\n        Ok(count) => {\n            println!(\"{}\", count);\n        }\n        Err(err) => {\n            println!(\"{}\", err);\n            process::exit(1);\n        }\n    }\n}\n```\n\nNow compile and run this program:\n\n```text\n$ cargo build --release\n$ ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m1.381s\nuser    0m1.367s\nsys     0m0.013s\n```\n\nThe first thing you might notice is that this is quite a bit slower than our\nprograms in the previous section. This is because deserializing each record\nhas a certain amount of overhead to it. In particular, some of the fields need\nto be parsed as integers or floating point numbers, which isn't free. However,\nthere is hope yet, because we can speed up this program!\n\nOur first attempt to speed up the program will be to amortize allocation. Doing\nthis with Serde is a bit trickier than before, because we need to change our\n`Record` type and use the manual deserialization API. Let's see what that looks\nlike:\n\n```no_run\n//tutorial-perf-serde-02.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\n# use serde::Deserialize;\n#\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record<'a> {\n    country: &'a str,\n    city: &'a str,\n    accent_city: &'a str,\n    region: &'a str,\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n\nfn run() -> Result<u64, Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    let mut raw_record = csv::StringRecord::new();\n    let headers = rdr.headers()?.clone();\n\n    let mut count = 0;\n    while rdr.read_record(&mut raw_record)? {\n        let record: Record = raw_record.deserialize(Some(&headers))?;\n        if record.country == \"us\" && record.region == \"MA\" {\n            count += 1;\n        }\n    }\n    Ok(count)\n}\n#\n# fn main() {\n#     match run() {\n#         Ok(count) => {\n#             println!(\"{}\", count);\n#         }\n#         Err(err) => {\n#             println!(\"{}\", err);\n#             process::exit(1);\n#         }\n#     }\n# }\n```\n\nCompile and run:\n\n```text\n$ cargo build --release\n$ ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m1.055s\nuser    0m1.040s\nsys     0m0.013s\n```\n\nThis corresponds to an approximately 24% increase in performance. To achieve\nthis, we had to make two important changes.\n\nThe first was to make our `Record` type contain `&str` fields instead of\n`String` fields. If you recall from a previous section, `&str` is a *borrowed*\nstring where a `String` is an *owned* string. A borrowed string points to\na already existing allocation where as a `String` always implies a new\nallocation. In this case, our `&str` is borrowing from the CSV record itself.\n\nThe second change we had to make was to stop using the\n[`Reader::deserialize`](../struct.Reader.html#method.deserialize)\niterator, and instead deserialize our record into a `StringRecord` explicitly\nand then use the\n[`StringRecord::deserialize`](../struct.StringRecord.html#method.deserialize)\nmethod to deserialize a single record.\n\nThe second change is a bit tricky, because in order for it to work, our\n`Record` type needs to borrow from the data inside the `StringRecord`. That\nmeans that our `Record` value cannot outlive the `StringRecord` that it was\ncreated from. Since we overwrite the same `StringRecord` on each iteration\n(in order to amortize allocation), that means our `Record` value must evaporate\nbefore the next iteration of the loop. Indeed, the compiler will enforce this!\n\nThere is one more optimization we can make: remove UTF-8 validation. In\ngeneral, this means using `&[u8]` instead of `&str` and `ByteRecord` instead\nof `StringRecord`:\n\n```no_run\n//tutorial-perf-serde-03.rs\n# use std::error::Error;\n# use std::io;\n# use std::process;\n#\n# use serde::Deserialize;\n#\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Record<'a> {\n    country: &'a [u8],\n    city: &'a [u8],\n    accent_city: &'a [u8],\n    region: &'a [u8],\n    population: Option<u64>,\n    latitude: f64,\n    longitude: f64,\n}\n\nfn run() -> Result<u64, Box<dyn Error>> {\n    let mut rdr = csv::Reader::from_reader(io::stdin());\n    let mut raw_record = csv::ByteRecord::new();\n    let headers = rdr.byte_headers()?.clone();\n\n    let mut count = 0;\n    while rdr.read_byte_record(&mut raw_record)? {\n        let record: Record = raw_record.deserialize(Some(&headers))?;\n        if record.country == b\"us\" && record.region == b\"MA\" {\n            count += 1;\n        }\n    }\n    Ok(count)\n}\n#\n# fn main() {\n#     match run() {\n#         Ok(count) => {\n#             println!(\"{}\", count);\n#         }\n#         Err(err) => {\n#             println!(\"{}\", err);\n#             process::exit(1);\n#         }\n#     }\n# }\n```\n\nCompile and run:\n\n```text\n$ cargo build --release\n$ ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m0.873s\nuser    0m0.850s\nsys     0m0.023s\n```\n\nThis corresponds to a 17% increase over the previous example and a 37% increase\nover the first example.\n\nIn sum, Serde parsing is still quite fast, but will generally not be the\nfastest way to parse CSV since it necessarily needs to do more work.\n\n## CSV parsing without the standard library\n\nIn this section, we will explore a niche use case: parsing CSV without the\nstandard library. While the `csv` crate itself requires the standard library,\nthe underlying parser is actually part of the\n[`csv-core`](https://docs.rs/csv-core)\ncrate, which does not depend on the standard library. The downside of not\ndepending on the standard library is that CSV parsing becomes a lot more\ninconvenient.\n\nThe `csv-core` crate is structured similarly to the `csv` crate. There is a\n[`Reader`](../../csv_core/struct.Reader.html)\nand a\n[`Writer`](../../csv_core/struct.Writer.html),\nas well as corresponding builders\n[`ReaderBuilder`](../../csv_core/struct.ReaderBuilder.html)\nand\n[`WriterBuilder`](../../csv_core/struct.WriterBuilder.html).\nThe `csv-core` crate has no record types or iterators. Instead, CSV data\ncan either be read one field at a time or one record at a time. In this\nsection, we'll focus on reading a field at a time since it is simpler, but it\nis generally faster to read a record at a time since it does more work per\nfunction call.\n\nIn keeping with this section on performance, let's write a program using only\n`csv-core` that counts the number of records in the state of Massachusetts.\n\n(Note that we unfortunately use the standard library in this example even\nthough `csv-core` doesn't technically require it. We do this for convenient\naccess to I/O, which would be harder without the standard library.)\n\n```no_run\n//tutorial-perf-core-01.rs\nuse std::io::{self, Read};\nuse std::process;\n\nuse csv_core::{Reader, ReadFieldResult};\n\nfn run(mut data: &[u8]) -> Option<u64> {\n    let mut rdr = Reader::new();\n\n    // Count the number of records in Massachusetts.\n    let mut count = 0;\n    // Indicates the current field index. Reset to 0 at start of each record.\n    let mut fieldidx = 0;\n    // True when the current record is in the United States.\n    let mut inus = false;\n    // Buffer for field data. Must be big enough to hold the largest field.\n    let mut field = [0; 1024];\n    loop {\n        // Attempt to incrementally read the next CSV field.\n        let (result, nread, nwrite) = rdr.read_field(data, &mut field);\n        // nread is the number of bytes read from our input. We should never\n        // pass those bytes to read_field again.\n        data = &data[nread..];\n        // nwrite is the number of bytes written to the output buffer `field`.\n        // The contents of the buffer after this point is unspecified.\n        let field = &field[..nwrite];\n\n        match result {\n            // We don't need to handle this case because we read all of the\n            // data up front. If we were reading data incrementally, then this\n            // would be a signal to read more.\n            ReadFieldResult::InputEmpty => {}\n            // If we get this case, then we found a field that contains more\n            // than 1024 bytes. We keep this example simple and just fail.\n            ReadFieldResult::OutputFull => {\n                return None;\n            }\n            // This case happens when we've successfully read a field. If the\n            // field is the last field in a record, then `record_end` is true.\n            ReadFieldResult::Field { record_end } => {\n                if fieldidx == 0 && field == b\"us\" {\n                    inus = true;\n                } else if inus && fieldidx == 3 && field == b\"MA\" {\n                    count += 1;\n                }\n                if record_end {\n                    fieldidx = 0;\n                    inus = false;\n                } else {\n                    fieldidx += 1;\n                }\n            }\n            // This case happens when the CSV reader has successfully exhausted\n            // all input.\n            ReadFieldResult::End => {\n                break;\n            }\n        }\n    }\n    Some(count)\n}\n\nfn main() {\n    // Read the entire contents of stdin up front.\n    let mut data = vec![];\n    if let Err(err) = io::stdin().read_to_end(&mut data) {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n    match run(&data) {\n        None => {\n            println!(\"error: could not count records, buffer too small\");\n            process::exit(1);\n        }\n        Some(count) => {\n            println!(\"{}\", count);\n        }\n    }\n}\n```\n\nAnd compile and run it:\n\n```text\n$ cargo build --release\n$ time ./target/release/csvtutor < worldcitiespop.csv\n2176\n\nreal    0m0.572s\nuser    0m0.513s\nsys     0m0.057s\n```\n\nThis isn't as fast as some of our previous examples where we used the `csv`\ncrate to read into a `StringRecord` or a `ByteRecord`. This is mostly because\nthis example reads a field at a time, which incurs more overhead than reading a\nrecord at a time. To fix this, you would want to use the\n[`Reader::read_record`](../../csv_core/struct.Reader.html#method.read_record)\nmethod instead, which is defined on `csv_core::Reader`.\n\nThe other thing to notice here is that the example is considerably longer than\nthe other examples. This is because we need to do more book keeping to keep\ntrack of which field we're reading and how much data we've already fed to the\nreader. There are basically two reasons to use the `csv_core` crate:\n\n1. If you're in an environment where the standard library is not usable.\n2. If you wanted to build your own csv-like library, you could build it on top\n   of `csv-core`.\n\n# Closing thoughts\n\nCongratulations on making it to the end! It seems incredible that one could\nwrite so many words on something as basic as CSV parsing. I wanted this\nguide to be accessible not only to Rust beginners, but to inexperienced\nprogrammers as well. My hope is that the large number of examples will help\npush you in the right direction.\n\nWith that said, here are a few more things you might want to look at:\n\n* The [API documentation for the `csv` crate](../index.html) documents all\n  facets of the library, and is itself littered with even more examples.\n* The [`csv-index` crate](https://docs.rs/csv-index) provides data structures\n  that can index CSV data that are amenable to writing to disk. (This library\n  is still a work in progress.)\n* The [`xsv` command line tool](https://github.com/BurntSushi/xsv) is a high\n  performance CSV swiss army knife. It can slice, select, search, sort, join,\n  concatenate, index, format and compute statistics on arbitrary CSV data. Give\n  it a try!\n\n*/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/tutorial.rs","byte_start":249241,"byte_end":335444,"line_start":1,"line_end":2520,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336086,"byte_end":336099,"line_start":23,"line_end":23,"column_start":12,"column_end":25},"name":"WriterBuilder","qualname":"::writer::WriterBuilder","value":"WriterBuilder {  }","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381}],"decl_id":null,"docs":" Builds a CSV writer with various configuration knobs.","sig":null,"attributes":[{"value":"/ Builds a CSV writer with various configuration knobs.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":335834,"byte_end":335891,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":335892,"byte_end":335895,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This builder can be used to tweak the field delimiter, record terminator","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":335896,"byte_end":335972,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ and more. Once a CSV `Writer` is built, its configuration cannot be","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":335973,"byte_end":336044,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ changed.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336045,"byte_end":336057,"line_start":21,"line_end":21,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337197,"byte_end":337200,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<WriterBuilder>::new","value":"fn () -> WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder for configuring CSV writing.","sig":null,"attributes":[{"value":"/ Create a new builder for configuring CSV writing.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336486,"byte_end":336539,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336544,"byte_end":336547,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ To convert a builder into a writer, call one of the methods starting","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336552,"byte_end":336624,"line_start":44,"line_end":44,"column_start":5,"column_end":77}},{"value":"/ with `from_`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336629,"byte_end":336646,"line_start":45,"line_end":45,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336651,"byte_end":336654,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336659,"byte_end":336672,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336677,"byte_end":336680,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336685,"byte_end":336692,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336697,"byte_end":336723,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336728,"byte_end":336755,"line_start":51,"line_end":51,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336760,"byte_end":336763,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336768,"byte_end":336807,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336812,"byte_end":336860,"line_start":54,"line_end":54,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new().from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336865,"byte_end":336928,"line_start":55,"line_end":55,"column_start":5,"column_end":68}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336933,"byte_end":336977,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336982,"byte_end":337026,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337031,"byte_end":337034,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337039,"byte_end":337096,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337101,"byte_end":337144,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337149,"byte_end":337163,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337168,"byte_end":337173,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337178,"byte_end":337185,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337998,"byte_end":338007,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"from_path","qualname":"<WriterBuilder>::from_path","value":"fn <P> (&self, path: P) -> Result<Writer<File>>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer from this configuration that writes data to the\n given file path. The file is truncated if it already exists.","sig":null,"attributes":[{"value":"/ Build a CSV writer from this configuration that writes data to the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337266,"byte_end":337336,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ given file path. The file is truncated if it already exists.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337341,"byte_end":337405,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337410,"byte_end":337413,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If there was a problem opening the file at the given path, then this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337418,"byte_end":337490,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ returns the corresponding error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337495,"byte_end":337531,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337536,"byte_end":337539,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337544,"byte_end":337557,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337562,"byte_end":337565,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337570,"byte_end":337583,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337588,"byte_end":337614,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337619,"byte_end":337646,"line_start":78,"line_end":78,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337651,"byte_end":337654,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337659,"byte_end":337698,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337703,"byte_end":337751,"line_start":81,"line_end":81,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new().from_path(\"foo.csv\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337756,"byte_end":337821,"line_start":82,"line_end":82,"column_start":5,"column_end":70}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337826,"byte_end":337870,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337875,"byte_end":337919,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/     wtr.flush()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337924,"byte_end":337945,"line_start":85,"line_end":85,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337950,"byte_end":337964,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337969,"byte_end":337974,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":337979,"byte_end":337986,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338900,"byte_end":338911,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"from_writer","qualname":"<WriterBuilder>::from_writer","value":"fn <W> (&self, wtr: W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer from this configuration that writes data to `wtr`.","sig":null,"attributes":[{"value":"/ Build a CSV writer from this configuration that writes data to `wtr`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338128,"byte_end":338201,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338206,"byte_end":338209,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that the CSV writer is buffered automatically, so you should not","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338214,"byte_end":338287,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ wrap `wtr` in a buffered writer like `io::BufWriter`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338292,"byte_end":338349,"line_start":96,"line_end":96,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338354,"byte_end":338357,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338362,"byte_end":338375,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338380,"byte_end":338383,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338388,"byte_end":338395,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338400,"byte_end":338426,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338431,"byte_end":338458,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338463,"byte_end":338466,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338471,"byte_end":338510,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338515,"byte_end":338563,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new().from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338568,"byte_end":338631,"line_start":106,"line_end":106,"column_start":5,"column_end":68}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338636,"byte_end":338680,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338685,"byte_end":338729,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338734,"byte_end":338737,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338742,"byte_end":338799,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338804,"byte_end":338847,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338852,"byte_end":338866,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338871,"byte_end":338876,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338881,"byte_end":338888,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339686,"byte_end":339695,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<WriterBuilder>::delimiter","value":"fn (&mut self, delimiter: u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The field delimiter to use when writing CSV.","sig":null,"attributes":[{"value":"/ The field delimiter to use when writing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":338998,"byte_end":339046,"line_start":119,"line_end":119,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339051,"byte_end":339054,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The default is `b','`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339059,"byte_end":339085,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339090,"byte_end":339093,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339098,"byte_end":339111,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339116,"byte_end":339119,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339124,"byte_end":339131,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339136,"byte_end":339162,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339167,"byte_end":339194,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339199,"byte_end":339202,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339207,"byte_end":339246,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339251,"byte_end":339299,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339304,"byte_end":339346,"line_start":131,"line_end":131,"column_start":5,"column_end":47}},{"value":"/         .delimiter(b';')","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339351,"byte_end":339379,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339384,"byte_end":339417,"line_start":133,"line_end":133,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339422,"byte_end":339466,"line_start":134,"line_end":134,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339471,"byte_end":339515,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339520,"byte_end":339523,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339528,"byte_end":339585,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a;b;c\\nx;y;z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339590,"byte_end":339633,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339638,"byte_end":339652,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339657,"byte_end":339662,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339667,"byte_end":339674,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342718,"byte_end":342729,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"has_headers","qualname":"<WriterBuilder>::has_headers","value":"fn (&mut self, yes: bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether to write a header row before writing any other row.","sig":null,"attributes":[{"value":"/ Whether to write a header row before writing any other row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339813,"byte_end":339876,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339881,"byte_end":339884,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ When this is enabled and the `serialize` method is used to write data","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339889,"byte_end":339962,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ with something that contains field names (i.e., a struct), then a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":339967,"byte_end":340036,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ header row is written containing the field names before any other row","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340041,"byte_end":340114,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ is written.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340119,"byte_end":340134,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340139,"byte_end":340142,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This option has no effect when using other methods to write rows. That","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340147,"byte_end":340221,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ is, if you don't use `serialize`, then you must write your header row","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340226,"byte_end":340299,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ explicitly if you want a header row.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340304,"byte_end":340344,"line_start":156,"line_end":156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340349,"byte_end":340352,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is enabled by default.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340357,"byte_end":340388,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340393,"byte_end":340396,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example: with headers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340401,"byte_end":340428,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340433,"byte_end":340436,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This shows how the header will be automatically written from the field","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340441,"byte_end":340515,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ names of a struct.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340520,"byte_end":340542,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340547,"byte_end":340550,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340555,"byte_end":340562,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340567,"byte_end":340593,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340598,"byte_end":340601,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340606,"byte_end":340633,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ use serde::Serialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340638,"byte_end":340663,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340668,"byte_end":340671,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340676,"byte_end":340700,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/ struct Row<'a> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340705,"byte_end":340725,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/     city: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340730,"byte_end":340752,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/     country: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340757,"byte_end":340782,"line_start":174,"line_end":174,"column_start":5,"column_end":30}},{"value":"/     // Serde allows us to name our headers exactly,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340787,"byte_end":340842,"line_start":175,"line_end":175,"column_start":5,"column_end":60}},{"value":"/     // even if they don't match our struct field names.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340847,"byte_end":340906,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/     #[serde(rename = \"popcount\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340911,"byte_end":340948,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340953,"byte_end":340977,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340982,"byte_end":340987,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":340992,"byte_end":340995,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341000,"byte_end":341039,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341044,"byte_end":341092,"line_start":182,"line_end":182,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new().from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341097,"byte_end":341160,"line_start":183,"line_end":183,"column_start":5,"column_end":68}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341165,"byte_end":341192,"line_start":184,"line_end":184,"column_start":5,"column_end":32}},{"value":"/         city: \"Boston\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341197,"byte_end":341224,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/         country: \"United States\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341229,"byte_end":341266,"line_start":186,"line_end":186,"column_start":5,"column_end":42}},{"value":"/         population: 4628910,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341271,"byte_end":341303,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341308,"byte_end":341320,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341325,"byte_end":341352,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/         city: \"Concord\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341357,"byte_end":341385,"line_start":190,"line_end":190,"column_start":5,"column_end":33}},{"value":"/         country: \"United States\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341390,"byte_end":341427,"line_start":191,"line_end":191,"column_start":5,"column_end":42}},{"value":"/         population: 42695,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341432,"byte_end":341462,"line_start":192,"line_end":192,"column_start":5,"column_end":35}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341467,"byte_end":341479,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341484,"byte_end":341487,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341492,"byte_end":341549,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341554,"byte_end":341581,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341586,"byte_end":341611,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341616,"byte_end":341648,"line_start":198,"line_end":198,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341653,"byte_end":341684,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/ \");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341689,"byte_end":341696,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341701,"byte_end":341715,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341720,"byte_end":341725,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341730,"byte_end":341737,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341742,"byte_end":341745,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example: without headers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341750,"byte_end":341780,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341785,"byte_end":341788,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This shows that serializing things that aren't structs (in this case,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341793,"byte_end":341866,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ a tuple struct) won't result in a header row being written. This means","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341871,"byte_end":341945,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ you usually don't need to set `has_headers(false)` unless you","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":341950,"byte_end":342015,"line_start":209,"line_end":209,"column_start":5,"column_end":70}},{"value":"/ explicitly want to both write custom headers and serialize structs.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342020,"byte_end":342091,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342096,"byte_end":342099,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342104,"byte_end":342111,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342116,"byte_end":342142,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342147,"byte_end":342174,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342179,"byte_end":342182,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342187,"byte_end":342226,"line_start":216,"line_end":216,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342231,"byte_end":342279,"line_start":217,"line_end":217,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new().from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342284,"byte_end":342347,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/     wtr.serialize((\"Boston\", \"United States\", 4628910))?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342352,"byte_end":342413,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/     wtr.serialize((\"Concord\", \"United States\", 42695))?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342418,"byte_end":342478,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342483,"byte_end":342486,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342491,"byte_end":342548,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342553,"byte_end":342580,"line_start":223,"line_end":223,"column_start":5,"column_end":32}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342585,"byte_end":342617,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342622,"byte_end":342653,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"/ \");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342658,"byte_end":342665,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342670,"byte_end":342684,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342689,"byte_end":342694,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342699,"byte_end":342706,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344687,"byte_end":344695,"line_start":288,"line_end":288,"column_start":12,"column_end":20},"name":"flexible","qualname":"<WriterBuilder>::flexible","value":"fn (&mut self, yes: bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether the number of fields in records is allowed to change or not.","sig":null,"attributes":[{"value":"/ Whether the number of fields in records is allowed to change or not.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342832,"byte_end":342904,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342909,"byte_end":342912,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ When disabled (which is the default), writing CSV data will return an","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342917,"byte_end":342990,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ error if a record is written with a number of fields different from the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":342995,"byte_end":343070,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ number of fields written in a previous record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343075,"byte_end":343125,"line_start":239,"line_end":239,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343130,"byte_end":343133,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ When enabled, this error checking is turned off.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343138,"byte_end":343190,"line_start":241,"line_end":241,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343195,"byte_end":343198,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example: writing flexible records","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343203,"byte_end":343242,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343247,"byte_end":343250,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343255,"byte_end":343262,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343267,"byte_end":343293,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343298,"byte_end":343325,"line_start":247,"line_end":247,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343330,"byte_end":343333,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343338,"byte_end":343377,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343382,"byte_end":343430,"line_start":250,"line_end":250,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343435,"byte_end":343477,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/         .flexible(true)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343482,"byte_end":343509,"line_start":252,"line_end":252,"column_start":5,"column_end":32}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343514,"byte_end":343547,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"b\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343552,"byte_end":343591,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343596,"byte_end":343640,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343645,"byte_end":343648,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343653,"byte_end":343710,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343715,"byte_end":343756,"line_start":258,"line_end":258,"column_start":5,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343761,"byte_end":343775,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343780,"byte_end":343785,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343790,"byte_end":343797,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343802,"byte_end":343805,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example: error when `flexible` is disabled","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343810,"byte_end":343858,"line_start":263,"line_end":263,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343863,"byte_end":343866,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343871,"byte_end":343878,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343883,"byte_end":343909,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343914,"byte_end":343941,"line_start":267,"line_end":267,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343946,"byte_end":343949,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343954,"byte_end":343993,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":343998,"byte_end":344046,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344051,"byte_end":344093,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/         .flexible(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344098,"byte_end":344126,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344131,"byte_end":344164,"line_start":273,"line_end":273,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"b\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344169,"byte_end":344208,"line_start":274,"line_end":274,"column_start":5,"column_end":44}},{"value":"/     let err = wtr.write_record(&[\"x\", \"y\", \"z\"]).unwrap_err();","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344213,"byte_end":344279,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/     match *err.kind() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344284,"byte_end":344311,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/         csv::ErrorKind::UnequalLengths { expected_len, len, .. } => {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344316,"byte_end":344389,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/             assert_eq!(expected_len, 2);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344394,"byte_end":344438,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(len, 3);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344443,"byte_end":344478,"line_start":279,"line_end":279,"column_start":5,"column_end":40}},{"value":"/         }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344483,"byte_end":344496,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/         ref wrong => {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344501,"byte_end":344527,"line_start":281,"line_end":281,"column_start":5,"column_end":31}},{"value":"/             panic!(\"expected UnequalLengths but got {:?}\", wrong);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344532,"byte_end":344602,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/         }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344607,"byte_end":344620,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344625,"byte_end":344634,"line_start":284,"line_end":284,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344639,"byte_end":344653,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344658,"byte_end":344663,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344668,"byte_end":344675,"line_start":287,"line_end":287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345793,"byte_end":345803,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"terminator","qualname":"<WriterBuilder>::terminator","value":"fn (&mut self, term: Terminator) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The record terminator to use when writing CSV.","sig":null,"attributes":[{"value":"/ The record terminator to use when writing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344795,"byte_end":344845,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344850,"byte_end":344853,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ A record terminator can be any single byte. The default is `\\n`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344858,"byte_end":344926,"line_start":295,"line_end":295,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344931,"byte_end":344934,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Note that RFC 4180 specifies that record terminators should be `\\r\\n`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":344939,"byte_end":345013,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ To use `\\r\\n`, use the special `Terminator::CRLF` value.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345018,"byte_end":345078,"line_start":298,"line_end":298,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345083,"byte_end":345086,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example: CRLF","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345091,"byte_end":345110,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345115,"byte_end":345118,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This shows how to use RFC 4180 compliant record terminators.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345123,"byte_end":345187,"line_start":302,"line_end":302,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345192,"byte_end":345195,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345200,"byte_end":345207,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345212,"byte_end":345238,"line_start":305,"line_end":305,"column_start":5,"column_end":31}},{"value":"/ use csv::{Terminator, WriterBuilder};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345243,"byte_end":345284,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345289,"byte_end":345292,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345297,"byte_end":345336,"line_start":308,"line_end":308,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345341,"byte_end":345389,"line_start":309,"line_end":309,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345394,"byte_end":345436,"line_start":310,"line_end":310,"column_start":5,"column_end":47}},{"value":"/         .terminator(Terminator::CRLF)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345441,"byte_end":345482,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345487,"byte_end":345520,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345525,"byte_end":345569,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345574,"byte_end":345618,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345623,"byte_end":345626,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345631,"byte_end":345688,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\r\\nx,y,z\\r\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345693,"byte_end":345740,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345745,"byte_end":345759,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345764,"byte_end":345769,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345774,"byte_end":345781,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347814,"byte_end":347825,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"quote_style","qualname":"<WriterBuilder>::quote_style","value":"fn (&mut self, style: QuoteStyle) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quoting style to use when writing CSV.","sig":null,"attributes":[{"value":"/ The quoting style to use when writing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345930,"byte_end":345976,"line_start":326,"line_end":326,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345981,"byte_end":345984,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ By default, this is set to `QuoteStyle::Necessary`, which will only","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":345989,"byte_end":346060,"line_start":328,"line_end":328,"column_start":5,"column_end":76}},{"value":"/ use quotes when they are necessary to preserve the integrity of data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346065,"byte_end":346138,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346143,"byte_end":346146,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Note that unless the quote style is set to `Never`, an empty field is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346151,"byte_end":346224,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ quoted if it is the only field in a record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346229,"byte_end":346276,"line_start":332,"line_end":332,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346281,"byte_end":346284,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Example: non-numeric quoting","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346289,"byte_end":346323,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346328,"byte_end":346331,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This shows how to quote non-numeric fields only.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346336,"byte_end":346388,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346393,"byte_end":346396,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346401,"byte_end":346408,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346413,"byte_end":346439,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ use csv::{QuoteStyle, WriterBuilder};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346444,"byte_end":346485,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346490,"byte_end":346493,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346498,"byte_end":346537,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346542,"byte_end":346590,"line_start":343,"line_end":343,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346595,"byte_end":346637,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/         .quote_style(QuoteStyle::NonNumeric)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346642,"byte_end":346690,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346695,"byte_end":346728,"line_start":346,"line_end":346,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"5\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346733,"byte_end":346777,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"3.14\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346782,"byte_end":346829,"line_start":348,"line_end":348,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346834,"byte_end":346837,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346842,"byte_end":346899,"line_start":350,"line_end":350,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"\\\"a\\\",5,\\\"c\\\"\\n3.14,\\\"y\\\",\\\"z\\\"\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346904,"byte_end":346966,"line_start":351,"line_end":351,"column_start":5,"column_end":67}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346971,"byte_end":346985,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":346990,"byte_end":346995,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347000,"byte_end":347007,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347012,"byte_end":347015,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Example: never quote","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347020,"byte_end":347046,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347051,"byte_end":347054,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This shows how the CSV writer can be made to never write quotes, even","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347059,"byte_end":347132,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ if it sacrifices the integrity of the data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347137,"byte_end":347184,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347189,"byte_end":347192,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347197,"byte_end":347204,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347209,"byte_end":347235,"line_start":362,"line_end":362,"column_start":5,"column_end":31}},{"value":"/ use csv::{QuoteStyle, WriterBuilder};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347240,"byte_end":347281,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347286,"byte_end":347289,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347294,"byte_end":347333,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347338,"byte_end":347386,"line_start":366,"line_end":366,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347391,"byte_end":347433,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/         .quote_style(QuoteStyle::Never)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347438,"byte_end":347481,"line_start":368,"line_end":368,"column_start":5,"column_end":48}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347486,"byte_end":347519,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"foo\\nbar\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347524,"byte_end":347575,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     wtr.write_record(&[\"g\\\"h\\\"i\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347580,"byte_end":347630,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347635,"byte_end":347638,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347643,"byte_end":347700,"line_start":373,"line_end":373,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,foo\\nbar,c\\ng\\\"h\\\"i,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347705,"byte_end":347761,"line_start":374,"line_end":374,"column_start":5,"column_end":61}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347766,"byte_end":347780,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347785,"byte_end":347790,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347795,"byte_end":347802,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348680,"byte_end":348685,"line_start":406,"line_end":406,"column_start":12,"column_end":17},"name":"quote","qualname":"<WriterBuilder>::quote","value":"fn (&mut self, quote: u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quote character to use when writing CSV.","sig":null,"attributes":[{"value":"/ The quote character to use when writing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":347955,"byte_end":348003,"line_start":383,"line_end":383,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348008,"byte_end":348011,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The default is `b'\"'`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348016,"byte_end":348042,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348047,"byte_end":348050,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348055,"byte_end":348068,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348073,"byte_end":348076,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348081,"byte_end":348088,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348093,"byte_end":348119,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348124,"byte_end":348151,"line_start":391,"line_end":391,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348156,"byte_end":348159,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348164,"byte_end":348203,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348208,"byte_end":348256,"line_start":394,"line_end":394,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348261,"byte_end":348303,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/         .quote(b'\\'')","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348308,"byte_end":348333,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348338,"byte_end":348371,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"foo\\nbar\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348376,"byte_end":348427,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/     wtr.write_record(&[\"g'h'i\", \"y\\\"y\\\"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348432,"byte_end":348486,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348491,"byte_end":348494,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348499,"byte_end":348556,"line_start":401,"line_end":401,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,'foo\\nbar',c\\n'g''h''i',y\\\"y\\\"y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348561,"byte_end":348627,"line_start":402,"line_end":402,"column_start":5,"column_end":71}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348632,"byte_end":348646,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348651,"byte_end":348656,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348661,"byte_end":348668,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349592,"byte_end":349604,"line_start":435,"line_end":435,"column_start":12,"column_end":24},"name":"double_quote","qualname":"<WriterBuilder>::double_quote","value":"fn (&mut self, yes: bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable double quote escapes.","sig":null,"attributes":[{"value":"/ Enable double quote escapes.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348791,"byte_end":348823,"line_start":411,"line_end":411,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348828,"byte_end":348831,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ This is enabled by default, but it may be disabled. When disabled,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348836,"byte_end":348906,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/ quotes in field data are escaped instead of doubled.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348911,"byte_end":348967,"line_start":414,"line_end":414,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348972,"byte_end":348975,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348980,"byte_end":348993,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":348998,"byte_end":349001,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349006,"byte_end":349013,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349018,"byte_end":349044,"line_start":419,"line_end":419,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349049,"byte_end":349076,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349081,"byte_end":349084,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349089,"byte_end":349128,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349133,"byte_end":349181,"line_start":423,"line_end":423,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349186,"byte_end":349228,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/         .double_quote(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349233,"byte_end":349265,"line_start":425,"line_end":425,"column_start":5,"column_end":37}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349270,"byte_end":349303,"line_start":426,"line_end":426,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"foo\\\"bar\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349308,"byte_end":349359,"line_start":427,"line_end":427,"column_start":5,"column_end":56}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349364,"byte_end":349408,"line_start":428,"line_end":428,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349413,"byte_end":349416,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349421,"byte_end":349478,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,\\\"foo\\\\\\\"bar\\\",c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349483,"byte_end":349539,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349544,"byte_end":349558,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349563,"byte_end":349568,"line_start":433,"line_end":433,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349573,"byte_end":349580,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350710,"byte_end":350716,"line_start":468,"line_end":468,"column_start":12,"column_end":18},"name":"escape","qualname":"<WriterBuilder>::escape","value":"fn (&mut self, escape: u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The escape character to use when writing CSV.","sig":null,"attributes":[{"value":"/ The escape character to use when writing CSV.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349715,"byte_end":349764,"line_start":440,"line_end":440,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349769,"byte_end":349772,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ In some variants of CSV, quotes are escaped using a special escape","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349777,"byte_end":349847,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ character like `\\` (instead of escaping quotes by doubling them).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349852,"byte_end":349921,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349926,"byte_end":349929,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ By default, writing these idiosyncratic escapes is disabled, and is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":349934,"byte_end":350005,"line_start":445,"line_end":445,"column_start":5,"column_end":76}},{"value":"/ only used when `double_quote` is disabled.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350010,"byte_end":350056,"line_start":446,"line_end":446,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350061,"byte_end":350064,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350069,"byte_end":350082,"line_start":448,"line_end":448,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350087,"byte_end":350090,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350095,"byte_end":350102,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350107,"byte_end":350133,"line_start":451,"line_end":451,"column_start":5,"column_end":31}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350138,"byte_end":350165,"line_start":452,"line_end":452,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350170,"byte_end":350173,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350178,"byte_end":350217,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350222,"byte_end":350270,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350275,"byte_end":350317,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/         .double_quote(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350322,"byte_end":350354,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/         .escape(b'$')","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350359,"byte_end":350384,"line_start":458,"line_end":458,"column_start":5,"column_end":30}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350389,"byte_end":350422,"line_start":459,"line_end":459,"column_start":5,"column_end":38}},{"value":"/     wtr.write_record(&[\"a\", \"foo\\\"bar\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350427,"byte_end":350478,"line_start":460,"line_end":460,"column_start":5,"column_end":56}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350483,"byte_end":350527,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350532,"byte_end":350535,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350540,"byte_end":350597,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,\\\"foo$\\\"bar\\\",c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350602,"byte_end":350657,"line_start":464,"line_end":464,"column_start":5,"column_end":60}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350662,"byte_end":350676,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350681,"byte_end":350686,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350691,"byte_end":350698,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350962,"byte_end":350977,"line_start":475,"line_end":475,"column_start":12,"column_end":27},"name":"buffer_capacity","qualname":"<WriterBuilder>::buffer_capacity","value":"fn (&mut self, capacity: usize) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the capacity (in bytes) of the internal buffer used in the CSV\n writer. This defaults to a reasonable setting.\n","sig":null,"attributes":[{"value":"/ Set the capacity (in bytes) of the internal buffer used in the CSV","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350825,"byte_end":350895,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/ writer. This defaults to a reasonable setting.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":350900,"byte_end":350950,"line_start":474,"line_end":474,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352348,"byte_end":352354,"line_start":508,"line_end":508,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389}],"decl_id":null,"docs":" A already configured CSV writer.","sig":null,"attributes":[{"value":"/ A already configured CSV writer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351086,"byte_end":351122,"line_start":481,"line_end":481,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351123,"byte_end":351126,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ A CSV writer takes as input Rust values and writes those values in a valid","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351127,"byte_end":351205,"line_start":483,"line_end":483,"column_start":1,"column_end":79}},{"value":"/ CSV format as output.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351206,"byte_end":351231,"line_start":484,"line_end":484,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351232,"byte_end":351235,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ While CSV writing is considerably easier than parsing CSV, a proper writer","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351236,"byte_end":351314,"line_start":486,"line_end":486,"column_start":1,"column_end":79}},{"value":"/ will do a number of things for you:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351315,"byte_end":351354,"line_start":487,"line_end":487,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351355,"byte_end":351358,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ 1. Quote fields when necessary.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351359,"byte_end":351394,"line_start":489,"line_end":489,"column_start":1,"column_end":36}},{"value":"/ 2. Check that all records have the same number of fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351395,"byte_end":351456,"line_start":490,"line_end":490,"column_start":1,"column_end":62}},{"value":"/ 3. Write records with a single empty field correctly.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351457,"byte_end":351514,"line_start":491,"line_end":491,"column_start":1,"column_end":58}},{"value":"/ 4. Automatically serialize normal Rust types to CSV records. When that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351515,"byte_end":351589,"line_start":492,"line_end":492,"column_start":1,"column_end":75}},{"value":"/    type is a struct, a header row is automatically written corresponding","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351590,"byte_end":351666,"line_start":493,"line_end":493,"column_start":1,"column_end":77}},{"value":"/    to the fields of that struct.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351667,"byte_end":351703,"line_start":494,"line_end":494,"column_start":1,"column_end":37}},{"value":"/ 5. Use buffering intelligently and otherwise avoid allocation. (This means","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351704,"byte_end":351782,"line_start":495,"line_end":495,"column_start":1,"column_end":79}},{"value":"/    that callers should not do their own buffering.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351783,"byte_end":351838,"line_start":496,"line_end":496,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351839,"byte_end":351842,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ All of the above can be configured using a","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351843,"byte_end":351889,"line_start":498,"line_end":498,"column_start":1,"column_end":47}},{"value":"/ [`WriterBuilder`](struct.WriterBuilder.html).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351890,"byte_end":351939,"line_start":499,"line_end":499,"column_start":1,"column_end":50}},{"value":"/ However, a `Writer` has a couple of convenience constructors (`from_path`","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":351940,"byte_end":352017,"line_start":500,"line_end":500,"column_start":1,"column_end":78}},{"value":"/ and `from_writer`) that use the default configuration.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352018,"byte_end":352076,"line_start":501,"line_end":501,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352077,"byte_end":352080,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ Note that the default configuration of a `Writer` uses `\\n` for record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352081,"byte_end":352155,"line_start":503,"line_end":503,"column_start":1,"column_end":75}},{"value":"/ terminators instead of `\\r\\n` as specified by RFC 4180. Use the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352156,"byte_end":352223,"line_start":504,"line_end":504,"column_start":1,"column_end":68}},{"value":"/ `terminator` method on `WriterBuilder` to set the terminator to `\\r\\n` if","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352224,"byte_end":352301,"line_start":505,"line_end":505,"column_start":1,"column_end":78}},{"value":"/ it's desired.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":352302,"byte_end":352319,"line_start":506,"line_end":506,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355072,"byte_end":355081,"line_start":591,"line_end":591,"column_start":12,"column_end":21},"name":"from_path","qualname":"<Writer<File>>::from_path","value":"fn <P> (path: P) -> Result<Writer<File>>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer with a default configuration that writes data to the\n given file path. The file is truncated if it already exists.","sig":null,"attributes":[{"value":"/ Build a CSV writer with a default configuration that writes data to the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354355,"byte_end":354430,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ given file path. The file is truncated if it already exists.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354435,"byte_end":354499,"line_start":571,"line_end":571,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354504,"byte_end":354507,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ If there was a problem opening the file at the given path, then this","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354512,"byte_end":354584,"line_start":573,"line_end":573,"column_start":5,"column_end":77}},{"value":"/ returns the corresponding error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354589,"byte_end":354625,"line_start":574,"line_end":574,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354630,"byte_end":354633,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354638,"byte_end":354651,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354656,"byte_end":354659,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354664,"byte_end":354677,"line_start":578,"line_end":578,"column_start":5,"column_end":18}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354682,"byte_end":354708,"line_start":579,"line_end":579,"column_start":5,"column_end":31}},{"value":"/ use csv::Writer;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354713,"byte_end":354733,"line_start":580,"line_end":580,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354738,"byte_end":354741,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354746,"byte_end":354785,"line_start":582,"line_end":582,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354790,"byte_end":354838,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_path(\"foo.csv\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354843,"byte_end":354895,"line_start":584,"line_end":584,"column_start":5,"column_end":57}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354900,"byte_end":354944,"line_start":585,"line_end":585,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354949,"byte_end":354993,"line_start":586,"line_end":586,"column_start":5,"column_end":49}},{"value":"/     wtr.flush()?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354998,"byte_end":355019,"line_start":587,"line_end":587,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355024,"byte_end":355038,"line_start":588,"line_end":588,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355043,"byte_end":355048,"line_start":589,"line_end":589,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355053,"byte_end":355060,"line_start":590,"line_end":590,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356599,"byte_end":356610,"line_start":640,"line_end":640,"column_start":12,"column_end":23},"name":"from_writer","qualname":"<Writer<W>>::from_writer","value":"fn (wtr: W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer with a default configuration that writes data to\n `wtr`.","sig":null,"attributes":[{"value":"/ Build a CSV writer with a default configuration that writes data to","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355834,"byte_end":355905,"line_start":617,"line_end":617,"column_start":5,"column_end":76}},{"value":"/ `wtr`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355910,"byte_end":355920,"line_start":618,"line_end":618,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355925,"byte_end":355928,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Note that the CSV writer is buffered automatically, so you should not","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355933,"byte_end":356006,"line_start":620,"line_end":620,"column_start":5,"column_end":78}},{"value":"/ wrap `wtr` in a buffered writer like `io::BufWriter`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356011,"byte_end":356068,"line_start":621,"line_end":621,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356073,"byte_end":356076,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356081,"byte_end":356094,"line_start":623,"line_end":623,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356099,"byte_end":356102,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356107,"byte_end":356114,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356119,"byte_end":356145,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/ use csv::Writer;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356150,"byte_end":356170,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356175,"byte_end":356178,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356183,"byte_end":356222,"line_start":629,"line_end":629,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356227,"byte_end":356275,"line_start":630,"line_end":630,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356280,"byte_end":356330,"line_start":631,"line_end":631,"column_start":5,"column_end":55}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356335,"byte_end":356379,"line_start":632,"line_end":632,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356384,"byte_end":356428,"line_start":633,"line_end":633,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356433,"byte_end":356436,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356441,"byte_end":356498,"line_start":635,"line_end":635,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356503,"byte_end":356546,"line_start":636,"line_end":636,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356551,"byte_end":356565,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356570,"byte_end":356575,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356580,"byte_end":356587,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364227,"byte_end":364236,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Writer<W>>::serialize","value":"fn <S> (&mut self, record: S) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a single record using Serde.","sig":null,"attributes":[{"value":"/ Serialize a single record using Serde.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356691,"byte_end":356733,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356738,"byte_end":356741,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356746,"byte_end":356759,"line_start":646,"line_end":646,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356764,"byte_end":356767,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This shows how to serialize normal Rust structs as CSV records. The","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356772,"byte_end":356843,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/ fields of the struct are used to write a header row automatically.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356848,"byte_end":356918,"line_start":649,"line_end":649,"column_start":5,"column_end":75}},{"value":"/ (Writing the header row automatically can be disabled by building the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":356923,"byte_end":356996,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ CSV writer with a [`WriterBuilder`](struct.WriterBuilder.html) and","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357001,"byte_end":357071,"line_start":651,"line_end":651,"column_start":5,"column_end":75}},{"value":"/ calling the `has_headers` method.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357076,"byte_end":357114,"line_start":652,"line_end":652,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357119,"byte_end":357122,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357127,"byte_end":357134,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357139,"byte_end":357165,"line_start":655,"line_end":655,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357170,"byte_end":357173,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ use csv::Writer;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357178,"byte_end":357198,"line_start":657,"line_end":657,"column_start":5,"column_end":25}},{"value":"/ use serde::Serialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357203,"byte_end":357228,"line_start":658,"line_end":658,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357233,"byte_end":357236,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357241,"byte_end":357265,"line_start":660,"line_end":660,"column_start":5,"column_end":29}},{"value":"/ struct Row<'a> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357270,"byte_end":357290,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/     city: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357295,"byte_end":357317,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/     country: &'a str,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357322,"byte_end":357347,"line_start":663,"line_end":663,"column_start":5,"column_end":30}},{"value":"/     // Serde allows us to name our headers exactly,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357352,"byte_end":357407,"line_start":664,"line_end":664,"column_start":5,"column_end":60}},{"value":"/     // even if they don't match our struct field names.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357412,"byte_end":357471,"line_start":665,"line_end":665,"column_start":5,"column_end":64}},{"value":"/     #[serde(rename = \"popcount\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357476,"byte_end":357513,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/     population: u64,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357518,"byte_end":357542,"line_start":667,"line_end":667,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357547,"byte_end":357552,"line_start":668,"line_end":668,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357557,"byte_end":357560,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357565,"byte_end":357604,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357609,"byte_end":357657,"line_start":671,"line_end":671,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357662,"byte_end":357712,"line_start":672,"line_end":672,"column_start":5,"column_end":55}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357717,"byte_end":357744,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/         city: \"Boston\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357749,"byte_end":357776,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/         country: \"United States\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357781,"byte_end":357818,"line_start":675,"line_end":675,"column_start":5,"column_end":42}},{"value":"/         population: 4628910,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357823,"byte_end":357855,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357860,"byte_end":357872,"line_start":677,"line_end":677,"column_start":5,"column_end":17}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357877,"byte_end":357904,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/         city: \"Concord\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357909,"byte_end":357937,"line_start":679,"line_end":679,"column_start":5,"column_end":33}},{"value":"/         country: \"United States\",","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357942,"byte_end":357979,"line_start":680,"line_end":680,"column_start":5,"column_end":42}},{"value":"/         population: 42695,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":357984,"byte_end":358014,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358019,"byte_end":358031,"line_start":682,"line_end":682,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358036,"byte_end":358039,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358044,"byte_end":358101,"line_start":684,"line_end":684,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358106,"byte_end":358133,"line_start":685,"line_end":685,"column_start":5,"column_end":32}},{"value":"/ city,country,popcount","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358138,"byte_end":358163,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/ Boston,United States,4628910","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358168,"byte_end":358200,"line_start":687,"line_end":687,"column_start":5,"column_end":37}},{"value":"/ Concord,United States,42695","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358205,"byte_end":358236,"line_start":688,"line_end":688,"column_start":5,"column_end":36}},{"value":"/ \");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358241,"byte_end":358248,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358253,"byte_end":358267,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358272,"byte_end":358277,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358282,"byte_end":358289,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358294,"byte_end":358297,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Rules","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358302,"byte_end":358313,"line_start":694,"line_end":694,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358318,"byte_end":358321,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ The behavior of `serialize` is fairly simple:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358326,"byte_end":358375,"line_start":696,"line_end":696,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358380,"byte_end":358383,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ 1. Nested containers (tuples, `Vec`s, structs, etc.) are always","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358388,"byte_end":358455,"line_start":698,"line_end":698,"column_start":5,"column_end":72}},{"value":"/    flattened (depth-first order).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358460,"byte_end":358497,"line_start":699,"line_end":699,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358502,"byte_end":358505,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ 2. If `has_headers` is `true` and the type contains field names, then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358510,"byte_end":358583,"line_start":701,"line_end":701,"column_start":5,"column_end":78}},{"value":"/    a header row is automatically generated.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358588,"byte_end":358635,"line_start":702,"line_end":702,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358640,"byte_end":358643,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ However, some container types cannot be serialized, and if","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358648,"byte_end":358710,"line_start":704,"line_end":704,"column_start":5,"column_end":67}},{"value":"/ `has_headers` is `true`, there are some additional restrictions on the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358715,"byte_end":358789,"line_start":705,"line_end":705,"column_start":5,"column_end":79}},{"value":"/ types that can be serialized. See below for details.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358794,"byte_end":358850,"line_start":706,"line_end":706,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358855,"byte_end":358858,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ For the purpose of this section, Rust types can be divided into three","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358863,"byte_end":358936,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ categories: scalars, non-struct containers, and structs.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":358941,"byte_end":359001,"line_start":709,"line_end":709,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359006,"byte_end":359009,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ## Scalars","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359014,"byte_end":359028,"line_start":711,"line_end":711,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359033,"byte_end":359036,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ Single values with no field names are written like the following. Note","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359041,"byte_end":359115,"line_start":713,"line_end":713,"column_start":5,"column_end":79}},{"value":"/ that some of the outputs may be quoted, according to the selected","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359120,"byte_end":359189,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ quoting style.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359194,"byte_end":359212,"line_start":715,"line_end":715,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359217,"byte_end":359220,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ | Name | Example Type | Example Value | Output |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359225,"byte_end":359277,"line_start":717,"line_end":717,"column_start":5,"column_end":57}},{"value":"/ | ---- | ---- | ---- | ---- |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359282,"byte_end":359315,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/ | boolean | `bool` | `true` | `true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359320,"byte_end":359362,"line_start":719,"line_end":719,"column_start":5,"column_end":47}},{"value":"/ | integers | `i8`, `i16`, `i32`, `i64`, `i128`, `u8`, `u16`, `u32`, `u64`, `u128` | `5` | `5` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359367,"byte_end":359466,"line_start":720,"line_end":720,"column_start":5,"column_end":104}},{"value":"/ | floats | `f32`, `f64` | `3.14` | `3.14` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359471,"byte_end":359518,"line_start":721,"line_end":721,"column_start":5,"column_end":52}},{"value":"/ | character | `char` | `'☃'` | `☃` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359523,"byte_end":359567,"line_start":722,"line_end":722,"column_start":5,"column_end":45}},{"value":"/ | string | `&str` | `\"hi\"` | `hi` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359572,"byte_end":359611,"line_start":723,"line_end":723,"column_start":5,"column_end":44}},{"value":"/ | bytes | `&[u8]` | `b\"hi\"[..]` | `hi` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359616,"byte_end":359660,"line_start":724,"line_end":724,"column_start":5,"column_end":49}},{"value":"/ | option | `Option` | `None` | *empty* |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359665,"byte_end":359709,"line_start":725,"line_end":725,"column_start":5,"column_end":49}},{"value":"/ | option |          | `Some(5)` | `5` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359714,"byte_end":359757,"line_start":726,"line_end":726,"column_start":5,"column_end":48}},{"value":"/ | unit | `()` | `()` | *empty* |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359762,"byte_end":359798,"line_start":727,"line_end":727,"column_start":5,"column_end":41}},{"value":"/ | unit struct | `struct Foo;` | `Foo` | `Foo` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359803,"byte_end":359854,"line_start":728,"line_end":728,"column_start":5,"column_end":56}},{"value":"/ | unit enum variant | `enum E { A, B }` | `E::A` | `A` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359859,"byte_end":359919,"line_start":729,"line_end":729,"column_start":5,"column_end":65}},{"value":"/ | newtype struct | `struct Foo(u8);` | `Foo(5)` | `5` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359924,"byte_end":359983,"line_start":730,"line_end":730,"column_start":5,"column_end":64}},{"value":"/ | newtype enum variant | `enum E { A(u8) }` | `E::A(5)` | `5` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":359988,"byte_end":360055,"line_start":731,"line_end":731,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360060,"byte_end":360063,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ Note that this table includes simple structs and enums. For example, to","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360068,"byte_end":360143,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/ serialize a field from either an integer or a float type, one can do","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360148,"byte_end":360220,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ this:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360225,"byte_end":360234,"line_start":735,"line_end":735,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360239,"byte_end":360242,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360247,"byte_end":360254,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360259,"byte_end":360285,"line_start":738,"line_end":738,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360290,"byte_end":360293,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ use csv::Writer;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360298,"byte_end":360318,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"/ use serde::Serialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360323,"byte_end":360348,"line_start":741,"line_end":741,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360353,"byte_end":360356,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360361,"byte_end":360385,"line_start":743,"line_end":743,"column_start":5,"column_end":29}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360390,"byte_end":360406,"line_start":744,"line_end":744,"column_start":5,"column_end":21}},{"value":"/     label: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360411,"byte_end":360433,"line_start":745,"line_end":745,"column_start":5,"column_end":27}},{"value":"/     value: Value,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360438,"byte_end":360459,"line_start":746,"line_end":746,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360464,"byte_end":360469,"line_start":747,"line_end":747,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360474,"byte_end":360477,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360482,"byte_end":360506,"line_start":749,"line_end":749,"column_start":5,"column_end":29}},{"value":"/ enum Value {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360511,"byte_end":360527,"line_start":750,"line_end":750,"column_start":5,"column_end":21}},{"value":"/     Integer(i64),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360532,"byte_end":360553,"line_start":751,"line_end":751,"column_start":5,"column_end":26}},{"value":"/     Float(f64),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360558,"byte_end":360577,"line_start":752,"line_end":752,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360582,"byte_end":360587,"line_start":753,"line_end":753,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360592,"byte_end":360595,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360600,"byte_end":360639,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360644,"byte_end":360692,"line_start":756,"line_end":756,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360697,"byte_end":360747,"line_start":757,"line_end":757,"column_start":5,"column_end":55}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360752,"byte_end":360779,"line_start":758,"line_end":758,"column_start":5,"column_end":32}},{"value":"/         label: \"foo\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360784,"byte_end":360821,"line_start":759,"line_end":759,"column_start":5,"column_end":42}},{"value":"/         value: Value::Integer(3),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360826,"byte_end":360863,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360868,"byte_end":360880,"line_start":761,"line_end":761,"column_start":5,"column_end":17}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360885,"byte_end":360912,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/         label: \"bar\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360917,"byte_end":360954,"line_start":763,"line_end":763,"column_start":5,"column_end":42}},{"value":"/         value: Value::Float(3.14),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":360959,"byte_end":360997,"line_start":764,"line_end":764,"column_start":5,"column_end":43}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361002,"byte_end":361014,"line_start":765,"line_end":765,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361019,"byte_end":361022,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361027,"byte_end":361084,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361089,"byte_end":361116,"line_start":768,"line_end":768,"column_start":5,"column_end":32}},{"value":"/ label,value","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361121,"byte_end":361136,"line_start":769,"line_end":769,"column_start":5,"column_end":20}},{"value":"/ foo,3","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361141,"byte_end":361150,"line_start":770,"line_end":770,"column_start":5,"column_end":14}},{"value":"/ bar,3.14","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361155,"byte_end":361167,"line_start":771,"line_end":771,"column_start":5,"column_end":17}},{"value":"/ \");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361172,"byte_end":361179,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361184,"byte_end":361198,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361203,"byte_end":361208,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361213,"byte_end":361220,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361225,"byte_end":361228,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ ## Non-Struct Containers","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361233,"byte_end":361261,"line_start":777,"line_end":777,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361266,"byte_end":361269,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ Nested containers are flattened to their scalar components, with the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361274,"byte_end":361346,"line_start":779,"line_end":779,"column_start":5,"column_end":77}},{"value":"/ exeption of a few types that are not allowed:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361351,"byte_end":361400,"line_start":780,"line_end":780,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361405,"byte_end":361408,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ | Name | Example Type | Example Value | Output |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361413,"byte_end":361465,"line_start":782,"line_end":782,"column_start":5,"column_end":57}},{"value":"/ | ---- | ---- | ---- | ---- |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361470,"byte_end":361503,"line_start":783,"line_end":783,"column_start":5,"column_end":38}},{"value":"/ | sequence | `Vec<u8>` | `vec![1, 2, 3]` | `1,2,3` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361508,"byte_end":361564,"line_start":784,"line_end":784,"column_start":5,"column_end":61}},{"value":"/ | tuple | `(u8, bool)` | `(5, true)` | `5,true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361569,"byte_end":361622,"line_start":785,"line_end":785,"column_start":5,"column_end":58}},{"value":"/ | tuple struct | `Foo(u8, bool)` | `Foo(5, true)` | `5,true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361627,"byte_end":361693,"line_start":786,"line_end":786,"column_start":5,"column_end":71}},{"value":"/ | tuple enum variant | `enum E { A(u8, bool) }` | `E::A(5, true)` | *error* |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361698,"byte_end":361779,"line_start":787,"line_end":787,"column_start":5,"column_end":86}},{"value":"/ | struct enum variant | `enum E { V { a: u8, b: bool } }` | `E::V { a: 5, b: true }` | *error* |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361784,"byte_end":361884,"line_start":788,"line_end":788,"column_start":5,"column_end":105}},{"value":"/ | map | `BTreeMap<K, V>` | `BTreeMap::new()` | *error* |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361889,"byte_end":361949,"line_start":789,"line_end":789,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361954,"byte_end":361957,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ ## Structs","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361962,"byte_end":361976,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361981,"byte_end":361984,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Like the other containers, structs are flattened to their scalar","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":361989,"byte_end":362057,"line_start":793,"line_end":793,"column_start":5,"column_end":73}},{"value":"/ components:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362062,"byte_end":362077,"line_start":794,"line_end":794,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362082,"byte_end":362085,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ | Name | Example Type | Example Value | Output |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362090,"byte_end":362142,"line_start":796,"line_end":796,"column_start":5,"column_end":57}},{"value":"/ | ---- | ---- | ---- | ---- |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362147,"byte_end":362180,"line_start":797,"line_end":797,"column_start":5,"column_end":38}},{"value":"/ | struct | `struct Foo { a: u8, b: bool }` | `Foo { a: 5, b: true }` | `5,true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362185,"byte_end":362270,"line_start":798,"line_end":798,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362275,"byte_end":362278,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ If `has_headers` is `false`, then there are no additional restrictions;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362283,"byte_end":362358,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ types can be nested arbitrarily. For example:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362363,"byte_end":362412,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362417,"byte_end":362420,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362425,"byte_end":362432,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362437,"byte_end":362463,"line_start":804,"line_end":804,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362468,"byte_end":362471,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ use csv::WriterBuilder;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362476,"byte_end":362503,"line_start":806,"line_end":806,"column_start":5,"column_end":32}},{"value":"/ use serde::Serialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362508,"byte_end":362533,"line_start":807,"line_end":807,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362538,"byte_end":362541,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362546,"byte_end":362570,"line_start":809,"line_end":809,"column_start":5,"column_end":29}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362575,"byte_end":362591,"line_start":810,"line_end":810,"column_start":5,"column_end":21}},{"value":"/     label: String,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362596,"byte_end":362618,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/     values: Vec<f64>,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362623,"byte_end":362648,"line_start":812,"line_end":812,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362653,"byte_end":362658,"line_start":813,"line_end":813,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362663,"byte_end":362666,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362671,"byte_end":362710,"line_start":815,"line_end":815,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362715,"byte_end":362763,"line_start":816,"line_end":816,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = WriterBuilder::new()","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362768,"byte_end":362810,"line_start":817,"line_end":817,"column_start":5,"column_end":47}},{"value":"/         .has_headers(false)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362815,"byte_end":362846,"line_start":818,"line_end":818,"column_start":5,"column_end":36}},{"value":"/         .from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362851,"byte_end":362884,"line_start":819,"line_end":819,"column_start":5,"column_end":38}},{"value":"/     wtr.serialize(Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362889,"byte_end":362916,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/         label: \"foo\".to_string(),","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362921,"byte_end":362958,"line_start":821,"line_end":821,"column_start":5,"column_end":42}},{"value":"/         values: vec![1.1234, 2.5678, 3.14],","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":362963,"byte_end":363010,"line_start":822,"line_end":822,"column_start":5,"column_end":52}},{"value":"/     })?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363015,"byte_end":363027,"line_start":823,"line_end":823,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363032,"byte_end":363035,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363040,"byte_end":363097,"line_start":825,"line_end":825,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363102,"byte_end":363129,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/ foo,1.1234,2.5678,3.14","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363134,"byte_end":363160,"line_start":827,"line_end":827,"column_start":5,"column_end":31}},{"value":"/ \");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363165,"byte_end":363172,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363177,"byte_end":363191,"line_start":829,"line_end":829,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363196,"byte_end":363201,"line_start":830,"line_end":830,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363206,"byte_end":363213,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363218,"byte_end":363221,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ However, if `has_headers` were enabled in the above example, then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363226,"byte_end":363295,"line_start":833,"line_end":833,"column_start":5,"column_end":74}},{"value":"/ serialization would return an error. Speficially, when `has_headers` is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363300,"byte_end":363375,"line_start":834,"line_end":834,"column_start":5,"column_end":80}},{"value":"/ `true`, there are two restrictions:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363380,"byte_end":363419,"line_start":835,"line_end":835,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363424,"byte_end":363427,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ 1. Named field values in structs must be scalars.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363432,"byte_end":363485,"line_start":837,"line_end":837,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363490,"byte_end":363493,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ 2. All scalars must be named field values in structs.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363498,"byte_end":363555,"line_start":839,"line_end":839,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363560,"byte_end":363563,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ Other than these two restrictions, types can be nested arbitrarily.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363568,"byte_end":363639,"line_start":841,"line_end":841,"column_start":5,"column_end":76}},{"value":"/ Here are a few examples:","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363644,"byte_end":363672,"line_start":842,"line_end":842,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363677,"byte_end":363680,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ | Value | Header | Record |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363685,"byte_end":363716,"line_start":844,"line_end":844,"column_start":5,"column_end":36}},{"value":"/ | ---- | ---- | ---- |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363721,"byte_end":363747,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/ | `(Foo { x: 5, y: 6 }, Bar { z: true })` | `x,y,z` | `5,6,true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363752,"byte_end":363822,"line_start":846,"line_end":846,"column_start":5,"column_end":75}},{"value":"/ | `vec![Foo { x: 5, y: 6 }, Foo { x: 7, y: 8 }]` | `x,y,x,y` | `5,6,7,8` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363827,"byte_end":363905,"line_start":847,"line_end":847,"column_start":5,"column_end":83}},{"value":"/ | `(Foo { x: 5, y: 6 }, vec![Bar { z: Baz(true) }])` | `x,y,z` | `5,6,true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363910,"byte_end":363991,"line_start":848,"line_end":848,"column_start":5,"column_end":86}},{"value":"/ | `Foo { x: 5, y: (6, 7) }` | *error: restriction 1* | `5,6,7` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":363996,"byte_end":364064,"line_start":849,"line_end":849,"column_start":5,"column_end":73}},{"value":"/ | `(5, Foo { x: 6, y: 7 }` | *error: restriction 2* | `5,6,7` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364069,"byte_end":364136,"line_start":850,"line_end":850,"column_start":5,"column_end":72}},{"value":"/ | `(Foo { x: 5, y: 6 }, true)` | *error: restriction 2* | `5,6,true` |","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364141,"byte_end":364215,"line_start":851,"line_end":851,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365668,"byte_end":365680,"line_start":893,"line_end":893,"column_start":12,"column_end":24},"name":"write_record","qualname":"<Writer<W>>::write_record","value":"fn <I, T> (&mut self, record: I) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a single record.","sig":null,"attributes":[{"value":"/ Write a single record.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364744,"byte_end":364770,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364775,"byte_end":364778,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ This method accepts something that can be turned into an iterator that","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364783,"byte_end":364857,"line_start":869,"line_end":869,"column_start":5,"column_end":79}},{"value":"/ yields elements that can be represented by a `&[u8]`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364862,"byte_end":364919,"line_start":870,"line_end":870,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364924,"byte_end":364927,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ This may be called with an empty iterator, which will cause a record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":364932,"byte_end":365004,"line_start":872,"line_end":872,"column_start":5,"column_end":77}},{"value":"/ terminator to be written. If no fields had been written, then a single","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365009,"byte_end":365083,"line_start":873,"line_end":873,"column_start":5,"column_end":79}},{"value":"/ empty field is written before the terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365088,"byte_end":365137,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365142,"byte_end":365145,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365150,"byte_end":365163,"line_start":876,"line_end":876,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365168,"byte_end":365171,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365176,"byte_end":365183,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365188,"byte_end":365214,"line_start":879,"line_end":879,"column_start":5,"column_end":31}},{"value":"/ use csv::Writer;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365219,"byte_end":365239,"line_start":880,"line_end":880,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365244,"byte_end":365247,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365252,"byte_end":365291,"line_start":882,"line_end":882,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365296,"byte_end":365344,"line_start":883,"line_end":883,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365349,"byte_end":365399,"line_start":884,"line_end":884,"column_start":5,"column_end":55}},{"value":"/     wtr.write_record(&[\"a\", \"b\", \"c\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365404,"byte_end":365448,"line_start":885,"line_end":885,"column_start":5,"column_end":49}},{"value":"/     wtr.write_record(&[\"x\", \"y\", \"z\"])?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365453,"byte_end":365497,"line_start":886,"line_end":886,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365502,"byte_end":365505,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365510,"byte_end":365567,"line_start":888,"line_end":888,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365572,"byte_end":365615,"line_start":889,"line_end":889,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365620,"byte_end":365634,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365639,"byte_end":365644,"line_start":891,"line_end":891,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365649,"byte_end":365656,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":367147,"byte_end":367164,"line_start":935,"line_end":935,"column_start":12,"column_end":29},"name":"write_byte_record","qualname":"<Writer<W>>::write_byte_record","value":"fn (&mut self, record: &ByteRecord) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a single `ByteRecord`.","sig":null,"attributes":[{"value":"/ Write a single `ByteRecord`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365936,"byte_end":365968,"line_start":904,"line_end":904,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365973,"byte_end":365976,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This method accepts a borrowed `ByteRecord` and writes its contents","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":365981,"byte_end":366052,"line_start":906,"line_end":906,"column_start":5,"column_end":76}},{"value":"/ to the underlying writer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366057,"byte_end":366086,"line_start":907,"line_end":907,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366091,"byte_end":366094,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ This is similar to `write_record` except that it specifically requires","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366099,"byte_end":366173,"line_start":909,"line_end":909,"column_start":5,"column_end":79}},{"value":"/ a `ByteRecord`. This permits the writer to possibly write the record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366178,"byte_end":366250,"line_start":910,"line_end":910,"column_start":5,"column_end":77}},{"value":"/ more quickly than the more generic `write_record`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366255,"byte_end":366309,"line_start":911,"line_end":911,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366314,"byte_end":366317,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This may be called with an empty record, which will cause a record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366322,"byte_end":366392,"line_start":913,"line_end":913,"column_start":5,"column_end":75}},{"value":"/ terminator to be written. If no fields had been written, then a single","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366397,"byte_end":366471,"line_start":914,"line_end":914,"column_start":5,"column_end":79}},{"value":"/ empty field is written before the terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366476,"byte_end":366525,"line_start":915,"line_end":915,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366530,"byte_end":366533,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366538,"byte_end":366551,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366556,"byte_end":366559,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366564,"byte_end":366571,"line_start":919,"line_end":919,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366576,"byte_end":366602,"line_start":920,"line_end":920,"column_start":5,"column_end":31}},{"value":"/ use csv::{ByteRecord, Writer};","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366607,"byte_end":366641,"line_start":921,"line_end":921,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366646,"byte_end":366649,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366654,"byte_end":366693,"line_start":923,"line_end":923,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366698,"byte_end":366746,"line_start":924,"line_end":924,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366751,"byte_end":366801,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/     wtr.write_byte_record(&ByteRecord::from(&[\"a\", \"b\", \"c\"][..]))?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366806,"byte_end":366878,"line_start":926,"line_end":926,"column_start":5,"column_end":77}},{"value":"/     wtr.write_byte_record(&ByteRecord::from(&[\"x\", \"y\", \"z\"][..]))?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366883,"byte_end":366955,"line_start":927,"line_end":927,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366960,"byte_end":366963,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":366968,"byte_end":367025,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":367030,"byte_end":367073,"line_start":930,"line_end":930,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":367078,"byte_end":367092,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":367097,"byte_end":367102,"line_start":932,"line_end":932,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":367107,"byte_end":367114,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"inline(never)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":367119,"byte_end":367135,"line_start":934,"line_end":934,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370617,"byte_end":370628,"line_start":1023,"line_end":1023,"column_start":12,"column_end":23},"name":"write_field","qualname":"<Writer<W>>::write_field","value":"fn <T> (&mut self, field: T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a single field.","sig":null,"attributes":[{"value":"/ Write a single field.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369519,"byte_end":369544,"line_start":991,"line_end":991,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369549,"byte_end":369552,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ One should prefer using `write_record` over this method. It is provided","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369557,"byte_end":369632,"line_start":993,"line_end":993,"column_start":5,"column_end":80}},{"value":"/ for cases where writing a field at a time is more convenient than","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369637,"byte_end":369706,"line_start":994,"line_end":994,"column_start":5,"column_end":74}},{"value":"/ writing a record at a time.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369711,"byte_end":369742,"line_start":995,"line_end":995,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369747,"byte_end":369750,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Note that if this API is used, `write_record` should be called with an","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369755,"byte_end":369829,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ empty iterator to write a record terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369834,"byte_end":369882,"line_start":998,"line_end":998,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369887,"byte_end":369890,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369895,"byte_end":369908,"line_start":1000,"line_end":1000,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369913,"byte_end":369916,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369921,"byte_end":369928,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369933,"byte_end":369959,"line_start":1003,"line_end":1003,"column_start":5,"column_end":31}},{"value":"/ use csv::Writer;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369964,"byte_end":369984,"line_start":1004,"line_end":1004,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369989,"byte_end":369992,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":369997,"byte_end":370036,"line_start":1006,"line_end":1006,"column_start":5,"column_end":44}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370041,"byte_end":370089,"line_start":1007,"line_end":1007,"column_start":5,"column_end":53}},{"value":"/     let mut wtr = Writer::from_writer(vec![]);","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370094,"byte_end":370144,"line_start":1008,"line_end":1008,"column_start":5,"column_end":55}},{"value":"/     wtr.write_field(\"a\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370149,"byte_end":370179,"line_start":1009,"line_end":1009,"column_start":5,"column_end":35}},{"value":"/     wtr.write_field(\"b\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370184,"byte_end":370214,"line_start":1010,"line_end":1010,"column_start":5,"column_end":35}},{"value":"/     wtr.write_field(\"c\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370219,"byte_end":370249,"line_start":1011,"line_end":1011,"column_start":5,"column_end":35}},{"value":"/     wtr.write_record(None::<&[u8]>)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370254,"byte_end":370295,"line_start":1012,"line_end":1012,"column_start":5,"column_end":46}},{"value":"/     wtr.write_field(\"x\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370300,"byte_end":370330,"line_start":1013,"line_end":1013,"column_start":5,"column_end":35}},{"value":"/     wtr.write_field(\"y\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370335,"byte_end":370365,"line_start":1014,"line_end":1014,"column_start":5,"column_end":35}},{"value":"/     wtr.write_field(\"z\")?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370370,"byte_end":370400,"line_start":1015,"line_end":1015,"column_start":5,"column_end":35}},{"value":"/     wtr.write_record(None::<&[u8]>)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370405,"byte_end":370446,"line_start":1016,"line_end":1016,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370451,"byte_end":370454,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/     let data = String::from_utf8(wtr.into_inner()?)?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370459,"byte_end":370516,"line_start":1018,"line_end":1018,"column_start":5,"column_end":62}},{"value":"/     assert_eq!(data, \"a,b,c\\nx,y,z\\n\");","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370521,"byte_end":370564,"line_start":1019,"line_end":1019,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370569,"byte_end":370583,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370588,"byte_end":370593,"line_start":1021,"line_end":1021,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":370598,"byte_end":370605,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371800,"byte_end":371805,"line_start":1057,"line_end":1057,"column_start":12,"column_end":17},"name":"flush","qualname":"<Writer<W>>::flush","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the contents of the internal buffer to the underlying writer.","sig":null,"attributes":[{"value":"/ Flush the contents of the internal buffer to the underlying writer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371542,"byte_end":371613,"line_start":1051,"line_end":1051,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371618,"byte_end":371621,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ If there was a problem writing to the underlying writer, then an error","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371626,"byte_end":371700,"line_start":1053,"line_end":1053,"column_start":5,"column_end":79}},{"value":"/ is returned.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371705,"byte_end":371721,"line_start":1054,"line_end":1054,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371726,"byte_end":371729,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Note that this also flushes the underlying writer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":371734,"byte_end":371788,"line_start":1056,"line_end":1056,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":372424,"byte_end":372434,"line_start":1076,"line_end":1076,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"fn (mut self) -> result::Result<W, IntoInnerError<Writer<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Flush the contents of the internal buffer and return the underlying\n writer.\n","sig":null,"attributes":[{"value":"/ Flush the contents of the internal buffer and return the underlying","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":372325,"byte_end":372396,"line_start":1074,"line_end":1074,"column_start":5,"column_end":76}},{"value":"/ writer.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":372401,"byte_end":372412,"line_start":1075,"line_end":1075,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4626,"byte_end":4632,"line_start":183,"line_end":183,"column_start":5,"column_end":11},"name":"Always","qualname":"::QuoteStyle::Always","value":"QuoteStyle::Always","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" This puts quotes around every field. Always.\n","sig":null,"attributes":[{"value":"/ This puts quotes around every field. Always.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4573,"byte_end":4621,"line_start":182,"line_end":182,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4967,"byte_end":4976,"line_start":191,"line_end":191,"column_start":5,"column_end":14},"name":"Necessary","qualname":"::QuoteStyle::Necessary","value":"QuoteStyle::Necessary","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" This puts quotes around fields only when necessary.","sig":null,"attributes":[{"value":"/ This puts quotes around fields only when necessary.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4638,"byte_end":4693,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4698,"byte_end":4701,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ They are necessary when fields contain a quote, delimiter or record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4706,"byte_end":4777,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ terminator. Quotes are also necessary when writing an empty record","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4782,"byte_end":4852,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ (which is indistinguishable from a record with one empty field).","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4857,"byte_end":4925,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4930,"byte_end":4933,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This is the default.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4938,"byte_end":4962,"line_start":190,"line_end":190,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5206,"byte_end":5216,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"name":"NonNumeric","qualname":"::QuoteStyle::NonNumeric","value":"QuoteStyle::NonNumeric","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" This puts quotes around all fields that are non-numeric. Namely, when\n writing a field that does not parse as a valid float or integer, then\n quotes will be used even if they aren't strictly necessary.\n","sig":null,"attributes":[{"value":"/ This puts quotes around all fields that are non-numeric. Namely, when","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4982,"byte_end":5055,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ writing a field that does not parse as a valid float or integer, then","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5060,"byte_end":5133,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ quotes will be used even if they aren't strictly necessary.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5138,"byte_end":5201,"line_start":194,"line_end":194,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5301,"byte_end":5306,"line_start":197,"line_end":197,"column_start":5,"column_end":10},"name":"Never","qualname":"::QuoteStyle::Never","value":"QuoteStyle::Never","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" This *never* writes quotes, even if it would produce invalid CSV data.\n","sig":null,"attributes":[{"value":"/ This *never* writes quotes, even if it would produce invalid CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5222,"byte_end":5296,"line_start":196,"line_end":196,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5586,"byte_end":5601,"line_start":204,"line_end":204,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::QuoteStyle::__Nonexhaustive","value":"QuoteStyle::__Nonexhaustive","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5312,"byte_end":5366,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5371,"byte_end":5374,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5379,"byte_end":5449,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5454,"byte_end":5526,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5531,"byte_end":5562,"line_start":202,"line_end":202,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4556,"byte_end":4566,"line_start":181,"line_end":181,"column_start":10,"column_end":20},"name":"QuoteStyle","qualname":"::QuoteStyle","value":"QuoteStyle::{Always, Necessary, NonNumeric, Never, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426}],"decl_id":null,"docs":" The quoting style to use when writing CSV data.\n","sig":null,"attributes":[{"value":"/ The quoting style to use when writing CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":179,"line_end":179,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6421,"byte_end":6425,"line_start":232,"line_end":232,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::Terminator::CRLF","value":"Terminator::CRLF","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.\n","sig":null,"attributes":[{"value":"/ Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6354,"byte_end":6416,"line_start":231,"line_end":231,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6485,"byte_end":6488,"line_start":234,"line_end":234,"column_start":5,"column_end":8},"name":"Any","qualname":"::Terminator::Any","value":"Terminator::Any(u8)","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Parses the byte given as a record terminator.\n","sig":null,"attributes":[{"value":"/ Parses the byte given as a record terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6431,"byte_end":6480,"line_start":233,"line_end":233,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6772,"byte_end":6787,"line_start":241,"line_end":241,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Terminator::__Nonexhaustive","value":"Terminator::__Nonexhaustive","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6498,"byte_end":6552,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6557,"byte_end":6560,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6565,"byte_end":6635,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6640,"byte_end":6712,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6717,"byte_end":6748,"line_start":239,"line_end":239,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6337,"byte_end":6347,"line_start":230,"line_end":230,"column_start":10,"column_end":20},"name":"Terminator","qualname":"::Terminator","value":"Terminator::{CRLF, Any, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1439}],"decl_id":null,"docs":" A record terminator.","sig":null,"attributes":[{"value":"/ A record terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6114,"byte_end":6138,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6139,"byte_end":6142,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Use this to specify the record terminator while parsing CSV. The default is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6143,"byte_end":6222,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ CRLF, which treats `\\r`, `\\n` or `\\r\\n` as a single record terminator.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6223,"byte_end":6297,"line_start":228,"line_end":228,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7396,"byte_end":7400,"line_start":265,"line_end":265,"column_start":5,"column_end":9},"name":"None","qualname":"::Trim::None","value":"Trim::None","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" Preserves fields and headers. This is the default.\n","sig":null,"attributes":[{"value":"/ Preserves fields and headers. This is the default.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7337,"byte_end":7391,"line_start":264,"line_end":264,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7444,"byte_end":7451,"line_start":267,"line_end":267,"column_start":5,"column_end":12},"name":"Headers","qualname":"::Trim::Headers","value":"Trim::Headers","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" Trim whitespace from headers.\n","sig":null,"attributes":[{"value":"/ Trim whitespace from headers.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7406,"byte_end":7439,"line_start":266,"line_end":266,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7511,"byte_end":7517,"line_start":269,"line_end":269,"column_start":5,"column_end":11},"name":"Fields","qualname":"::Trim::Fields","value":"Trim::Fields","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" Trim whitespace from fields, but not headers.\n","sig":null,"attributes":[{"value":"/ Trim whitespace from fields, but not headers.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7457,"byte_end":7506,"line_start":268,"line_end":268,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7572,"byte_end":7575,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"All","qualname":"::Trim::All","value":"Trim::All","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" Trim whitespace from fields and headers.\n","sig":null,"attributes":[{"value":"/ Trim whitespace from fields and headers.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7523,"byte_end":7567,"line_start":270,"line_end":270,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7855,"byte_end":7870,"line_start":278,"line_end":278,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Trim::__Nonexhaustive","value":"Trim::__Nonexhaustive","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7581,"byte_end":7635,"line_start":272,"line_end":272,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7640,"byte_end":7643,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7648,"byte_end":7718,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7723,"byte_end":7795,"line_start":275,"line_end":275,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7800,"byte_end":7831,"line_start":276,"line_end":276,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7326,"byte_end":7330,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Trim","qualname":"::Trim","value":"Trim::{None, Headers, Fields, All, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455}],"decl_id":null,"docs":" The whitespace preservation behaviour when reading CSV data.\n","sig":null,"attributes":[{"value":"/ The whitespace preservation behaviour when reading CSV data.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7211,"byte_end":7275,"line_start":261,"line_end":261,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10239,"byte_end":10253,"line_start":353,"line_end":353,"column_start":8,"column_end":22},"name":"invalid_option","qualname":"::invalid_option","value":"fn <'de, D, T> (de: D) -> result::Result<Option<T>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" A custom Serde deserializer for possibly invalid `Option<T>` fields.","sig":null,"attributes":[{"value":"/ A custom Serde deserializer for possibly invalid `Option<T>` fields.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8174,"byte_end":8246,"line_start":297,"line_end":297,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8247,"byte_end":8250,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ When deserializing CSV data, it is sometimes desirable to simply ignore","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8251,"byte_end":8326,"line_start":299,"line_end":299,"column_start":1,"column_end":76}},{"value":"/ fields with invalid data. For example, there might be a field that is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8327,"byte_end":8400,"line_start":300,"line_end":300,"column_start":1,"column_end":74}},{"value":"/ usually a number, but will occasionally contain garbage data that causes","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8401,"byte_end":8477,"line_start":301,"line_end":301,"column_start":1,"column_end":77}},{"value":"/ number parsing to fail.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8478,"byte_end":8505,"line_start":302,"line_end":302,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8506,"byte_end":8509,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ You might be inclined to use, say, `Option<i32>` for fields such at this.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8510,"byte_end":8587,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ By default, however, `Option<i32>` will either capture *empty* fields with","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8588,"byte_end":8666,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"/ `None` or valid numeric fields with `Some(the_number)`. If the field is","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8667,"byte_end":8742,"line_start":306,"line_end":306,"column_start":1,"column_end":76}},{"value":"/ non-empty and not a valid number, then deserialization will return an error","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8743,"byte_end":8822,"line_start":307,"line_end":307,"column_start":1,"column_end":80}},{"value":"/ instead of using `None`.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8823,"byte_end":8851,"line_start":308,"line_end":308,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8852,"byte_end":8855,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ This function allows you to override this default behavior. Namely, if","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8856,"byte_end":8930,"line_start":310,"line_end":310,"column_start":1,"column_end":75}},{"value":"/ `Option<T>` is deserialized with non-empty but invalid data, then the value","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8931,"byte_end":9010,"line_start":311,"line_end":311,"column_start":1,"column_end":80}},{"value":"/ will be `None` and the error will be ignored.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9011,"byte_end":9060,"line_start":312,"line_end":312,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9061,"byte_end":9064,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9065,"byte_end":9078,"line_start":314,"line_end":314,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9079,"byte_end":9082,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ This example shows how to parse CSV records with numerical data, even if","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9083,"byte_end":9159,"line_start":316,"line_end":316,"column_start":1,"column_end":77}},{"value":"/ some numerical data is absent or invalid. Without the","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9160,"byte_end":9217,"line_start":317,"line_end":317,"column_start":1,"column_end":58}},{"value":"/ `serde(deserialize_with = \"...\")` annotations, this example would return","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9218,"byte_end":9294,"line_start":318,"line_end":318,"column_start":1,"column_end":77}},{"value":"/ an error.","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9295,"byte_end":9308,"line_start":319,"line_end":319,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9309,"byte_end":9312,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9313,"byte_end":9320,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9321,"byte_end":9347,"line_start":322,"line_end":322,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9348,"byte_end":9351,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ use csv::Reader;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9352,"byte_end":9372,"line_start":324,"line_end":324,"column_start":1,"column_end":21}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9373,"byte_end":9400,"line_start":325,"line_end":325,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9401,"byte_end":9404,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, Eq, PartialEq)]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9405,"byte_end":9453,"line_start":327,"line_end":327,"column_start":1,"column_end":49}},{"value":"/ struct Row {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9454,"byte_end":9470,"line_start":328,"line_end":328,"column_start":1,"column_end":17}},{"value":"/     #[serde(deserialize_with = \"csv::invalid_option\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9471,"byte_end":9529,"line_start":329,"line_end":329,"column_start":1,"column_end":59}},{"value":"/     a: Option<i32>,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9530,"byte_end":9553,"line_start":330,"line_end":330,"column_start":1,"column_end":24}},{"value":"/     #[serde(deserialize_with = \"csv::invalid_option\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9554,"byte_end":9612,"line_start":331,"line_end":331,"column_start":1,"column_end":59}},{"value":"/     b: Option<i32>,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9613,"byte_end":9636,"line_start":332,"line_end":332,"column_start":1,"column_end":24}},{"value":"/     #[serde(deserialize_with = \"csv::invalid_option\")]","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9637,"byte_end":9695,"line_start":333,"line_end":333,"column_start":1,"column_end":59}},{"value":"/     c: Option<i32>,","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9696,"byte_end":9719,"line_start":334,"line_end":334,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9720,"byte_end":9725,"line_start":335,"line_end":335,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9726,"byte_end":9729,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ # fn main() { example().unwrap(); }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9730,"byte_end":9769,"line_start":337,"line_end":337,"column_start":1,"column_end":40}},{"value":"/ fn example() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9770,"byte_end":9818,"line_start":338,"line_end":338,"column_start":1,"column_end":49}},{"value":"/     let data = \"\\","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9819,"byte_end":9840,"line_start":339,"line_end":339,"column_start":1,"column_end":22}},{"value":"/ a,b,c","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9841,"byte_end":9850,"line_start":340,"line_end":340,"column_start":1,"column_end":10}},{"value":"/ 5,\\\"\\\",xyz","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9851,"byte_end":9865,"line_start":341,"line_end":341,"column_start":1,"column_end":15}},{"value":"/ \";","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9866,"byte_end":9872,"line_start":342,"line_end":342,"column_start":1,"column_end":7}},{"value":"/     let mut rdr = Reader::from_reader(data.as_bytes());","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9873,"byte_end":9932,"line_start":343,"line_end":343,"column_start":1,"column_end":60}},{"value":"/     if let Some(result) = rdr.deserialize().next() {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9933,"byte_end":9989,"line_start":344,"line_end":344,"column_start":1,"column_end":57}},{"value":"/         let record: Row = result?;","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":9990,"byte_end":10028,"line_start":345,"line_end":345,"column_start":1,"column_end":39}},{"value":"/         assert_eq!(record, Row { a: Some(5), b: None, c: None });","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10029,"byte_end":10098,"line_start":346,"line_end":346,"column_start":1,"column_end":70}},{"value":"/         Ok(())","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10099,"byte_end":10117,"line_start":347,"line_end":347,"column_start":1,"column_end":19}},{"value":"/     } else {","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10118,"byte_end":10134,"line_start":348,"line_end":348,"column_start":1,"column_end":17}},{"value":"/         Err(From::from(\"expected at least one record but got none\"))","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10135,"byte_end":10207,"line_start":349,"line_end":349,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10208,"byte_end":10217,"line_start":350,"line_end":350,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10218,"byte_end":10223,"line_start":351,"line_end":351,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":10224,"byte_end":10231,"line_start":352,"line_end":352,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11894,"byte_end":11904,"line_start":36,"line_end":36,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":12139,"byte_end":12149,"line_start":45,"line_end":45,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":12416,"byte_end":12426,"line_start":57,"line_end":57,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":12664,"byte_end":12674,"line_start":69,"line_end":69,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13558,"byte_end":13568,"line_start":95,"line_end":95,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13658,"byte_end":13668,"line_start":102,"line_end":102,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27978,"byte_end":27986,"line_start":582,"line_end":582,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":29656,"byte_end":29662,"line_start":643,"line_end":643,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":29755,"byte_end":29761,"line_start":650,"line_end":650,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31459,"byte_end":31469,"line_start":713,"line_end":713,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31617,"byte_end":31627,"line_start":721,"line_end":721,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31775,"byte_end":31785,"line_start":728,"line_end":728,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31929,"byte_end":31939,"line_start":735,"line_end":735,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32081,"byte_end":32091,"line_start":742,"line_end":742,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32309,"byte_end":32319,"line_start":751,"line_end":751,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":33489,"byte_end":33503,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":33534,"byte_end":33548,"line_start":796,"line_end":796,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":34200,"byte_end":34214,"line_start":824,"line_end":824,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":54325,"byte_end":54337,"line_start":104,"line_end":104,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":55536,"byte_end":55550,"line_start":157,"line_end":157,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":57895,"byte_end":57907,"line_start":241,"line_end":241,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70614,"byte_end":70630,"line_start":687,"line_end":687,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70799,"byte_end":70815,"line_start":693,"line_end":693,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70917,"byte_end":70933,"line_start":699,"line_end":699,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71190,"byte_end":71210,"line_start":709,"line_end":709,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71799,"byte_end":71815,"line_start":727,"line_end":727,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":72086,"byte_end":72106,"line_start":739,"line_end":739,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86300,"byte_end":86305,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89245,"byte_end":89254,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89817,"byte_end":89822,"line_start":125,"line_end":125,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89937,"byte_end":89942,"line_start":131,"line_end":131,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":90061,"byte_end":90066,"line_start":137,"line_end":137,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":90535,"byte_end":90540,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93111,"byte_end":93124,"line_start":228,"line_end":228,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93590,"byte_end":93603,"line_start":245,"line_end":245,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93716,"byte_end":93729,"line_start":251,"line_end":251,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94500,"byte_end":94509,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94817,"byte_end":94826,"line_start":288,"line_end":288,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94853,"byte_end":94862,"line_start":290,"line_end":290,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95467,"byte_end":95481,"line_start":312,"line_end":312,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96247,"byte_end":96261,"line_start":337,"line_end":337,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96387,"byte_end":96401,"line_start":343,"line_end":343,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96522,"byte_end":96536,"line_start":349,"line_end":349,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97699,"byte_end":97712,"line_start":34,"line_end":34,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97992,"byte_end":98005,"line_start":46,"line_end":46,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124123,"byte_end":124129,"line_start":789,"line_end":789,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124896,"byte_end":124902,"line_start":816,"line_end":816,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158777,"byte_end":158783,"line_start":1782,"line_end":1782,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162884,"byte_end":162895,"line_start":1888,"line_end":1888,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164089,"byte_end":164115,"line_start":1922,"line_end":1922,"column_start":40,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164974,"byte_end":165000,"line_start":1954,"line_end":1954,"column_start":9,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165806,"byte_end":165828,"line_start":1980,"line_end":1980,"column_start":44,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166562,"byte_end":166584,"line_start":2007,"line_end":2007,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167037,"byte_end":167058,"line_start":2026,"line_end":2026,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167633,"byte_end":167654,"line_start":2047,"line_end":2047,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168212,"byte_end":168229,"line_start":2068,"line_end":2068,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168683,"byte_end":168700,"line_start":2084,"line_end":2084,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169147,"byte_end":169166,"line_start":2102,"line_end":2102,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169735,"byte_end":169754,"line_start":2123,"line_end":2123,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170311,"byte_end":170326,"line_start":2144,"line_end":2144,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170774,"byte_end":170789,"line_start":2160,"line_end":2160,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/serializer.rs","byte_start":195734,"byte_end":195739,"line_start":356,"line_end":356,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/serializer.rs","byte_start":199881,"byte_end":199889,"line_start":453,"line_end":453,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225461,"byte_end":225473,"line_start":38,"line_end":38,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225610,"byte_end":225622,"line_start":44,"line_end":44,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225895,"byte_end":225907,"line_start":56,"line_end":56,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226151,"byte_end":226163,"line_start":68,"line_end":68,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226354,"byte_end":226366,"line_start":75,"line_end":75,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226460,"byte_end":226472,"line_start":82,"line_end":82,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244330,"byte_end":244342,"line_start":648,"line_end":648,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244497,"byte_end":244509,"line_start":656,"line_end":656,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244667,"byte_end":244679,"line_start":663,"line_end":663,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244824,"byte_end":244836,"line_start":670,"line_end":670,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245057,"byte_end":245069,"line_start":679,"line_end":679,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245716,"byte_end":245732,"line_start":705,"line_end":705,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":246255,"byte_end":246271,"line_start":728,"line_end":728,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336218,"byte_end":336231,"line_start":30,"line_end":30,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336466,"byte_end":336479,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354185,"byte_end":354191,"line_start":561,"line_end":561,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354336,"byte_end":354342,"line_start":569,"line_end":569,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355206,"byte_end":355212,"line_start":596,"line_end":596,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":374942,"byte_end":374948,"line_start":1155,"line_end":1155,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5611,"byte_end":5621,"line_start":207,"line_end":207,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6029,"byte_end":6039,"line_start":219,"line_end":219,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6797,"byte_end":6807,"line_start":244,"line_end":244,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7131,"byte_end":7141,"line_start":255,"line_end":255,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7880,"byte_end":7884,"line_start":281,"line_end":281,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8112,"byte_end":8116,"line_start":291,"line_end":291,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4348,"byte_end":4356,"line_start":170,"line_end":170,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":159}},{"kind":"Mod","span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":4442,"byte_end":4450,"line_start":176,"line_end":176,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1016}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":11894,"byte_end":11904,"line_start":36,"line_end":36,"column_start":20,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":12139,"byte_end":12149,"line_start":45,"line_end":45,"column_start":44,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":12416,"byte_end":12426,"line_start":57,"line_end":57,"column_start":41,"column_end":51},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":12664,"byte_end":12674,"line_start":69,"line_end":69,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13558,"byte_end":13568,"line_start":95,"line_end":95,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":13658,"byte_end":13668,"line_start":102,"line_end":102,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":27978,"byte_end":27986,"line_start":582,"line_end":582,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":29656,"byte_end":29662,"line_start":643,"line_end":643,"column_start":18,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":29755,"byte_end":29761,"line_start":650,"line_end":650,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31459,"byte_end":31469,"line_start":713,"line_end":713,"column_start":28,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31617,"byte_end":31627,"line_start":721,"line_end":721,"column_start":29,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31775,"byte_end":31785,"line_start":728,"line_end":728,"column_start":39,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":31929,"byte_end":31939,"line_start":735,"line_end":735,"column_start":44,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32081,"byte_end":32091,"line_start":742,"line_end":742,"column_start":42,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":4755}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":32309,"byte_end":32319,"line_start":751,"line_end":751,"column_start":36,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":33489,"byte_end":33503,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":33534,"byte_end":33548,"line_start":796,"line_end":796,"column_start":23,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/byte_record.rs","byte_start":34200,"byte_end":34214,"line_start":824,"line_end":824,"column_start":34,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":54325,"byte_end":54337,"line_start":104,"line_end":104,"column_start":44,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":212},"to":{"krate":0,"index":200}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":55536,"byte_end":55550,"line_start":157,"line_end":157,"column_start":27,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":229},"to":{"krate":0,"index":200}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":57895,"byte_end":57907,"line_start":241,"line_end":241,"column_start":27,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":250},"to":{"krate":0,"index":200}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70614,"byte_end":70630,"line_start":687,"line_end":687,"column_start":21,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1199},"to":{"krate":15,"index":8087}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70799,"byte_end":70815,"line_start":693,"line_end":693,"column_start":19,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1199},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":70917,"byte_end":70933,"line_start":699,"line_end":699,"column_start":23,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1199},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71190,"byte_end":71210,"line_start":709,"line_end":709,"column_start":23,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":71799,"byte_end":71815,"line_start":727,"line_end":727,"column_start":6,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/deserializer.rs","byte_start":72086,"byte_end":72106,"line_start":739,"line_end":739,"column_start":6,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":86300,"byte_end":86305,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89245,"byte_end":89254,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89817,"byte_end":89822,"line_start":125,"line_end":125,"column_start":26,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":89937,"byte_end":89942,"line_start":131,"line_end":131,"column_start":26,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":2505},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":90061,"byte_end":90066,"line_start":137,"line_end":137,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1251},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":90535,"byte_end":90540,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93111,"byte_end":93124,"line_start":228,"line_end":228,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93590,"byte_end":93603,"line_start":245,"line_end":245,"column_start":23,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":93716,"byte_end":93729,"line_start":251,"line_end":251,"column_start":19,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1279},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94500,"byte_end":94509,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94817,"byte_end":94826,"line_start":288,"line_end":288,"column_start":19,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":94853,"byte_end":94862,"line_start":290,"line_end":290,"column_start":23,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":95467,"byte_end":95481,"line_start":312,"line_end":312,"column_start":9,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96247,"byte_end":96261,"line_start":337,"line_end":337,"column_start":37,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":431},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96387,"byte_end":96401,"line_start":343,"line_end":343,"column_start":26,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/error.rs","byte_start":96522,"byte_end":96536,"line_start":349,"line_end":349,"column_start":24,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97699,"byte_end":97712,"line_start":34,"line_end":34,"column_start":18,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":97992,"byte_end":98005,"line_start":46,"line_end":46,"column_start":6,"column_end":19},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124123,"byte_end":124129,"line_start":789,"line_end":789,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":124896,"byte_end":124902,"line_start":816,"line_end":816,"column_start":19,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":158777,"byte_end":158783,"line_start":1782,"line_end":1782,"column_start":30,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":162884,"byte_end":162895,"line_start":1888,"line_end":1888,"column_start":6,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164089,"byte_end":164115,"line_start":1922,"line_end":1922,"column_start":40,"column_end":66},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":164974,"byte_end":165000,"line_start":1954,"line_end":1954,"column_start":9,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":165806,"byte_end":165828,"line_start":1980,"line_end":1980,"column_start":44,"column_end":66},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":166562,"byte_end":166584,"line_start":2007,"line_end":2007,"column_start":9,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":550},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167037,"byte_end":167058,"line_start":2026,"line_end":2026,"column_start":19,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":167633,"byte_end":167654,"line_start":2047,"line_end":2047,"column_start":32,"column_end":53},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168212,"byte_end":168229,"line_start":2068,"line_end":2068,"column_start":23,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":168683,"byte_end":168700,"line_start":2084,"line_end":2084,"column_start":36,"column_end":53},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169147,"byte_end":169166,"line_start":2102,"line_end":2102,"column_start":19,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":169735,"byte_end":169754,"line_start":2123,"line_end":2123,"column_start":32,"column_end":51},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170311,"byte_end":170326,"line_start":2144,"line_end":2144,"column_start":23,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/reader.rs","byte_start":170774,"byte_end":170789,"line_start":2160,"line_end":2160,"column_start":36,"column_end":51},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/serializer.rs","byte_start":195734,"byte_end":195739,"line_start":356,"line_end":356,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1251},"to":{"krate":15,"index":8701}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/serializer.rs","byte_start":199881,"byte_end":199889,"line_start":453,"line_end":453,"column_start":24,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225461,"byte_end":225473,"line_start":38,"line_end":38,"column_start":20,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225610,"byte_end":225622,"line_start":44,"line_end":44,"column_start":44,"column_end":56},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":225895,"byte_end":225907,"line_start":56,"line_end":56,"column_start":41,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226151,"byte_end":226163,"line_start":68,"line_end":68,"column_start":21,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226354,"byte_end":226366,"line_start":75,"line_end":75,"column_start":18,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":226460,"byte_end":226472,"line_start":82,"line_end":82,"column_start":6,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244330,"byte_end":244342,"line_start":648,"line_end":648,"column_start":28,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244497,"byte_end":244509,"line_start":656,"line_end":656,"column_start":38,"column_end":50},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244667,"byte_end":244679,"line_start":663,"line_end":663,"column_start":43,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":244824,"byte_end":244836,"line_start":670,"line_end":670,"column_start":41,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":4755}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245057,"byte_end":245069,"line_start":679,"line_end":679,"column_start":35,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":245716,"byte_end":245732,"line_start":705,"line_end":705,"column_start":23,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1370},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/string_record.rs","byte_start":246255,"byte_end":246271,"line_start":728,"line_end":728,"column_start":34,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1370},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336218,"byte_end":336231,"line_start":30,"line_end":30,"column_start":18,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":336466,"byte_end":336479,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354185,"byte_end":354191,"line_start":561,"line_end":561,"column_start":29,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1384},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":354336,"byte_end":354342,"line_start":569,"line_end":569,"column_start":6,"column_end":12},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":355206,"byte_end":355212,"line_start":596,"line_end":596,"column_start":20,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/writer.rs","byte_start":374942,"byte_end":374948,"line_start":1155,"line_end":1155,"column_start":6,"column_end":12},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":5611,"byte_end":5621,"line_start":207,"line_end":207,"column_start":6,"column_end":16},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6029,"byte_end":6039,"line_start":219,"line_end":219,"column_start":18,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":6797,"byte_end":6807,"line_start":244,"line_end":244,"column_start":6,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7131,"byte_end":7141,"line_start":255,"line_end":255,"column_start":18,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1433},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":7880,"byte_end":7884,"line_start":281,"line_end":281,"column_start":6,"column_end":10},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/likongyang/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.4/src/lib.rs","byte_start":8112,"byte_end":8116,"line_start":291,"line_end":291,"column_start":18,"column_end":22},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":1895}}]}